{"version":3,"sources":["theme.js","components/BasicButton/BasicButton.js","components/BasicSelect/BasicSelect.js","components/ButtonsPanel/ButtonsPanel.style.js","components/ButtonsPanel/ButtonsPanel.js","helpers/TimeHelpers/timeHelpers.js","components/PlanCard/PlanCard.style.js","components/PlanCard/PlanCard.js","components/Menu/Menu.style.js","components/Menu/Menu.js","redux/TrelloUser/actions.js","redux/TrelloUser/selectors.js","redux/TrelloUser/reducer.js","redux/App/actions.js","components/Menu/Menu.wrap.js","components/Dashboard/Dashboard.style.js","components/PlannorPopin/PlannorPopin.style.js","components/PlannorPopin/PlannorPopin.js","components/EditTeamPopin/EditTeamPopin.style.js","components/EditTeamPopin/EditTeamPopin.js","components/EditTeamPopin/EditTeamPopin.wrap.js","components/DevSelectionPopin/DevSelectionPopin.style.js","components/DevSelectionPopin/DevSelectionPopin.js","redux/App/reducer.js","components/DevSelectionPopin/DevSelectionPopin.wrap.js","redux/App/selectors.js","components/PlanColumn/PlanColumn.style.js","components/PlanColumn/PlanColumn.js","components/ColumnHeader/ColumnHeader.style.js","components/ColumnHeader/ColumnHeader.js","components/HourLine/HourLine.style.js","components/HourLine/HourLine.js","components/ProdPlan/ProdPlan.style.js","components/ProdPlan/ProdPlan.js","components/ProdPlan/ProdPlan.wrap.js","components/Dashboard/Dashboard.js","components/Dashboard/Dashboard.wrap.js","pages/Home/Home.js","pages/Home/Home.wrap.js","routes.js","services/i18n/intl.js","components/Header/Header.style.js","components/Header/Header.js","components/Root/Root.style.js","components/Root/Root.js","components/Root/Root.wrap.js","redux/reducers.js","App.js","redux/plannorStore.js","serviceWorker.js","index.js","redux/store.js"],"names":["createMuiTheme","typography","useNextVariants","palette","primary","blue","BasicButton","react_default","a","createElement","Button_default","style","this","props","onClick","onClickAction","variant","color","label","Component","BasicSelect","FormControl_default","propStyle","InputLabel_default","htmlFor","Select_default","value","onChange","handleChange","options","map","option","MenuItem_default","key","styles","panelButton","minWidth","minHeight","width","height","padding","settingsButton","marginRight","editTeamButton","refreshButton","ButtonsPanel","components_BasicButton_BasicButton","Object","objectSpread","className","isTeamEditable","editTeamAction","refreshAction","React","timeInMinutes","time","hour","minute","durationInMinutes","startTime","endTime","splitTimeFromString","timeString","split","parseInt","stringTimeFromObject","timeObject","toString","cardContainer","backgroundColor","MozBoxShadow","WebkitBoxShadow","boxShadow","borderRadius","boxSizing","footerIcon","display","flexDirection","icon","cursor","PlanCard","topProp","dayStartTime","dayEndTime","heightProp","timedCardContainerStyle","top","position","content","action","name","boardSelect","buttonsPanel","justifyContent","connectToTrelloButton","cardsContainer","marginTop","flexGrow","overflowY","planCard","Menu","_this","window","Trello","authorize","type","scope","read","write","expiration","success","fetchTrelloUser","fetchTrelloUserBoards","_this2","fetchData","boardSelectOptions","trelloUserBoards","board","id","dailyGoalsSelectOptions","trelloUserColumns","column","authorized","length","ButtonsPanel_ButtonsPanel","fetchTrelloUserColumns","trelloUserSelectedBoard","fetchDailyGoalsCards","trelloUserDailyGoalsColumn","toggleEditTeamPopin","components_BasicSelect_BasicSelect","event","addTrelloUserSelectedBoard","target","trelloUserSprintColumn","addTrelloUserSprintColumn","fetchSprintBacklogCards","addTrelloUserDailyGoalsColumn","trelloUserSprintBacklogCards","card","PlanCard_PlanCard","toggleDevSelectionPopin","addDevSelectionCard","openDevSelectionPopin","constants","FETCH_TRELLO_USER","REQUEST","SUCCESS","ERROR","FETCH_TRELLO_USER_BOARDS","FETCH_TRELLO_USER_COLUMNS","FETCH_TRELLO_USER_DAILY_GOALS_CARDS","FETCH_TRELLO_USER_SPRINT_BACKLOG_CARDS","FETCH_TRELLO_USER_BOARD_MEMBERS","TAG_DEVS_ON_CARD","MOVE_CARD_TO_DAILY_GOALS","ADD_TRELLO_USER_SELECTED_BOARD","ADD_TRELLO_USER_DAILY_GOALS_COLUMN","ADD_TRELLO_USER_SPRINT_COLUMN","TOGGLE_TRELLO_TEAM_MEMBERSHIP","ADD_CARD_TO_DEV_DAILY_CARDS","REMOVE_CARDS_FROM_SPRINT_BACKLOG","fetchTrelloUserRequest","fetchTrelloUserSuccess","user","payload","fetchTrelloUserError","error","errorMessage","message","fetchTrelloUserBoardMembers","dispatch","get","fields","data","boardOrigin","members","fetchTrelloUserBoardMembersError","toggleTrelloUserTeamMembership","memberId","getTrelloUserSelectedBoard","state","trelloUserState","selectedBoard","getTrelloUserDailyGoalsColumn","dailyGoalsColumn","getTrelloUserBoardMembers","boardMembers","getTrelloUserBoardMembersOrigin","boardMembersOrigin","getTrelloUserDevTeam","project","devTeam","initialState","fullName","username","boards","columns","cards","sprintColumn","isLoading","TOGGLE_EDIT_TEAM_POPIN","TOGGLE_DEV_SELECTION_POPIN","ADD_DEV_SELECTION_CARD","TOGGLE_MEMBER_SELECTION","mapDispatchToProps","fetchTrelloUserBoardsError","fetchTrelloUserColumnsError","fetchTrelloUserDailyGoalsCardsError","fetchTrelloUserSprintBacklogCardsError","connect","trelloUserFullName","getTrelloUserFullName","getTrelloUserBoards","getTrelloUserColumns","trelloUserDailyGoalsCards","getTrelloUserDailyGoalsCards","getTrelloUserSprintColumn","getTrelloUserSprintBacklogCards","withRouter","dashboard","fontFamily","menu","prodPlan","popInContainer","left","transform","background","zIndex","PlannorPopin","editTeamPopin","maxWidth","avatarContainer","verticalAlign","alignItems","margin","avatarInTeam","border","avatar","overflow","undefinedAvatar","textTransform","editTeamPopinFooter","textAlign","EditTeamPopin","trelloUserBoardMembers","trelloUserBoardMembersOrigin","member","bind","isInTeam","title","avatarHash","alt","src","initials","PlannorPopin_PlannorPopin","warningMessage","marginBottom","DevSelectionPopin","devTeamMembers","startTimeString","selectedCard","endTimeString","toggleMemberSelection","selectedMembers","includes","TextField_default","defaultValue","InputLabelProps","shrink","inputProps","step","tagDevsOnCard","moveCardToDailyGoals","removeCardFromSprintBacklog","isEditTeamPopinOpen","devSelectionPopin","isOpen","membersId","forEach","post","devId","addCardToDevDailyCards","dailyGoalsColumnId","put","cardId","appState","getDevSelectionCard","getSelectedMembers","container","columnHeader","flex","grid","gridItem","PlanColumn","picture","devName","fontSize","ColumnHeader","hourLine","borderTop","hourLabel","marginLeft","HourLine","headerContainer","overflowX","columnHeadersContainer","planContainer","columnsContainer","errorDiv","errorLabel","ProdPlan","ColumnHeader_ColumnHeader","HourLine_HourLine","PlanColumn_PlanColumn","dailyCards","Dashboard","Menu_wrap","ProdPlan_wrap","EditTeamPopin_wrap","isDevSelectionPopinOpen","DevSelectionPopin_wrap","Home","react","Dashboard_wrap","routes","fallback","Switch","es_Route","exact","path","component","flattenMessages","nestedMessages","prefix","arguments","undefined","keys","reduce","messages","prefixedKey","concat","assign","header","locales","fr","frMessages","en","enMessages","addLocaleData","toConsumableArray","Header","index_es","locale","rootContainer","Root","children","Header_Header","combineReducers","memberIndex","indexOf","filter","dev","initialStates","RootComponentWithRoutes","Root_wrap","src_routes","store","context","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middlewares","thunkMiddleware","createStore","reducers","applyMiddleware","apply","configureStore","App","es","theme","BrowserRouter","basename","Route","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","history","createBrowserHistory","persistor","rootEl","document","getElementById","ReactDOM","render","App_App","URL","process","origin","addEventListener","fetch","response","status","headers","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.05b04951.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles';\nimport blue from '@material-ui/core/colors/blue';\n\nexport default createMuiTheme({\n  typography: {\n    useNextVariants: true,\n  },\n  palette: {\n    primary: blue,\n  },\n});\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\n\nclass BasicButton extends Component {\n  render() {\n    return (\n      <Button\n        style={this.props.style}\n        onClick={this.props.onClickAction}\n        variant=\"contained\"\n        color=\"primary\"\n      >\n        {this.props.label}\n      </Button>\n    );\n  }\n}\n\nexport default BasicButton;\n","import React, { Component } from 'react';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nclass BasicSelect extends Component {\n  render() {\n    return (\n      <FormControl style={this.props.propStyle}>\n        <InputLabel htmlFor=\"age-simple\">{this.props.label}</InputLabel>\n        <Select value={this.props.value} onChange={this.props.handleChange}>\n          {this.props.options.map(option => (\n            <MenuItem key={option.value} value={option.value}>\n              {option.label}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    );\n  }\n}\n\nexport default BasicSelect;\n","const styles = {\n  panelButton: {\n    minWidth: 'auto',\n    minHeight: 'auto',\n    width: '32px',\n    height: '32px',\n    padding: 0,\n  },\n  settingsButton: {\n    marginRight: 5,\n  },\n  editTeamButton: {\n    marginRight: 5,\n  },\n  refreshButton: {},\n};\n\nexport default styles;\n","// @flow\nimport React from 'react';\nimport BasicButton from '../BasicButton';\nimport styles from './ButtonsPanel.style';\n\nexport default class ButtonsPanel extends React.Component {\n  render() {\n    return (\n      <div style={this.props.style}>\n        <BasicButton\n          style={{ ...styles.panelButton, ...styles.settingsButton }}\n          label={<i className=\"material-icons\">settings</i>}\n        />\n        {!!this.props.isTeamEditable && (\n          <BasicButton\n            style={{ ...styles.panelButton, ...styles.editTeamButton }}\n            label={<i className=\"material-icons\">people</i>}\n            onClickAction={this.props.editTeamAction}\n          />\n        )}\n        <BasicButton\n          style={{ ...styles.panelButton, ...styles.refreshButton }}\n          label={<i className=\"material-icons\">refresh</i>}\n          onClickAction={this.props.refreshAction}\n        />\n      </div>\n    );\n  }\n}\n","export function timeInMinutes(time) {\n  return time.hour * 60 + time.minute;\n}\n\nexport function durationInMinutes(startTime, endTime) {\n  return timeInMinutes(endTime) - timeInMinutes(startTime);\n}\n\nexport function splitTimeFromString(timeString) {\n  const startTime = timeString.split(':');\n  return { hour: parseInt(startTime[0]), minute: parseInt(startTime[1]) };\n}\n\nexport function stringTimeFromObject(timeObject) {\n  const hours =\n    timeObject.hour >= 10 ? timeObject.hour.toString() : '0' + timeObject.hour.toString();\n  const minutes =\n    timeObject.minute >= 10 ? timeObject.minute.toString() : '0' + timeObject.minute.toString();\n  return hours + ':' + minutes;\n}\n","const styles = {\n  cardContainer: {\n    width: '100%',\n    backgroundColor: '#2196f3dd',\n    MozBoxShadow: '2px 2px 10px #cccccc',\n    WebkitBoxShadow: '2px 2px 10px #cccccc',\n    boxShadow: '2px 2px 10px #cccccc',\n    borderRadius: 5,\n    padding: 10,\n    boxSizing: 'border-box',\n    color: 'white',\n  },\n  footerIcon: {\n    display: 'flex',\n    flexDirection: 'row-reverse',\n  },\n  icon: {\n    cursor: 'pointer',\n  },\n};\n\nexport default styles;\n","// @flow\nimport React from 'react';\nimport { timeInMinutes, durationInMinutes } from '../../helpers';\nimport styles from './PlanCard.style';\n\nexport default class PlanCard extends React.Component {\n  render() {\n    const topProp =\n      this.props.startTime && this.props.dayStartTime && this.props.dayEndTime\n        ? (100 * (timeInMinutes(this.props.startTime) - timeInMinutes(this.props.dayStartTime))) /\n            durationInMinutes(this.props.dayStartTime, this.props.dayEndTime) +\n          '%'\n        : null;\n    const heightProp =\n      this.props.startTime && this.props.endTime && this.props.dayStartTime && this.props.dayEndTime\n        ? (100 * (timeInMinutes(this.props.endTime) - timeInMinutes(this.props.startTime))) /\n            durationInMinutes(this.props.dayStartTime, this.props.dayEndTime) +\n          '%'\n        : null;\n    const timedCardContainerStyle =\n      topProp && heightProp ? { top: topProp, height: heightProp, position: 'absolute' } : null;\n    return (\n      <div style={{ ...this.props.style, ...styles.cardContainer, ...timedCardContainerStyle }}>\n        {this.props.content}\n        <div style={styles.footerIcon}>\n          <i style={styles.icon} className=\"material-icons\" onClick={this.props.icon.action}>\n            {this.props.icon.name}\n          </i>\n        </div>\n      </div>\n    );\n  }\n}\n","const styles = {\n  boardSelect: {\n    width: '100%',\n  },\n  buttonsPanel: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  connectToTrelloButton: {\n    display: 'inline-block',\n  },\n  cardsContainer: {\n    marginTop: 7,\n    flexGrow: 100,\n    overflowY: 'scroll',\n  },\n  planCard: {\n    marginTop: 5,\n  },\n};\n\nexport default styles;\n","// @flow\nimport React from 'react';\nimport BasicButton from '../BasicButton';\nimport BasicSelect from '../BasicSelect';\nimport ButtonsPanel from '../ButtonsPanel';\nimport PlanCard from '../PlanCard';\nimport styles from './Menu.style';\n\nexport default class Menu extends React.Component {\n  componentWillMount() {\n    const fetchData = () => {\n      this.props.fetchTrelloUser();\n      this.props.fetchTrelloUserBoards();\n    };\n\n    window.Trello.authorize({\n      type: 'popup',\n      name: 'Plannor 3000',\n      scope: {\n        read: 'true',\n        write: 'true',\n      },\n      expiration: 'never',\n      success: fetchData,\n    });\n  }\n\n  render() {\n    const fetchData = () => {\n      this.props.fetchTrelloUser();\n      this.props.fetchTrelloUserBoards();\n    };\n\n    const connectToTrello = () => {\n      window.Trello.authorize({\n        type: 'popup',\n        name: 'Plannor 3000',\n        scope: {\n          read: 'true',\n          write: 'true',\n        },\n        expiration: 'never',\n        success: fetchData,\n      });\n    };\n    const boardSelectOptions = this.props.trelloUserBoards\n      ? this.props.trelloUserBoards.map(function(board) {\n          return { value: board.id, label: board.name };\n        })\n      : null;\n    const dailyGoalsSelectOptions = this.props.trelloUserColumns\n      ? this.props.trelloUserColumns.map(function(column) {\n          return { value: column.id, label: column.name };\n        })\n      : null;\n    const handleBoardChange = event => {\n      this.props.addTrelloUserSelectedBoard(event.target.value);\n      this.props.fetchTrelloUserColumns(event.target.value);\n    };\n    const handleDailyGoalsChange = event => {\n      this.props.addTrelloUserDailyGoalsColumn(event.target.value);\n      this.props.fetchDailyGoalsCards(event.target.value);\n    };\n    const handleSprintColumnChange = event => {\n      this.props.addTrelloUserSprintColumn(event.target.value);\n      this.props.fetchSprintBacklogCards(event.target.value);\n    };\n    const refreshAction = () => {\n      this.props.fetchTrelloUserColumns(this.props.trelloUserSelectedBoard);\n      this.props.fetchDailyGoalsCards(this.props.trelloUserDailyGoalsColumn);\n    };\n    const editTeamAction = () => {\n      this.props.toggleEditTeamPopin();\n    };\n    const openDevSelectionPopin = card => {\n      this.props.toggleDevSelectionPopin();\n      this.props.addDevSelectionCard(card);\n    };\n    return (\n      <div style={this.props.style}>\n        {!window.Trello.authorized() && (\n          <BasicButton\n            style={styles.connectToTrelloButton}\n            label=\"Se connecter avec Trello\"\n            onClickAction={connectToTrello}\n          />\n        )}\n        {this.props.trelloUserBoards && this.props.trelloUserBoards.length > 0 && (\n          <div>\n            <ButtonsPanel\n              style={styles.buttonsPanel}\n              refreshAction={refreshAction}\n              isTeamEditable={this.props.trelloUserSelectedBoard.length}\n              editTeamAction={editTeamAction}\n            />\n            <BasicSelect\n              propStyle={styles.boardSelect}\n              value={this.props.trelloUserSelectedBoard}\n              handleChange={handleBoardChange}\n              label=\"Sélectionnez un board\"\n              options={boardSelectOptions}\n            />\n            {this.props.trelloUserSelectedBoard !== '' && (\n              <div>\n                <BasicSelect\n                  propStyle={styles.boardSelect}\n                  value={this.props.trelloUserSprintColumn}\n                  handleChange={handleSprintColumnChange}\n                  label=\"Sélectionnez la colonne Sprint Backlog\"\n                  options={dailyGoalsSelectOptions}\n                />\n                <BasicSelect\n                  propStyle={styles.boardSelect}\n                  value={this.props.trelloUserDailyGoalsColumn}\n                  handleChange={handleDailyGoalsChange}\n                  label=\"Sélectionnez la colonne Daily Goals\"\n                  options={dailyGoalsSelectOptions}\n                />\n              </div>\n            )}\n          </div>\n        )}\n        <div style={styles.cardsContainer}>\n          {this.props.trelloUserSprintBacklogCards.length > 0 &&\n            this.props.trelloUserSprintBacklogCards.map(card => (\n              <PlanCard\n                style={styles.planCard}\n                key={card.id}\n                content={card.name}\n                icon={{\n                  name: 'arrow_right_alt',\n                  action: () => openDevSelectionPopin(card),\n                }}\n              />\n            ))}\n        </div>\n      </div>\n    );\n  }\n}\n","export const constants = {\n  FETCH_TRELLO_USER: {\n    REQUEST: 'FETCH_TRELLO_USER_REQUEST',\n    SUCCESS: 'FETCH_TRELLO_USER_SUCCESS',\n    ERROR: 'FETCH_TRELLO_USER_ERROR',\n  },\n  FETCH_TRELLO_USER_BOARDS: {\n    REQUEST: 'FETCH_TRELLO_USER_BOARDS_REQUEST',\n    SUCCESS: 'FETCH_TRELLO_USER_BOARDS_SUCCESS',\n    ERROR: 'FETCH_TRELLO_USER_BOARDS_ERROR',\n  },\n  FETCH_TRELLO_USER_COLUMNS: {\n    REQUEST: 'FETCH_TRELLO_USER_COLUMNS_REQUEST',\n    SUCCESS: 'FETCH_TRELLO_USER_COLUMNS_SUCCESS',\n    ERROR: 'FETCH_TRELLO_USER_COLUMNS_ERROR',\n  },\n  FETCH_TRELLO_USER_DAILY_GOALS_CARDS: {\n    REQUEST: 'FETCH_TRELLO_USER_DAILY_GOALS_CARDS_REQUEST',\n    SUCCESS: 'FETCH_TRELLO_USER_DAILY_GOALS_CARDS_SUCCESS',\n    ERROR: 'FETCH_TRELLO_USER_DAILY_GOALS_CARDS_ERROR',\n  },\n  FETCH_TRELLO_USER_SPRINT_BACKLOG_CARDS: {\n    REQUEST: 'FETCH_TRELLO_USER_SPRINT_BACKLOG_CARDS_REQUEST',\n    SUCCESS: 'FETCH_TRELLO_USER_SPRINT_BACKLOG_CARDS_SUCCESS',\n    ERROR: 'FETCH_TRELLO_USER_SPRINT_BACKLOG_CARDS_ERROR',\n  },\n  FETCH_TRELLO_USER_BOARD_MEMBERS: {\n    REQUEST: 'FETCH_TRELLO_USER_BOARD_MEMBERS_REQUEST',\n    SUCCESS: 'FETCH_TRELLO_USER_BOARD_MEMBERS_SUCCESS',\n    ERROR: 'FETCH_TRELLO_USER_BOARD_MEMBERS_ERROR',\n  },\n  TAG_DEVS_ON_CARD: {\n    REQUEST: 'TAG_DEVS_ON_CARD_REQUEST',\n    SUCCESS: 'TAG_DEVS_ON_CARD_SUCCESS',\n    ERROR: 'TAG_DEVS_ON_CARD_ERROR',\n  },\n  MOVE_CARD_TO_DAILY_GOALS: {\n    REQUEST: 'MOVE_CARD_TO_DAILY_GOALS_REQUEST',\n    SUCCESS: 'MOVE_CARD_TO_DAILY_GOALS_SUCCESS',\n    ERROR: 'MOVE_CARD_TO_DAILY_GOALS_ERROR',\n  },\n  ADD_TRELLO_USER_SELECTED_BOARD: 'ADD_TRELLO_USER_SELECTED_BOARD',\n  ADD_TRELLO_USER_DAILY_GOALS_COLUMN: 'ADD_TRELLO_USER_DAILY_GOALS_COLUMN',\n  ADD_TRELLO_USER_SPRINT_COLUMN: 'ADD_TRELLO_USER_SPRINT_COLUMN',\n  TOGGLE_TRELLO_TEAM_MEMBERSHIP: 'TOGGLE_TRELLO_TEAM_MEMBERSHIP',\n  ADD_CARD_TO_DEV_DAILY_CARDS: 'ADD_CARD_TO_DEV_DAILY_CARDS',\n  REMOVE_CARDS_FROM_SPRINT_BACKLOG: 'REMOVE_CARDS_FROM_SPRINT_BACKLOG',\n};\n\nexport function fetchTrelloUserRequest() {\n  return {\n    type: constants.FETCH_TRELLO_USER.REQUEST,\n  };\n}\n\nexport function fetchTrelloUserSuccess(user) {\n  return {\n    type: constants.FETCH_TRELLO_USER.SUCCESS,\n    payload: { user },\n  };\n}\n\nexport function fetchTrelloUserError(error) {\n  return {\n    type: constants.FETCH_TRELLO_USER.ERROR,\n    payload: { errorMessage: error.message },\n  };\n}\n\nexport function fetchTrelloUserBoardsRequest() {\n  return {\n    type: constants.FETCH_TRELLO_USER_BOARDS.REQUEST,\n  };\n}\n\nexport function fetchTrelloUserBoardsSuccess(boards) {\n  return {\n    type: constants.FETCH_TRELLO_USER_BOARDS.SUCCESS,\n    payload: { boards },\n  };\n}\n\nexport function fetchTrelloUserBoardsError(error) {\n  return {\n    type: constants.FETCH_TRELLO_USER_BOARDS.ERROR,\n    payload: { errorMessage: error.message },\n  };\n}\n\nexport function addTrelloUserSelectedBoard(board) {\n  return {\n    type: constants.ADD_TRELLO_USER_SELECTED_BOARD,\n    payload: { board },\n  };\n}\n\nexport function fetchTrelloUserColumnsRequest() {\n  return {\n    type: constants.FETCH_TRELLO_USER_COLUMNS.REQUEST,\n  };\n}\n\nexport function fetchTrelloUserColumnsSuccess(columns) {\n  return {\n    type: constants.FETCH_TRELLO_USER_COLUMNS.SUCCESS,\n    payload: { columns },\n  };\n}\n\nexport function fetchTrelloUserColumnsError(error) {\n  return {\n    type: constants.FETCH_TRELLO_USER_COLUMNS.ERROR,\n    payload: { errorMessage: error.message },\n  };\n}\n\nexport function addTrelloUserDailyGoalsColumn(column) {\n  return {\n    type: constants.ADD_TRELLO_USER_DAILY_GOALS_COLUMN,\n    payload: { column },\n  };\n}\n\nexport function addTrelloUserSprintColumn(column) {\n  return {\n    type: constants.ADD_TRELLO_USER_SPRINT_COLUMN,\n    payload: { column },\n  };\n}\n\nexport function fetchTrelloUserDailyGoalsCardsRequest() {\n  return {\n    type: constants.FETCH_TRELLO_USER_DAILY_GOALS_CARDS.REQUEST,\n  };\n}\n\nexport function fetchTrelloUserDailyGoalsCardsSuccess(cards) {\n  return {\n    type: constants.FETCH_TRELLO_USER_DAILY_GOALS_CARDS.SUCCESS,\n    payload: { cards },\n  };\n}\n\nexport function fetchTrelloUserDailyGoalsCardsError(error) {\n  return {\n    type: constants.FETCH_TRELLO_USER_DAILY_GOALS_CARDS.ERROR,\n    payload: { errorMessage: error.message },\n  };\n}\n\nexport function fetchTrelloUserSprintBacklogCardsRequest() {\n  return {\n    type: constants.FETCH_TRELLO_USER_SPRINT_BACKLOG_CARDS.REQUEST,\n  };\n}\n\nexport function fetchTrelloUserSprintBacklogCardsSuccess(cards) {\n  return {\n    type: constants.FETCH_TRELLO_USER_SPRINT_BACKLOG_CARDS.SUCCESS,\n    payload: { cards },\n  };\n}\n\nexport function fetchTrelloUserSprintBacklogCardsError(error) {\n  return {\n    type: constants.FETCH_TRELLO_USER_SPRINT_BACKLOG_CARDS.ERROR,\n    payload: { errorMessage: error.message },\n  };\n}\n\nexport const fetchTrelloUser = () => {\n  return dispatch => {\n    dispatch(fetchTrelloUserRequest());\n    window.Trello.members.get(\n      `me`,\n      { fields: 'username,fullName' },\n      data => dispatch(fetchTrelloUserSuccess(data)),\n      error => dispatch(fetchTrelloUserError(error)),\n    );\n  };\n};\n\nexport const fetchTrelloUserBoards = () => {\n  return dispatch => {\n    dispatch(fetchTrelloUserBoardsRequest());\n    window.Trello.members.get(\n      `me/boards`,\n      { fields: 'name,lists=open' },\n      data => dispatch(fetchTrelloUserBoardsSuccess(data)),\n      error => dispatch(fetchTrelloUserBoardsError(error)),\n    );\n  };\n};\n\nexport const fetchTrelloUserColumns = board => {\n  return dispatch => {\n    dispatch(fetchTrelloUserColumnsRequest());\n    window.Trello.get(\n      `boards/` + board + `/lists`,\n      { fields: 'name' },\n      data => dispatch(fetchTrelloUserColumnsSuccess(data)),\n      error => dispatch(fetchTrelloUserColumnsError(error)),\n    );\n  };\n};\n\nexport const fetchDailyGoalsCards = column => {\n  return dispatch => {\n    dispatch(fetchTrelloUserDailyGoalsCardsRequest());\n    window.Trello.get(\n      `lists/` + column + `/cards`,\n      { fields: 'idShort,name,idMembers' },\n      data => dispatch(fetchTrelloUserDailyGoalsCardsSuccess(data)),\n      error => dispatch(fetchTrelloUserDailyGoalsCardsError(error)),\n    );\n  };\n};\n\nexport const fetchSprintBacklogCards = column => {\n  return dispatch => {\n    dispatch(fetchTrelloUserSprintBacklogCardsRequest());\n    window.Trello.get(\n      `lists/` + column + `/cards`,\n      { fields: 'idShort,name,idMembers' },\n      data => dispatch(fetchTrelloUserSprintBacklogCardsSuccess(data)),\n      error => dispatch(fetchTrelloUserSprintBacklogCardsError(error)),\n    );\n  };\n};\n\nexport function fetchTrelloUserBoardMembersRequest() {\n  return {\n    type: constants.FETCH_TRELLO_USER_BOARD_MEMBERS.REQUEST,\n  };\n}\n\nexport function fetchTrelloUserBoardMembersSuccess(boardOrigin, members) {\n  return {\n    type: constants.FETCH_TRELLO_USER_BOARD_MEMBERS.SUCCESS,\n    payload: { boardOrigin, members },\n  };\n}\n\nexport function fetchTrelloUserBoardMembersError(error) {\n  return {\n    type: constants.FETCH_TRELLO_USER_BOARD_MEMBERS.ERROR,\n    payload: { errorMessage: error.message },\n  };\n}\n\nexport const fetchTrelloUserBoardMembers = board => {\n  return dispatch => {\n    dispatch(fetchTrelloUserBoardMembersRequest());\n    window.Trello.get(\n      `boards/` + board + `/members`,\n      { fields: 'avatarHash,fullName,initials' },\n      data => dispatch(fetchTrelloUserBoardMembersSuccess(board, data)),\n      error => dispatch(fetchTrelloUserBoardMembersError(error)),\n    );\n  };\n};\n\nexport function toggleTrelloUserTeamMembership(memberId) {\n  return {\n    type: constants.TOGGLE_TRELLO_TEAM_MEMBERSHIP,\n    payload: { memberId },\n  };\n}\n\nexport function tagDevsOnCardRequest() {\n  return {\n    type: constants.TAG_DEVS_ON_CARD.REQUEST,\n  };\n}\n\nexport function tagDevsOnCardSuccess() {\n  return {\n    type: constants.TAG_DEVS_ON_CARD.SUCCESS,\n  };\n}\n\nexport function tagDevsOnCardError(error) {\n  return {\n    type: constants.TAG_DEVS_ON_CARD.ERROR,\n    payload: { errorMessage: error.message },\n  };\n}\n\nexport function addCardToDevDailyCards(devId, card) {\n  return {\n    type: constants.ADD_CARD_TO_DEV_DAILY_CARDS,\n    payload: { devId, card },\n  };\n}\n\nexport function tagDevsOnCard(card, membersId) {\n  return dispatch => {\n    dispatch(tagDevsOnCardRequest());\n    membersId.forEach(memberId => {\n      if (window.Trello.post(`cards/` + card.id + '/idMembers', { value: memberId })) {\n        dispatch(addCardToDevDailyCards(memberId, card));\n      }\n    });\n  };\n}\n\nexport function moveCardToDailyGoalsRequest() {\n  return {\n    type: constants.MOVE_CARD_TO_DAILY_GOALS.REQUEST,\n  };\n}\n\nexport function moveCardToDailyGoals(card, dailyGoalsColumnId) {\n  return dispatch => {\n    dispatch(moveCardToDailyGoalsRequest());\n    window.Trello.put(`cards/` + card.id + '/idList', { value: dailyGoalsColumnId });\n  };\n}\n\nexport function removeCardFromSprintBacklog(cardId) {\n  return {\n    type: constants.REMOVE_CARDS_FROM_SPRINT_BACKLOG,\n    payload: { cardId },\n  };\n}\n\nexport default {\n  fetchTrelloUserRequest,\n  fetchTrelloUserSuccess,\n  fetchTrelloUserError,\n};\n","export const getTrelloUserFullName = state => state.trelloUserState.user.fullName;\nexport const getTrelloUserBoards = state => state.trelloUserState.user.boards;\nexport const getTrelloUserSelectedBoard = state => state.trelloUserState.user.selectedBoard;\nexport const getTrelloUserColumns = state => state.trelloUserState.user.columns;\nexport const getTrelloUserDailyGoalsColumn = state =>\n  state.trelloUserState.user.dailyGoalsColumn.id;\nexport const getTrelloUserDailyGoalsCards = state =>\n  state.trelloUserState.user.dailyGoalsColumn.cards;\nexport const getTrelloUserSprintColumn = state => state.trelloUserState.user.sprintColumn.id;\nexport const getTrelloUserSprintBacklogCards = state =>\n  state.trelloUserState.user.sprintColumn.cards;\nexport const getTrelloUserBoardMembers = state => state.trelloUserState.user.boardMembers;\nexport const getTrelloUserBoardMembersOrigin = state =>\n  state.trelloUserState.user.boardMembersOrigin;\nexport const getTrelloUserDevTeam = state => state.trelloUserState.project.devTeam;\n","import { constants } from './actions';\n\nexport const initialState = {\n  user: {\n    fullName: null,\n    username: null,\n    boards: [],\n    selectedBoard: '',\n    columns: [],\n    dailyGoalsColumn: {\n      id: '',\n      cards: [],\n    },\n    sprintColumn: {\n      id: '',\n      cards: [],\n    },\n    boardMembers: [],\n  },\n  project: {\n    devTeam: [],\n  },\n  error: null,\n  isLoading: false,\n};\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case constants.FETCH_TRELLO_USER.REQUEST:\n      return {\n        ...state,\n        isLoading: true,\n      };\n    case constants.FETCH_TRELLO_USER.SUCCESS:\n      return {\n        ...state,\n        user: { ...state.user, ...action.payload.user },\n        isLoading: false,\n      };\n    case constants.FETCH_TRELLO_USER.ERROR:\n      return {\n        ...state,\n        error: action.payload,\n        isLoading: false,\n      };\n    case constants.FETCH_TRELLO_USER_BOARDS.REQUEST:\n      return {\n        ...state,\n        isLoading: true,\n      };\n    case constants.FETCH_TRELLO_USER_BOARDS.SUCCESS:\n      return {\n        ...state,\n        user: { ...state.user, boards: action.payload.boards },\n        isLoading: false,\n      };\n    case constants.FETCH_TRELLO_USER_BOARDS.ERROR:\n      return {\n        ...state,\n        error: action.payload,\n        isLoading: false,\n      };\n    case constants.ADD_TRELLO_USER_SELECTED_BOARD:\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          selectedBoard: action.payload.board,\n        },\n      };\n    case constants.FETCH_TRELLO_USER_COLUMNS.SUCCESS:\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          columns: action.payload.columns,\n        },\n      };\n    case constants.ADD_TRELLO_USER_DAILY_GOALS_COLUMN:\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          dailyGoalsColumn: { ...state.user.dailyGoalsColumn, id: action.payload.column },\n        },\n      };\n    case constants.ADD_TRELLO_USER_SPRINT_COLUMN:\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          sprintColumn: { ...state.user.sprintColumn, id: action.payload.column },\n        },\n      };\n    case constants.FETCH_TRELLO_USER_DAILY_GOALS_CARDS.SUCCESS:\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          dailyGoalsColumn: {\n            ...state.user.dailyGoalsColumn,\n            cards: action.payload.cards,\n          },\n        },\n      };\n    case constants.FETCH_TRELLO_USER_SPRINT_BACKLOG_CARDS.SUCCESS:\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          sprintColumn: {\n            ...state.user.sprintColumn,\n            cards: action.payload.cards,\n          },\n        },\n      };\n    case constants.FETCH_TRELLO_USER_BOARD_MEMBERS.SUCCESS:\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          boardMembers: action.payload.members,\n          boardMembersOrigin: action.payload.boardOrigin,\n        },\n      };\n    case constants.TOGGLE_TRELLO_TEAM_MEMBERSHIP:\n      const memberIndex = state.project.devTeam\n        .map(function(member) {\n          return member.id;\n        })\n        .indexOf(action.payload.memberId);\n      return {\n        ...state,\n        project: {\n          ...state.project,\n          devTeam:\n            memberIndex !== -1\n              ? state.project.devTeam.filter(member => member.id !== action.payload.memberId)\n              : state.project.devTeam.concat({\n                  ...state.user.boardMembers.filter(\n                    member => member.id === action.payload.memberId,\n                  )[0],\n                  dailyCards: [],\n                }),\n        },\n        user: {\n          ...state.user,\n          boardMembers: state.user.boardMembers.map(member => {\n            if (member.id === action.payload.memberId) {\n              return { ...member, isInTeam: !member.isInTeam };\n            }\n            return member;\n          }),\n        },\n      };\n    case constants.ADD_CARD_TO_DEV_DAILY_CARDS:\n      return {\n        ...state,\n        project: {\n          ...state.project,\n          devTeam: state.project.devTeam.map(dev =>\n            dev.id === action.payload.devId\n              ? { ...dev, dailyCards: [...dev.dailyCards, action.payload.card] }\n              : dev,\n          ),\n        },\n      };\n    case constants.REMOVE_CARDS_FROM_SPRINT_BACKLOG:\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          sprintColumn: {\n            ...state.user.sprintColumn,\n            cards: state.user.sprintColumn.cards.filter(card => card.id !== action.payload.cardId),\n          },\n        },\n      };\n    default:\n      return state;\n  }\n}\n","export const constants = {\n  TOGGLE_EDIT_TEAM_POPIN: 'TOGGLE_EDIT_TEAM_POPIN',\n  TOGGLE_DEV_SELECTION_POPIN: 'TOGGLE_DEV_SELECTION_POPIN',\n  ADD_DEV_SELECTION_CARD: 'ADD_DEV_SELECTION_CARD',\n  TOGGLE_MEMBER_SELECTION: 'TOGGLE_MEMBER_SELECTION',\n};\n\nexport function toggleEditTeamPopin() {\n  return {\n    type: constants.TOGGLE_EDIT_TEAM_POPIN,\n  };\n}\n\nexport function toggleDevSelectionPopin() {\n  return {\n    type: constants.TOGGLE_DEV_SELECTION_POPIN,\n  };\n}\n\nexport function addDevSelectionCard(card) {\n  return {\n    type: constants.ADD_DEV_SELECTION_CARD,\n    payload: { card },\n  };\n}\n\nexport function toggleMemberSelection(memberId) {\n  return {\n    type: constants.TOGGLE_MEMBER_SELECTION,\n    payload: { memberId },\n  };\n}\n\nexport default {\n  toggleEditTeamPopin,\n  toggleDevSelectionPopin,\n  addDevSelectionCard,\n};\n","import Menu from './Menu';\nimport {\n  fetchTrelloUserBoards,\n  fetchTrelloUser,\n  fetchTrelloUserColumns,\n  fetchDailyGoalsCards,\n  addTrelloUserSelectedBoard,\n  addTrelloUserDailyGoalsColumn,\n  addTrelloUserSprintColumn,\n  fetchSprintBacklogCards,\n} from 'redux/TrelloUser/actions';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport {\n  getTrelloUserFullName,\n  getTrelloUserBoards,\n  getTrelloUserSelectedBoard,\n  getTrelloUserColumns,\n  getTrelloUserDailyGoalsColumn,\n  getTrelloUserDailyGoalsCards,\n  getTrelloUserSprintColumn,\n  getTrelloUserSprintBacklogCards,\n} from 'redux/TrelloUser';\nimport {\n  toggleEditTeamPopin,\n  toggleDevSelectionPopin,\n  addDevSelectionCard,\n} from 'redux/App/actions';\n\nconst mapStateToProps = state => ({\n  trelloUserFullName: getTrelloUserFullName(state),\n  trelloUserBoards: getTrelloUserBoards(state),\n  trelloUserSelectedBoard: getTrelloUserSelectedBoard(state),\n  trelloUserColumns: getTrelloUserColumns(state),\n  trelloUserDailyGoalsColumn: getTrelloUserDailyGoalsColumn(state),\n  trelloUserDailyGoalsCards: getTrelloUserDailyGoalsCards(state),\n  trelloUserSprintColumn: getTrelloUserSprintColumn(state),\n  trelloUserSprintBacklogCards: getTrelloUserSprintBacklogCards(state),\n});\n\nconst mapDispatchToProps = {\n  fetchTrelloUser,\n  fetchTrelloUserBoards,\n  fetchTrelloUserColumns,\n  fetchDailyGoalsCards,\n  addTrelloUserSelectedBoard,\n  addTrelloUserDailyGoalsColumn,\n  toggleEditTeamPopin,\n  toggleDevSelectionPopin,\n  addDevSelectionCard,\n  addTrelloUserSprintColumn,\n  fetchSprintBacklogCards,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(withRouter(Menu));\n","const styles = {\n  dashboard: {\n    display: 'flex',\n    fontFamily: 'Roboto',\n    height: '100vh',\n  },\n  menu: {\n    display: 'flex',\n    flexDirection: 'column',\n    padding: 15,\n    fontFamily: 'Roboto',\n    width: 300,\n    boxSizing: 'border-box',\n    MozBoxShadow: '2px 0 10px #cccccc',\n    WebkitBoxShadow: '2px 0 10px #cccccc',\n    boxShadow: '2px 0 10px #cccccc',\n  },\n  prodPlan: {\n    display: 'flex',\n    flexGrow: 100,\n    flexDirection: 'column',\n    position: 'relative',\n  },\n};\n\nexport default styles;\n","const styles = {\n  popInContainer: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    padding: 30,\n    background: 'white',\n    MozBoxShadow: '2px 2px 10px #cccccc',\n    WebkitBoxShadow: '2px 2px 10px #cccccc',\n    boxShadow: '2px 2px 10px #cccccc',\n    zIndex: 1,\n    borderRadius: 10,\n  },\n};\n\nexport default styles;\n","// @flow\nimport React from 'react';\nimport styles from './PlannorPopin.style';\n\nexport default class PlannorPopin extends React.Component {\n  render() {\n    return (\n      <div style={{ ...this.props.style, ...styles.popInContainer }}>{this.props.content}</div>\n    );\n  }\n}\n","const styles = {\n  editTeamPopin: {\n    maxWidth: 600,\n  },\n  avatarContainer: {\n    verticalAlign: 'top',\n    display: 'inline-flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    margin: 5,\n    minWidth: 50,\n    minHeight: 50,\n    cursor: 'pointer',\n    borderRadius: '50%',\n    boxSizing: 'border-box',\n  },\n  avatarInTeam: {\n    border: '4px solid orange',\n    margin: 1,\n  },\n  avatar: {\n    borderRadius: '50%',\n    overflow: 'hidden',\n  },\n  undefinedAvatar: {\n    width: 50,\n    height: 50,\n    display: 'inline-flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 50,\n    background: '#dddddd',\n    textTransform: 'uppercase',\n  },\n  editTeamPopinFooter: {\n    textAlign: 'right',\n  },\n};\n\nexport default styles;\n","// @flow\nimport React from 'react';\nimport PlannorPopin from '../PlannorPopin';\nimport styles from './EditTeamPopin.style';\nimport BasicButton from '../BasicButton';\n\nexport default class EditTeamPopin extends React.Component {\n  componentDidMount() {\n    if (\n      this.props.trelloUserBoardMembers.length === 0 ||\n      this.props.trelloUserBoardMembersOrigin !== this.props.trelloUserSelectedBoard\n    ) {\n      this.props.fetchTrelloUserBoardMembers(this.props.trelloUserSelectedBoard);\n    }\n  }\n  render() {\n    const members = this.props.trelloUserBoardMembers;\n    const toggleMembership = (memberId, event) =>\n      this.props.toggleTrelloUserTeamMembership(memberId);\n    const content = (\n      <div>\n        <div>\n          {members.map(member => (\n            <div\n              onClick={toggleMembership.bind(this, member.id)}\n              key={member.id}\n              style={\n                member.isInTeam\n                  ? { ...styles.avatarContainer, ...styles.avatarInTeam }\n                  : styles.avatarContainer\n              }\n              title={member.fullName}\n            >\n              {member.avatarHash ? (\n                <img\n                  style={styles.avatar}\n                  alt={member.fullName}\n                  src={'https://trello-avatars.s3.amazonaws.com/' + member.avatarHash + '/50.png'}\n                />\n              ) : (\n                <div style={styles.undefinedAvatar}>{member.initials}</div>\n              )}\n            </div>\n          ))}\n        </div>\n        <div style={styles.editTeamPopinFooter}>\n          <BasicButton label=\"Valider\" onClickAction={this.props.toggleEditTeamPopin} />\n        </div>\n      </div>\n    );\n    return <PlannorPopin style={styles.editTeamPopin} content={content} />;\n  }\n}\n","import EditTeamPopin from './EditTeamPopin';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport {\n  getTrelloUserBoardMembers,\n  getTrelloUserBoardMembersOrigin,\n  getTrelloUserSelectedBoard,\n} from 'redux/TrelloUser';\nimport {\n  fetchTrelloUserBoardMembers,\n  toggleTrelloUserTeamMembership,\n} from 'redux/TrelloUser/actions';\nimport { toggleEditTeamPopin } from 'redux/App/actions';\n\nconst mapStateToProps = state => ({\n  trelloUserSelectedBoard: getTrelloUserSelectedBoard(state),\n  trelloUserBoardMembers: getTrelloUserBoardMembers(state),\n  trelloUserBoardMembersOrigin: getTrelloUserBoardMembersOrigin(state),\n});\n\nconst mapDispatchToProps = {\n  fetchTrelloUserBoardMembers,\n  toggleEditTeamPopin,\n  toggleTrelloUserTeamMembership,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(withRouter(EditTeamPopin));\n","const styles = {\n  editTeamPopin: {\n    maxWidth: 600,\n  },\n  avatarContainer: {\n    verticalAlign: 'top',\n    display: 'inline-flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    margin: 5,\n    minWidth: 50,\n    minHeight: 50,\n    cursor: 'pointer',\n    borderRadius: '50%',\n    boxSizing: 'border-box',\n  },\n  avatar: {\n    borderRadius: '50%',\n    overflow: 'hidden',\n  },\n  avatarInTeam: {\n    border: '4px solid orange',\n    margin: 1,\n  },\n  undefinedAvatar: {\n    width: 50,\n    height: 50,\n    display: 'inline-flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 50,\n    background: '#dddddd',\n    textTransform: 'uppercase',\n  },\n  editTeamPopinFooter: {\n    textAlign: 'right',\n  },\n  warningMessage: {\n    color: '#d88c00',\n    marginBottom: 10,\n  },\n};\n\nexport default styles;\n","// @flow\nimport React from 'react';\nimport PlannorPopin from '../PlannorPopin';\nimport styles from './DevSelectionPopin.style';\nimport BasicButton from '../BasicButton';\nimport TextField from '@material-ui/core/TextField';\nimport { splitTimeFromString, stringTimeFromObject } from '../../helpers/TimeHelpers/timeHelpers';\n\nexport default class DevSelectionPopin extends React.Component {\n  componentDidMount() {\n    if (\n      this.props.trelloUserBoardMembers.length === 0 ||\n      this.props.trelloUserBoardMembersOrigin !== this.props.trelloUserSelectedBoard\n    ) {\n      this.props.fetchTrelloUserBoardMembers(this.props.trelloUserSelectedBoard);\n    }\n  }\n  render() {\n    const members = this.props.devTeamMembers;\n\n    const validateAction = () => {\n      this.props.toggleDevSelectionPopin();\n      this.props.tagDevsOnCard(this.props.selectedCard, this.props.selectedMembers);\n      if (this.props.selectedMembers.length > 0) {\n        this.props.moveCardToDailyGoals(this.props.selectedCard, this.props.dailyGoalsColumn);\n        this.props.removeCardFromSprintBacklog(this.props.selectedCard.id);\n      }\n    };\n    const onChangeStartTime = event => {\n      this.props.selectedCard.startTime = splitTimeFromString(event.target.value);\n    };\n    const onChangeEndTime = event => {\n      this.props.selectedCard.endTime = splitTimeFromString(event.target.value);\n    };\n    const startTimeString = stringTimeFromObject(this.props.selectedCard.startTime);\n    const endTimeString = stringTimeFromObject(this.props.selectedCard.endTime);\n\n    const content = (\n      <div>\n        <div>\n          {this.props.dailyGoalsColumn && (\n            <div>\n              {members.map(member => (\n                <div\n                  onClick={this.props.toggleMemberSelection.bind(this, member.id)}\n                  key={member.id}\n                  style={\n                    this.props.selectedMembers.includes(member.id)\n                      ? { ...styles.avatarContainer, ...styles.avatarInTeam }\n                      : styles.avatarContainer\n                  }\n                  title={member.fullName}\n                >\n                  {member.avatarHash ? (\n                    <img\n                      style={styles.avatar}\n                      alt={member.fullName}\n                      src={\n                        'https://trello-avatars.s3.amazonaws.com/' + member.avatarHash + '/50.png'\n                      }\n                    />\n                  ) : (\n                    <div style={styles.undefinedAvatar}>{member.initials}</div>\n                  )}\n                </div>\n              ))}\n              <br />\n              <TextField\n                id=\"start\"\n                label=\"Début\"\n                type=\"time\"\n                defaultValue={startTimeString}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                inputProps={{\n                  step: 900, // 15 min\n                }}\n                onChange={onChangeStartTime}\n              />\n              &nbsp;\n              <TextField\n                id=\"end\"\n                label=\"Fin\"\n                type=\"time\"\n                defaultValue={endTimeString}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                inputProps={{\n                  step: 900, // 15 min\n                }}\n                onChange={onChangeEndTime}\n              />\n            </div>\n          )}\n          {members.length === 0 && (\n            <div style={styles.warningMessage}>\n              Vous devez d'abord ajouter des membres à l'équipe\n            </div>\n          )}\n          {!this.props.dailyGoalsColumn && (\n            <div style={styles.warningMessage}>\n              Vous devez d'abord sélectionner une colonne Daily Goals\n            </div>\n          )}\n        </div>\n        <div style={styles.editTeamPopinFooter}>\n          <BasicButton label=\"Valider\" onClickAction={validateAction} />\n        </div>\n      </div>\n    );\n    return <PlannorPopin style={styles.editTeamPopin} content={content} />;\n  }\n}\n","import { constants } from './actions';\n\nexport const initialState = {\n  isEditTeamPopinOpen: false,\n  devSelectionPopin: {\n    isOpen: false,\n    selectedCard: {\n      id: null,\n    },\n    selectedMembers: [],\n  },\n};\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case constants.TOGGLE_EDIT_TEAM_POPIN:\n      return {\n        ...state,\n        isEditTeamPopinOpen: !state.isEditTeamPopinOpen,\n      };\n    case constants.TOGGLE_DEV_SELECTION_POPIN:\n      return {\n        ...state,\n        devSelectionPopin: {\n          ...state.devSelectionPopin,\n          isOpen: !state.devSelectionPopin.isOpen,\n        },\n      };\n    case constants.ADD_DEV_SELECTION_CARD:\n      return {\n        ...state,\n        devSelectionPopin: {\n          ...state.devSelectionPopin,\n          selectedCard: {\n            ...action.payload.card,\n            startTime: { hour: 10, minute: 0 },\n            endTime: { hour: 12, minute: 30 },\n          },\n        },\n      };\n    case constants.TOGGLE_MEMBER_SELECTION:\n      return {\n        ...state,\n        devSelectionPopin: {\n          ...state.devSelectionPopin,\n          selectedMembers: state.devSelectionPopin.selectedMembers.includes(action.payload.memberId)\n            ? state.devSelectionPopin.selectedMembers.filter(\n                memberId => memberId !== action.payload.memberId,\n              )\n            : [...state.devSelectionPopin.selectedMembers, action.payload.memberId],\n        },\n      };\n    default:\n      return state;\n  }\n}\n","import DevSelectionPopin from './DevSelectionPopin';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport {\n  getTrelloUserBoardMembers,\n  getTrelloUserBoardMembersOrigin,\n  getTrelloUserSelectedBoard,\n  getTrelloUserDevTeam,\n  getTrelloUserDailyGoalsColumn,\n} from 'redux/TrelloUser';\nimport {\n  fetchTrelloUserBoardMembers,\n  toggleTrelloUserTeamMembership,\n  tagDevsOnCard,\n  moveCardToDailyGoals,\n  removeCardFromSprintBacklog,\n} from 'redux/TrelloUser/actions';\nimport { toggleDevSelectionPopin, toggleMemberSelection } from 'redux/App/actions';\nimport { getDevSelectionCard, getSelectedMembers } from 'redux/App';\n\nconst mapStateToProps = state => ({\n  selectedCard: getDevSelectionCard(state),\n  devTeamMembers: getTrelloUserDevTeam(state),\n  dailyGoalsColumn: getTrelloUserDailyGoalsColumn(state),\n  trelloUserSelectedBoard: getTrelloUserSelectedBoard(state),\n  trelloUserBoardMembers: getTrelloUserBoardMembers(state),\n  trelloUserBoardMembersOrigin: getTrelloUserBoardMembersOrigin(state),\n  selectedMembers: getSelectedMembers(state),\n});\n\nconst mapDispatchToProps = {\n  fetchTrelloUserBoardMembers,\n  toggleDevSelectionPopin,\n  toggleTrelloUserTeamMembership,\n  tagDevsOnCard,\n  moveCardToDailyGoals,\n  toggleMemberSelection,\n  removeCardFromSprintBacklog,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(withRouter(DevSelectionPopin));\n","export const isEditTeamPopinOpen = state => state.appState.isEditTeamPopinOpen;\nexport const isDevSelectionPopinOpen = state => state.appState.devSelectionPopin.isOpen;\nexport const getDevSelectionCardId = state => state.appState.devSelectionPopin.selectedCard.id;\nexport const getDevSelectionCard = state => state.appState.devSelectionPopin.selectedCard;\nexport const getSelectedMembers = state => state.appState.devSelectionPopin.selectedMembers;\n","const styles = {\n  container: {\n    display: 'flex',\n    overflow: 'hidden',\n    flexDirection: 'column',\n    margin: '0px 5px 10px 5px',\n    borderRadius: 5,\n    width: '20%',\n  },\n  columnHeader: {\n    flex: '0 1 auto',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  grid: {\n    position: 'relative',\n    flex: '1 1 auto',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  gridItem: {\n    display: 'inline-grid',\n    width: '100%',\n  },\n};\n\nexport default styles;\n","// @flow\nimport React from 'react';\nimport styles from './PlanColumn.style.js';\nimport PlanCard from '../PlanCard';\n\nexport default class PlanColumn extends React.Component {\n  render() {\n    return (\n      <div style={styles.container}>\n        <div style={{ ...this.props.style, ...styles.grid }}>\n          {this.props.cards.map(card => (\n            <PlanCard\n              key={card.id}\n              dayStartTime={this.props.dayStartTime}\n              dayEndTime={this.props.dayEndTime}\n              startTime={card.startTime}\n              endTime={card.endTime}\n              content={card.name}\n              icon={{ name: 'delete' }}\n            />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n","const styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    margin: '10px 5px 5px 5px',\n    backgroundColor: '#2196f3',\n    color: 'white',\n    MozBoxShadow: '2px 2px 10px #cccccc',\n    WebkitBoxShadow: '2px 2px 10px #cccccc',\n    boxShadow: '2px 2px 10px #cccccc',\n    borderRadius: 5,\n    width: '20%',\n  },\n  picture: {\n    margin: 7,\n    width: 50,\n    height: 50,\n    borderRadius: '50%',\n    overflow: 'hidden',\n  },\n  devName: {\n    textAlign: 'center',\n    margin: '0 7px 7px 7px',\n    fontSize: 20,\n  },\n  undefinedAvatar: {\n    width: 50,\n    height: 50,\n    color: '#111111',\n    display: 'inline-flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 50,\n    background: '#dddddd',\n    textTransform: 'uppercase',\n  },\n};\n\nexport default styles;\n","// @flow\nimport React from 'react';\nimport styles from './ColumnHeader.style';\n\nexport default class ColumnHeader extends React.Component {\n  render() {\n    return (\n      <div style={styles.container}>\n        <div style={styles.picture} title={this.props.member.fullName}>\n          {this.props.member.avatarHash ? (\n            <img\n              style={styles.avatar}\n              alt={this.props.member.fullName}\n              src={\n                'https://trello-avatars.s3.amazonaws.com/' +\n                this.props.member.avatarHash +\n                '/50.png'\n              }\n            />\n          ) : (\n            <div style={styles.undefinedAvatar}>{this.props.member.initials}</div>\n          )}\n        </div>\n        <div style={styles.devName}>{this.props.member.fullName}</div>\n      </div>\n    );\n  }\n}\n","const styles = {\n  hourLine: {\n    position: 'absolute',\n    top: 0,\n    color: '#cccccc',\n    borderTop: 'dashed #cccccc 1px',\n    width: '100%',\n  },\n  hourLabel: {\n    marginTop: 5,\n    marginLeft: 15,\n  },\n};\n\nexport default styles;\n","// @flow\nimport React from 'react';\nimport { timeInMinutes, durationInMinutes } from '../../helpers';\nimport styles from './HourLine.style';\n\nexport default class HourLine extends React.Component {\n  render() {\n    const topProp =\n      (100 * (timeInMinutes(this.props.time) - timeInMinutes(this.props.dayStartTime))) /\n        (durationInMinutes(this.props.dayStartTime, this.props.dayEndTime) + 10) +\n      '%';\n    return (\n      <div style={{ ...styles.hourLine, top: topProp }}>\n        <div style={styles.hourLabel}>\n          {this.props.time.hour}h{this.props.time.minute !== 0 && this.props.time.minute}\n        </div>\n      </div>\n    );\n  }\n}\n","const styles = {\n  headerContainer: {\n    position: 'relative',\n    display: 'flex',\n    width: '100%',\n    overflowX: 'scroll',\n    justifyContent: 'center',\n  },\n  columnHeadersContainer: {\n    display: 'flex',\n    marginLeft: 60,\n    width: '100%',\n    justifyContent: 'center',\n  },\n  planContainer: {\n    position: 'relative',\n    display: 'flex',\n    width: '100%',\n    overflowX: 'scroll',\n    justifyContent: 'center',\n    flexGrow: 100,\n  },\n  columnsContainer: {\n    display: 'flex',\n    marginLeft: 60,\n    width: '100%',\n    overflowX: 'scroll',\n    justifyContent: 'center',\n    flexGrow: 100,\n  },\n  errorDiv: {\n    display: 'flex',\n    margin: '0px 5px 10px 5px',\n    background: 'rgba(255, 230, 230)',\n    color: 'red',\n    width: '20%',\n    zIndex: 1,\n    borderRadius: 5,\n    justifyContent: 'center',\n    alignItems: 'center',\n    MozBoxShadow: '2px 2px 10px #cccccc',\n    WebkitBoxShadow: '2px 2px 10px #cccccc',\n    boxShadow: '2px 2px 10px #cccccc',\n  },\n  errorLabel: {\n    textAlign: 'center',\n    fontSize: 14,\n  },\n};\n\nexport default styles;\n","// @flow\nimport React from 'react';\nimport PlanColumn from '../PlanColumn';\nimport ColumnHeader from '../ColumnHeader';\nimport HourLine from '../HourLine';\nimport styles from './ProdPlan.style';\n\nexport default class ProdPlan extends React.Component {\n  render() {\n    const dayStartTime = { hour: 9, minute: 30 };\n    const dayEndTime = { hour: 18, minute: 0 };\n    const hoursOfTheDay = [\n      { id: 1, hour: 9, minute: 30 },\n      { id: 2, hour: 10, minute: 30 },\n      { id: 3, hour: 11, minute: 30 },\n      { id: 4, hour: 12, minute: 30 },\n      { id: 5, hour: 14, minute: 0 },\n      { id: 6, hour: 15, minute: 0 },\n      { id: 7, hour: 16, minute: 0 },\n      { id: 8, hour: 17, minute: 0 },\n    ];\n    return (\n      <div style={{ ...this.props.style, ...styles.container }}>\n        <div style={styles.headerContainer}>\n          <div style={styles.columnHeadersContainer}>\n            {this.props.devTeamMembers.map(member => (\n              <ColumnHeader key={member.id} style={styles.columnHeader} member={member} />\n            ))}\n          </div>\n        </div>\n        <div style={styles.planContainer}>\n          {hoursOfTheDay.map(time => (\n            <HourLine\n              key={time.id}\n              time={time}\n              dayStartTime={dayStartTime}\n              dayEndTime={dayEndTime}\n            />\n          ))}\n          <div style={styles.columnsContainer}>\n            {this.props.devTeamMembers.map(member => {\n              if (!this.props.dailyGoalsColumn) {\n                return (\n                  <div key={member.id} style={styles.errorDiv}>\n                    <span style={styles.errorLabel}>\n                      Vous n'avez pas sélectionné de colonne 'Daily Goals'\n                    </span>\n                  </div>\n                );\n              }\n              return (\n                <PlanColumn\n                  key={member.id}\n                  dayStartTime={dayStartTime}\n                  dayEndTime={dayEndTime}\n                  member={member}\n                  cards={member.dailyCards}\n                />\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import ProdPlan from './ProdPlan';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { getTrelloUserDevTeam, getTrelloUserDailyGoalsColumn } from 'redux/TrelloUser';\n\nconst mapStateToProps = state => ({\n  devTeamMembers: getTrelloUserDevTeam(state),\n  dailyGoalsColumn: getTrelloUserDailyGoalsColumn(state),\n});\n\nconst mapDispatchToProps = {};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(withRouter(ProdPlan));\n","// @flow\nimport React from 'react';\nimport Menu from '../Menu';\nimport styles from './Dashboard.style';\nimport EditTeamPopin from '../EditTeamPopin';\nimport DevSelectionPopin from '../DevSelectionPopin';\nimport ProdPlan from '../ProdPlan';\n\nexport default class Dashboard extends React.Component {\n  render() {\n    return (\n      <div style={styles.dashboard}>\n        <Menu style={styles.menu} />\n        <ProdPlan style={styles.prodPlan} />\n        {this.props.isEditTeamPopinOpen && <EditTeamPopin />}\n        {this.props.isDevSelectionPopinOpen && <DevSelectionPopin />}\n      </div>\n    );\n  }\n}\n","import Dashboard from './Dashboard';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { isEditTeamPopinOpen, isDevSelectionPopinOpen } from 'redux/App';\n\nconst mapStateToProps = state => ({\n  isEditTeamPopinOpen: isEditTeamPopinOpen(state),\n  isDevSelectionPopinOpen: isDevSelectionPopinOpen(state),\n});\n\nconst mapDispatchToProps = {};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(withRouter(Dashboard));\n","import * as React from 'react';\n\nimport Dashboard from '../../components/Dashboard';\n\nexport default class Home extends React.Component {\n  render() {\n    return <Dashboard />;\n  }\n}\n","import { connect } from 'react-redux';\nimport Home from './Home';\n\nfunction mapStateToProps() {\n  return {};\n}\n\nfunction mapDispatchToProps() {\n  return {};\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Home);\n","// @flow\n// $FlowFixMe flow is not ready for Suspense or lazy today\nimport React, { Suspense } from 'react';\nimport { Route, Switch } from 'react-router';\n\nimport Home from './pages/Home';\n\nconst routes = () => (\n  <Suspense fallback={<div>Loading...</div>}>\n    <Switch>\n      <Route exact path=\"/\" component={Home} />\n    </Switch>\n  </Suspense>\n);\n\nexport default routes;\n","// @flow\nexport const flattenMessages = (nestedMessages, prefix = '') =>\n  Object.keys(nestedMessages).reduce((messages, key) => {\n    const value = nestedMessages[key];\n    const prefixedKey = prefix ? `${prefix}.${key}` : key;\n\n    if (typeof value === 'string') {\n      messages[prefixedKey] = value; // eslint-disable-line\n    } else {\n      Object.assign(messages, flattenMessages(value, prefixedKey));\n    }\n\n    return messages;\n  }, {});\n\nexport default flattenMessages;\n","const styles = {\n  header: {\n    backgroundColor: '#2196f3',\n    padding: 15,\n    fontSize: 20,\n    fontFamily: 'Roboto',\n    color: 'white',\n  },\n};\n\nexport default styles;\n","// @flow\nimport React from 'react';\nimport { IntlProvider, addLocaleData } from 'react-intl';\nimport fr from 'react-intl/locale-data/fr';\nimport en from 'react-intl/locale-data/en';\n\nimport frMessages from 'translations/fr.json';\nimport enMessages from 'translations/en.json';\nimport { flattenMessages } from 'services/i18n/intl';\nimport styles from './Header.style';\n\nconst locales = {\n  fr: flattenMessages(frMessages),\n  en: flattenMessages(enMessages),\n};\n\naddLocaleData([...fr, ...en]);\n\nexport default class Header extends React.Component {\n  render() {\n    return (\n      <IntlProvider locale=\"fr\" messages={locales.fr}>\n        <div style={styles.header}>\n            Plannor 3000\n        </div>\n      </IntlProvider>\n    );\n  }\n}\n","const styles = {\n  rootContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100vh',\n  },\n};\n\nexport default styles;\n","// @flow\nimport React from 'react';\nimport { IntlProvider, addLocaleData } from 'react-intl';\nimport fr from 'react-intl/locale-data/fr';\nimport en from 'react-intl/locale-data/en';\n\nimport frMessages from 'translations/fr.json';\nimport enMessages from 'translations/en.json';\nimport { flattenMessages } from 'services/i18n/intl';\n\nimport Header from '../Header';\nimport styles from './Root.style';\n\nconst locales = {\n  fr: flattenMessages(frMessages),\n  en: flattenMessages(enMessages),\n};\n\naddLocaleData([...fr, ...en]);\n\n// type Props = {\n//   children: React$Element<*>,\n// };\n\nexport default class Root extends React.Component {\n  render() {\n    const { children } = this.props;\n    return (\n      <IntlProvider locale=\"fr\" messages={locales.fr}>\n        <div style={styles.rootContainer}>\n          <Header />\n          {children}\n        </div>\n      </IntlProvider>\n    );\n  }\n}\n","// @flow\nimport Root from './Root';\n\nexport default Root;\n","// @flow\n/**\n * Combine all reducers in this file and export the combined reducers.\n * If we were to do this in store.js, reducers wouldn't be hot reloadable.\n */\n\nimport { combineReducers } from 'redux';\n\n/**\n * Example of the Avatar module which should export a reducer.\n */\n\nimport trelloUserReducer, { initialState as trelloUserState } from './TrelloUser/reducer';\nimport appReducer, { initialState as appState } from './App/reducer';\n\n// Combine all reducers you may have here\nexport default combineReducers({\n  trelloUserState: trelloUserReducer,\n  appState: appReducer,\n});\n\nexport const initialStates = {\n  trelloUserState,\n  appState,\n};\n","import React from 'react';\n\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\n\nimport theme from './theme';\nimport Routes from './routes';\nimport Root from './components/Root';\nimport configureStore from './redux/plannorStore';\n\nconst RootComponentWithRoutes = () => (\n  <Root>\n    <Routes />\n  </Root>\n);\n\nconst appBasename = process.env.NODE_ENV === 'production' ? '/plannor3000' : '';\n\nconst store = configureStore();\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <MuiThemeProvider theme={theme}>\n          <Router basename={appBasename}>\n            <Route path=\"/\" component={RootComponentWithRoutes} />\n          </Router>\n        </MuiThemeProvider>\n      </Provider>\n    );\n  }\n}\n","import { createStore, applyMiddleware, compose } from 'redux';\n// See\n// https://github.com/gaearon/redux-thunk and http://redux.js.org/docs/advanced/AsyncActions.html\nimport thunkMiddleware from 'redux-thunk';\nimport reducers, { initialStates } from './reducers';\n\nexport default function configureStore(props, context) {\n  // This is how we get initial props from Symfony into redux.\n  const { trelloUserState } = initialStates;\n\n  // Redux expects to initialize the store using an Object\n  const initialState = {\n    trelloUserState: { ...trelloUserState },\n  };\n\n  // use devtools if we are in a browser and the extension is enabled\n  let composeEnhancers =\n    (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\n  // middlewares\n  let middlewares = [thunkMiddleware];\n\n  const store = createStore(\n    reducers,\n    initialState,\n    composeEnhancers(applyMiddleware(...middlewares)),\n  );\n  return store;\n}\n","/* eslint-disable */\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ',\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'babel-polyfill';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport createBrowserHistory from 'history/createBrowserHistory';\n\nimport App from './App';\nimport { register } from './serviceWorker';\nimport configureStore from './redux/store';\n\nconst history = createBrowserHistory();\nconst { store, persistor } = configureStore(history);\n\nconst rootEl = document.getElementById('root');\n\nconst serviceWorkerConfig = {};\nif (rootEl) {\n  ReactDOM.render(<App history={history} store={store} persistor={persistor} />, rootEl);\n  register(serviceWorkerConfig);\n}\n\nif (module.hot) {\n  module.hot.accept('./App', () => {\n    const NextApp = require('./App').default; // eslint-disable-line\n    if (rootEl) {\n      ReactDOM.render(<NextApp history={history} store={store} />, rootEl);\n    }\n  });\n}\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport reducers, { initialStates } from './reducers';\nimport thunkMiddleware from 'redux-thunk';\n\nexport default function configureStore() {\n  // use devtools if we are in a browser and the extension is enabled\n  let composeEnhancers =\n    (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\n  // middlewares\n  let middlewares = [thunkMiddleware];\n\n  const store = createStore(\n    reducers,\n    initialStates,\n    composeEnhancers(applyMiddleware(...middlewares)),\n  );\n  return store;\n}\n"],"sourceRoot":""}