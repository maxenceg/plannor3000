{"version":3,"sources":["theme.js","components/BasicButton/BasicButton.js","components/BasicSelect/BasicSelect.js","components/ButtonsPanel/ButtonsPanel.style.js","components/ButtonsPanel/ButtonsPanel.js","helpers/TimeHelpers/timeHelpers.js","components/PlanCard/PlanCard.style.js","components/PlanCard/PlanCard.js","components/Menu/Menu.style.js","components/Menu/Menu.js","redux/TrelloUser/actions.js","redux/TrelloUser/selectors.js","redux/TrelloUser/reducer.js","redux/App/actions.js","components/Menu/Menu.wrap.js","components/Dashboard/Dashboard.style.js","components/PlannorPopin/PlannorPopin.style.js","components/PlannorPopin/PlannorPopin.js","components/EditTeamPopin/EditTeamPopin.style.js","components/EditTeamPopin/EditTeamPopin.js","components/EditTeamPopin/EditTeamPopin.wrap.js","components/DevSelectionPopin/DevSelectionPopin.style.js","components/DevSelectionPopin/DevSelectionPopin.js","redux/App/reducer.js","components/DevSelectionPopin/DevSelectionPopin.wrap.js","redux/App/selectors.js","components/PlanColumn/PlanColumn.style.js","components/PlanColumn/PlanColumn.js","components/ColumnHeader/ColumnHeader.style.js","components/ColumnHeader/ColumnHeader.js","components/HourLine/HourLine.style.js","components/HourLine/HourLine.js","components/ProdPlan/ProdPlan.style.js","components/ProdPlan/ProdPlan.js","components/ProdPlan/ProdPlan.wrap.js","components/Dashboard/Dashboard.js","components/Dashboard/Dashboard.wrap.js","pages/Home/Home.js","pages/Home/Home.wrap.js","routes.js","services/i18n/intl.js","components/Header/Header.style.js","components/Header/Header.js","components/Root/Root.style.js","components/Root/Root.js","components/Root/Root.wrap.js","redux/reducers.js","App.js","redux/plannorStore.js","serviceWorker.js","index.js","redux/store.js"],"names":["createMuiTheme","typography","useNextVariants","palette","primary","blue","BasicButton","react_default","a","createElement","Button_default","style","this","props","onClick","onClickAction","variant","color","label","Component","BasicSelect","FormControl_default","propStyle","InputLabel_default","htmlFor","Select_default","value","onChange","handleChange","options","map","option","MenuItem_default","key","styles","panelButton","minWidth","minHeight","width","height","padding","settingsButton","marginRight","editTeamButton","refreshButton","ButtonsPanel","components_BasicButton_BasicButton","Object","objectSpread","className","isTeamEditable","editTeamAction","refreshAction","React","timeInMinutes","time","hour","minute","durationInMinutes","startTime","endTime","cardContainer","backgroundColor","MozBoxShadow","WebkitBoxShadow","boxShadow","borderRadius","boxSizing","footerIcon","display","flexDirection","icon","cursor","PlanCard","topProp","dayStartTime","dayEndTime","heightProp","timedCardContainerStyle","top","position","content","action","name","boardSelect","buttonsPanel","justifyContent","connectToTrelloButton","cardsContainer","marginTop","flexGrow","overflowY","planCard","Menu","window","Trello","authorize","type","scope","read","write","expiration","fetchTrelloUser","fetchTrelloUserBoards","_this","boardSelectOptions","trelloUserBoards","board","id","dailyGoalsSelectOptions","trelloUserColumns","column","trelloUserFullName","length","ButtonsPanel_ButtonsPanel","fetchTrelloUserColumns","trelloUserSelectedBoard","fetchDailyGoalsCards","trelloUserDailyGoalsColumn","toggleEditTeamPopin","components_BasicSelect_BasicSelect","event","addTrelloUserSelectedBoard","target","trelloUserSprintColumn","addTrelloUserSprintColumn","fetchSprintBacklogCards","addTrelloUserDailyGoalsColumn","trelloUserSprintBacklogCards","card","PlanCard_PlanCard","cardId","toggleDevSelectionPopin","addDevSelectionCardId","constants","FETCH_TRELLO_USER","REQUEST","SUCCESS","ERROR","FETCH_TRELLO_USER_BOARDS","FETCH_TRELLO_USER_COLUMNS","FETCH_TRELLO_USER_DAILY_GOALS_CARDS","FETCH_TRELLO_USER_SPRINT_BACKLOG_CARDS","FETCH_TRELLO_USER_BOARD_MEMBERS","TAG_DEVS_ON_CARD","MOVE_CARD_TO_DAILY_GOALS","ADD_TRELLO_USER_SELECTED_BOARD","ADD_TRELLO_USER_DAILY_GOALS_COLUMN","ADD_TRELLO_USER_SPRINT_COLUMN","TOGGLE_TRELLO_TEAM_MEMBERSHIP","fetchTrelloUserRequest","fetchTrelloUserSuccess","user","payload","fetchTrelloUserError","error","errorMessage","message","fetchTrelloUserBoardMembers","dispatch","get","fields","data","boardOrigin","members","fetchTrelloUserBoardMembersError","toggleTrelloUserTeamMembership","memberId","getTrelloUserSelectedBoard","state","trelloUserState","selectedBoard","getTrelloUserDailyGoalsColumn","dailyGoalsColumn","getTrelloUserBoardMembers","boardMembers","getTrelloUserBoardMembersOrigin","boardMembersOrigin","getTrelloUserDevTeam","project","devTeam","initialState","fullName","username","boards","columns","cards","sprintColumn","isLoading","TOGGLE_EDIT_TEAM_POPIN","TOGGLE_DEV_SELECTION_POPIN","ADD_DEV_SELECTION_CARD_ID","TOGGLE_MEMBER_SELECTION","mapDispatchToProps","fetchTrelloUserBoardsError","fetchTrelloUserColumnsError","fetchTrelloUserDailyGoalsCardsError","fetchTrelloUserSprintBacklogCardsError","connect","getTrelloUserFullName","getTrelloUserBoards","getTrelloUserColumns","trelloUserDailyGoalsCards","getTrelloUserDailyGoalsCards","getTrelloUserSprintColumn","getTrelloUserSprintBacklogCards","withRouter","dashboard","fontFamily","menu","prodPlan","popInContainer","left","transform","background","zIndex","PlannorPopin","editTeamPopin","maxWidth","avatarContainer","verticalAlign","alignItems","margin","avatarInTeam","border","avatar","overflow","undefinedAvatar","textTransform","editTeamPopinFooter","textAlign","EditTeamPopin","trelloUserBoardMembers","trelloUserBoardMembersOrigin","member","bind","isInTeam","title","avatarHash","alt","src","initials","PlannorPopin_PlannorPopin","warningMessage","marginBottom","DevSelectionPopin","devTeamMembers","toggleMemberSelection","selectedMembers","includes","tagDevsOnCard","selectedCard","moveCardToDailyGoals","isEditTeamPopinOpen","devSelectionPopin","isOpen","selectedCardId","membersId","forEach","post","dailyGoalsColumnId","put","appState","getDevSelectionCardId","getSelectedMembers","container","columnHeader","flex","grid","gridItem","PlanColumn","picture","devName","fontSize","ColumnHeader","hourLine","borderTop","hourLabel","marginLeft","HourLine","headerContainer","overflowX","columnHeadersContainer","planContainer","columnsContainer","errorDiv","errorLabel","ProdPlan","ColumnHeader_ColumnHeader","HourLine_HourLine","PlanColumn_PlanColumn","getDailyGoalsCardsRelatedToMember","filter","idMembers","getTrelloUserDGCardsRelatedToMember","Dashboard","Menu_wrap","ProdPlan_wrap","EditTeamPopin_wrap","isDevSelectionPopinOpen","DevSelectionPopin_wrap","Home","react","Dashboard_wrap","routes","fallback","Switch","es_Route","exact","path","component","flattenMessages","nestedMessages","prefix","arguments","undefined","keys","reduce","messages","prefixedKey","concat","assign","header","locales","fr","frMessages","en","enMessages","addLocaleData","toConsumableArray","Header","index_es","locale","rootContainer","Root","children","Header_Header","combineReducers","memberIndex","indexOf","dailyCards","initialStates","RootComponentWithRoutes","Root_wrap","src_routes","store","context","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middlewares","thunkMiddleware","createStore","reducers","applyMiddleware","apply","configureStore","App","es","theme","BrowserRouter","Route","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","history","createBrowserHistory","persistor","rootEl","document","getElementById","ReactDOM","render","App_App","URL","process","origin","addEventListener","fetch","response","status","headers","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.9946a3b1.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles';\nimport blue from '@material-ui/core/colors/blue';\n\nexport default createMuiTheme({\n  typography: {\n    useNextVariants: true,\n  },\n  palette: {\n    primary: blue,\n  },\n});\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\n\nclass BasicButton extends Component {\n  render() {\n    return (\n      <Button\n        style={this.props.style}\n        onClick={this.props.onClickAction}\n        variant=\"contained\"\n        color=\"primary\"\n      >\n        {this.props.label}\n      </Button>\n    );\n  }\n}\n\nexport default BasicButton;\n","import React, { Component } from 'react';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nclass BasicSelect extends Component {\n  render() {\n    return (\n      <FormControl style={this.props.propStyle}>\n        <InputLabel htmlFor=\"age-simple\">{this.props.label}</InputLabel>\n        <Select value={this.props.value} onChange={this.props.handleChange}>\n          {this.props.options.map(option => (\n            <MenuItem key={option.value} value={option.value}>\n              {option.label}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    );\n  }\n}\n\nexport default BasicSelect;\n","const styles = {\n  panelButton: {\n    minWidth: 'auto',\n    minHeight: 'auto',\n    width: '32px',\n    height: '32px',\n    padding: 0,\n  },\n  settingsButton: {\n    marginRight: 5,\n  },\n  editTeamButton: {\n    marginRight: 5,\n  },\n  refreshButton: {},\n};\n\nexport default styles;\n","// @flow\nimport React from 'react';\nimport BasicButton from '../BasicButton';\nimport styles from './ButtonsPanel.style';\n\nexport default class ButtonsPanel extends React.Component {\n  render() {\n    return (\n      <div style={this.props.style}>\n        <BasicButton\n          style={{ ...styles.panelButton, ...styles.settingsButton }}\n          label={<i className=\"material-icons\">settings</i>}\n        />\n        {!!this.props.isTeamEditable && (\n          <BasicButton\n            style={{ ...styles.panelButton, ...styles.editTeamButton }}\n            label={<i className=\"material-icons\">people</i>}\n            onClickAction={this.props.editTeamAction}\n          />\n        )}\n        <BasicButton\n          style={{ ...styles.panelButton, ...styles.refreshButton }}\n          label={<i className=\"material-icons\">refresh</i>}\n          onClickAction={this.props.refreshAction}\n        />\n      </div>\n    );\n  }\n}\n","export function timeInMinutes(time) {\n  return time.hour * 60 + time.minute;\n}\n\nexport function durationInMinutes(startTime, endTime) {\n  return timeInMinutes(endTime) - timeInMinutes(startTime);\n}\n","const styles = {\n  cardContainer: {\n    width: '100%',\n    backgroundColor: '#2196f3dd',\n    MozBoxShadow: '2px 2px 10px #cccccc',\n    WebkitBoxShadow: '2px 2px 10px #cccccc',\n    boxShadow: '2px 2px 10px #cccccc',\n    borderRadius: 5,\n    padding: 10,\n    boxSizing: 'border-box',\n    color: 'white',\n  },\n  footerIcon: {\n    display: 'flex',\n    flexDirection: 'row-reverse',\n  },\n  icon: {\n    cursor: 'pointer',\n  },\n};\n\nexport default styles;\n","// @flow\nimport React from 'react';\nimport { timeInMinutes, durationInMinutes } from '../../helpers';\nimport styles from './PlanCard.style';\n\nexport default class PlanCard extends React.Component {\n  render() {\n    const topProp =\n      this.props.startTime && this.props.dayStartTime && this.props.dayEndTime\n        ? (100 * (timeInMinutes(this.props.startTime) - timeInMinutes(this.props.dayStartTime))) /\n            durationInMinutes(this.props.dayStartTime, this.props.dayEndTime) +\n          '%'\n        : null;\n    const heightProp =\n      this.props.startTime && this.props.endTime && this.props.dayStartTime && this.props.dayEndTime\n        ? (100 * (timeInMinutes(this.props.endTime) - timeInMinutes(this.props.startTime))) /\n            durationInMinutes(this.props.dayStartTime, this.props.dayEndTime) +\n          '%'\n        : null;\n    const timedCardContainerStyle =\n      topProp && heightProp ? { top: topProp, height: heightProp, position: 'absolute' } : null;\n    return (\n      <div style={{ ...this.props.style, ...styles.cardContainer, ...timedCardContainerStyle }}>\n        {this.props.content}\n        <div style={styles.footerIcon}>\n          <i style={styles.icon} className=\"material-icons\" onClick={this.props.icon.action}>\n            {this.props.icon.name}\n          </i>\n        </div>\n      </div>\n    );\n  }\n}\n","const styles = {\n  boardSelect: {\n    width: '100%',\n  },\n  buttonsPanel: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  connectToTrelloButton: {\n    display: 'inline-block',\n  },\n  cardsContainer: {\n    marginTop: 7,\n    flexGrow: 100,\n    overflowY: 'scroll',\n  },\n  planCard: {\n    marginTop: 5,\n  },\n};\n\nexport default styles;\n","// @flow\nimport React from 'react';\nimport BasicButton from '../BasicButton';\nimport BasicSelect from '../BasicSelect';\nimport ButtonsPanel from '../ButtonsPanel';\nimport PlanCard from '../PlanCard';\nimport styles from './Menu.style';\n\nexport default class Menu extends React.Component {\n  componentWillMount() {\n    window.Trello.authorize({\n      type: 'popup',\n      name: 'Plannor 3000',\n      scope: {\n        read: 'true',\n        write: 'true',\n      },\n      expiration: 'never',\n    });\n    this.props.fetchTrelloUser();\n    this.props.fetchTrelloUserBoards();\n  }\n\n  render() {\n    const connectToTrello = () => {\n      window.Trello.authorize({\n        type: 'popup',\n        name: 'Plannor 3000',\n        scope: {\n          read: 'true',\n          write: 'true',\n        },\n        expiration: 'never',\n      });\n      this.props.fetchTrelloUser();\n      this.props.fetchTrelloUserBoards();\n    };\n    const boardSelectOptions = this.props.trelloUserBoards\n      ? this.props.trelloUserBoards.map(function(board) {\n          return { value: board.id, label: board.name };\n        })\n      : null;\n    const dailyGoalsSelectOptions = this.props.trelloUserColumns\n      ? this.props.trelloUserColumns.map(function(column) {\n          return { value: column.id, label: column.name };\n        })\n      : null;\n    const handleBoardChange = event => {\n      this.props.addTrelloUserSelectedBoard(event.target.value);\n      this.props.fetchTrelloUserColumns(event.target.value);\n    };\n    const handleDailyGoalsChange = event => {\n      this.props.addTrelloUserDailyGoalsColumn(event.target.value);\n      this.props.fetchDailyGoalsCards(event.target.value);\n    };\n    const handleSprintColumnChange = event => {\n      this.props.addTrelloUserSprintColumn(event.target.value);\n      this.props.fetchSprintBacklogCards(event.target.value);\n    };\n    const refreshAction = () => {\n      this.props.fetchTrelloUserColumns(this.props.trelloUserSelectedBoard);\n      this.props.fetchDailyGoalsCards(this.props.trelloUserDailyGoalsColumn);\n    };\n    const editTeamAction = () => {\n      this.props.toggleEditTeamPopin();\n    };\n    const openDevSelectionPopin = cardId => {\n      this.props.toggleDevSelectionPopin();\n      this.props.addDevSelectionCardId(cardId);\n    };\n    return (\n      <div style={this.props.style}>\n        {!this.props.trelloUserFullName && (\n          <BasicButton\n            style={styles.connectToTrelloButton}\n            label=\"Se connecter avec Trello\"\n            onClickAction={connectToTrello}\n          />\n        )}\n        {this.props.trelloUserBoards && this.props.trelloUserBoards.length > 0 && (\n          <div>\n            <ButtonsPanel\n              style={styles.buttonsPanel}\n              refreshAction={refreshAction}\n              isTeamEditable={this.props.trelloUserSelectedBoard.length}\n              editTeamAction={editTeamAction}\n            />\n            <BasicSelect\n              propStyle={styles.boardSelect}\n              value={this.props.trelloUserSelectedBoard}\n              handleChange={handleBoardChange}\n              label=\"Sélectionnez un board\"\n              options={boardSelectOptions}\n            />\n            {this.props.trelloUserSelectedBoard !== '' && (\n              <div>\n                <BasicSelect\n                  propStyle={styles.boardSelect}\n                  value={this.props.trelloUserSprintColumn}\n                  handleChange={handleSprintColumnChange}\n                  label=\"Sélectionnez la colonne Sprint Backlog\"\n                  options={dailyGoalsSelectOptions}\n                />\n                <BasicSelect\n                  propStyle={styles.boardSelect}\n                  value={this.props.trelloUserDailyGoalsColumn}\n                  handleChange={handleDailyGoalsChange}\n                  label=\"Sélectionnez la colonne Daily Goals\"\n                  options={dailyGoalsSelectOptions}\n                />\n              </div>\n            )}\n          </div>\n        )}\n        <div style={styles.cardsContainer}>\n          {this.props.trelloUserSprintBacklogCards.length > 0 &&\n            this.props.trelloUserSprintBacklogCards.map(card => (\n              <PlanCard\n                style={styles.planCard}\n                key={card.id}\n                content={card.name}\n                icon={{\n                  name: 'arrow_right_alt',\n                  action: () => openDevSelectionPopin(card.id),\n                }}\n              />\n            ))}\n        </div>\n      </div>\n    );\n  }\n}\n","export const constants = {\n  FETCH_TRELLO_USER: {\n    REQUEST: 'FETCH_TRELLO_USER_REQUEST',\n    SUCCESS: 'FETCH_TRELLO_USER_SUCCESS',\n    ERROR: 'FETCH_TRELLO_USER_ERROR',\n  },\n  FETCH_TRELLO_USER_BOARDS: {\n    REQUEST: 'FETCH_TRELLO_USER_BOARDS_REQUEST',\n    SUCCESS: 'FETCH_TRELLO_USER_BOARDS_SUCCESS',\n    ERROR: 'FETCH_TRELLO_USER_BOARDS_ERROR',\n  },\n  FETCH_TRELLO_USER_COLUMNS: {\n    REQUEST: 'FETCH_TRELLO_USER_COLUMNS_REQUEST',\n    SUCCESS: 'FETCH_TRELLO_USER_COLUMNS_SUCCESS',\n    ERROR: 'FETCH_TRELLO_USER_COLUMNS_ERROR',\n  },\n  FETCH_TRELLO_USER_DAILY_GOALS_CARDS: {\n    REQUEST: 'FETCH_TRELLO_USER_DAILY_GOALS_CARDS_REQUEST',\n    SUCCESS: 'FETCH_TRELLO_USER_DAILY_GOALS_CARDS_SUCCESS',\n    ERROR: 'FETCH_TRELLO_USER_DAILY_GOALS_CARDS_ERROR',\n  },\n  FETCH_TRELLO_USER_SPRINT_BACKLOG_CARDS: {\n    REQUEST: 'FETCH_TRELLO_USER_SPRINT_BACKLOG_CARDS_REQUEST',\n    SUCCESS: 'FETCH_TRELLO_USER_SPRINT_BACKLOG_CARDS_SUCCESS',\n    ERROR: 'FETCH_TRELLO_USER_SPRINT_BACKLOG_CARDS_ERROR',\n  },\n  FETCH_TRELLO_USER_BOARD_MEMBERS: {\n    REQUEST: 'FETCH_TRELLO_USER_BOARD_MEMBERS_REQUEST',\n    SUCCESS: 'FETCH_TRELLO_USER_BOARD_MEMBERS_SUCCESS',\n    ERROR: 'FETCH_TRELLO_USER_BOARD_MEMBERS_ERROR',\n  },\n  TAG_DEVS_ON_CARD: {\n    REQUEST: 'TAG_DEVS_ON_CARD_REQUEST',\n    SUCCESS: 'TAG_DEVS_ON_CARD_SUCCESS',\n    ERROR: 'TAG_DEVS_ON_CARD_ERROR',\n  },\n  MOVE_CARD_TO_DAILY_GOALS: {\n    REQUEST: 'MOVE_CARD_TO_DAILY_GOALS_REQUEST',\n    SUCCESS: 'MOVE_CARD_TO_DAILY_GOALS_SUCCESS',\n    ERROR: 'MOVE_CARD_TO_DAILY_GOALS_ERROR',\n  },\n  ADD_TRELLO_USER_SELECTED_BOARD: 'ADD_TRELLO_USER_SELECTED_BOARD',\n  ADD_TRELLO_USER_DAILY_GOALS_COLUMN: 'ADD_TRELLO_USER_DAILY_GOALS_COLUMN',\n  ADD_TRELLO_USER_SPRINT_COLUMN: 'ADD_TRELLO_USER_SPRINT_COLUMN',\n  TOGGLE_TRELLO_TEAM_MEMBERSHIP: 'TOGGLE_TRELLO_TEAM_MEMBERSHIP',\n};\n\nexport function fetchTrelloUserRequest() {\n  return {\n    type: constants.FETCH_TRELLO_USER.REQUEST,\n  };\n}\n\nexport function fetchTrelloUserSuccess(user) {\n  return {\n    type: constants.FETCH_TRELLO_USER.SUCCESS,\n    payload: { user },\n  };\n}\n\nexport function fetchTrelloUserError(error) {\n  return {\n    type: constants.FETCH_TRELLO_USER.ERROR,\n    payload: { errorMessage: error.message },\n  };\n}\n\nexport function fetchTrelloUserBoardsRequest() {\n  return {\n    type: constants.FETCH_TRELLO_USER_BOARDS.REQUEST,\n  };\n}\n\nexport function fetchTrelloUserBoardsSuccess(boards) {\n  return {\n    type: constants.FETCH_TRELLO_USER_BOARDS.SUCCESS,\n    payload: { boards },\n  };\n}\n\nexport function fetchTrelloUserBoardsError(error) {\n  return {\n    type: constants.FETCH_TRELLO_USER_BOARDS.ERROR,\n    payload: { errorMessage: error.message },\n  };\n}\n\nexport function addTrelloUserSelectedBoard(board) {\n  return {\n    type: constants.ADD_TRELLO_USER_SELECTED_BOARD,\n    payload: { board },\n  };\n}\n\nexport function fetchTrelloUserColumnsRequest() {\n  return {\n    type: constants.FETCH_TRELLO_USER_COLUMNS.REQUEST,\n  };\n}\n\nexport function fetchTrelloUserColumnsSuccess(columns) {\n  return {\n    type: constants.FETCH_TRELLO_USER_COLUMNS.SUCCESS,\n    payload: { columns },\n  };\n}\n\nexport function fetchTrelloUserColumnsError(error) {\n  return {\n    type: constants.FETCH_TRELLO_USER_COLUMNS.ERROR,\n    payload: { errorMessage: error.message },\n  };\n}\n\nexport function addTrelloUserDailyGoalsColumn(column) {\n  return {\n    type: constants.ADD_TRELLO_USER_DAILY_GOALS_COLUMN,\n    payload: { column },\n  };\n}\n\nexport function addTrelloUserSprintColumn(column) {\n  return {\n    type: constants.ADD_TRELLO_USER_SPRINT_COLUMN,\n    payload: { column },\n  };\n}\n\nexport function fetchTrelloUserDailyGoalsCardsRequest() {\n  return {\n    type: constants.FETCH_TRELLO_USER_DAILY_GOALS_CARDS.REQUEST,\n  };\n}\n\nexport function fetchTrelloUserDailyGoalsCardsSuccess(cards) {\n  return {\n    type: constants.FETCH_TRELLO_USER_DAILY_GOALS_CARDS.SUCCESS,\n    payload: { cards },\n  };\n}\n\nexport function fetchTrelloUserDailyGoalsCardsError(error) {\n  return {\n    type: constants.FETCH_TRELLO_USER_DAILY_GOALS_CARDS.ERROR,\n    payload: { errorMessage: error.message },\n  };\n}\n\nexport function fetchTrelloUserSprintBacklogCardsRequest() {\n  return {\n    type: constants.FETCH_TRELLO_USER_SPRINT_BACKLOG_CARDS.REQUEST,\n  };\n}\n\nexport function fetchTrelloUserSprintBacklogCardsSuccess(cards) {\n  return {\n    type: constants.FETCH_TRELLO_USER_SPRINT_BACKLOG_CARDS.SUCCESS,\n    payload: { cards },\n  };\n}\n\nexport function fetchTrelloUserSprintBacklogCardsError(error) {\n  return {\n    type: constants.FETCH_TRELLO_USER_SPRINT_BACKLOG_CARDS.ERROR,\n    payload: { errorMessage: error.message },\n  };\n}\n\nexport const fetchTrelloUser = () => {\n  return dispatch => {\n    dispatch(fetchTrelloUserRequest());\n    window.Trello.members.get(\n      `me`,\n      { fields: 'username,fullName' },\n      data => dispatch(fetchTrelloUserSuccess(data)),\n      error => dispatch(fetchTrelloUserError(error)),\n    );\n  };\n};\n\nexport const fetchTrelloUserBoards = () => {\n  return dispatch => {\n    dispatch(fetchTrelloUserBoardsRequest());\n    window.Trello.members.get(\n      `me/boards`,\n      { fields: 'name,lists=open' },\n      data => dispatch(fetchTrelloUserBoardsSuccess(data)),\n      error => dispatch(fetchTrelloUserBoardsError(error)),\n    );\n  };\n};\n\nexport const fetchTrelloUserColumns = board => {\n  return dispatch => {\n    dispatch(fetchTrelloUserColumnsRequest());\n    window.Trello.get(\n      `boards/` + board + `/lists`,\n      { fields: 'name' },\n      data => dispatch(fetchTrelloUserColumnsSuccess(data)),\n      error => dispatch(fetchTrelloUserColumnsError(error)),\n    );\n  };\n};\n\nexport const fetchDailyGoalsCards = column => {\n  return dispatch => {\n    dispatch(fetchTrelloUserDailyGoalsCardsRequest());\n    window.Trello.get(\n      `lists/` + column + `/cards`,\n      { fields: 'idShort,name,idMembers' },\n      data => dispatch(fetchTrelloUserDailyGoalsCardsSuccess(data)),\n      error => dispatch(fetchTrelloUserDailyGoalsCardsError(error)),\n    );\n  };\n};\n\nexport const fetchSprintBacklogCards = column => {\n  return dispatch => {\n    dispatch(fetchTrelloUserSprintBacklogCardsRequest());\n    window.Trello.get(\n      `lists/` + column + `/cards`,\n      { fields: 'idShort,name,idMembers' },\n      data => dispatch(fetchTrelloUserSprintBacklogCardsSuccess(data)),\n      error => dispatch(fetchTrelloUserSprintBacklogCardsError(error)),\n    );\n  };\n};\n\nexport function fetchTrelloUserBoardMembersRequest() {\n  return {\n    type: constants.FETCH_TRELLO_USER_BOARD_MEMBERS.REQUEST,\n  };\n}\n\nexport function fetchTrelloUserBoardMembersSuccess(boardOrigin, members) {\n  return {\n    type: constants.FETCH_TRELLO_USER_BOARD_MEMBERS.SUCCESS,\n    payload: { boardOrigin, members },\n  };\n}\n\nexport function fetchTrelloUserBoardMembersError(error) {\n  return {\n    type: constants.FETCH_TRELLO_USER_BOARD_MEMBERS.ERROR,\n    payload: { errorMessage: error.message },\n  };\n}\n\nexport const fetchTrelloUserBoardMembers = board => {\n  return dispatch => {\n    dispatch(fetchTrelloUserBoardMembersRequest());\n    window.Trello.get(\n      `boards/` + board + `/members`,\n      { fields: 'avatarHash,fullName,initials' },\n      data => dispatch(fetchTrelloUserBoardMembersSuccess(board, data)),\n      error => dispatch(fetchTrelloUserBoardMembersError(error)),\n    );\n  };\n};\n\nexport function toggleTrelloUserTeamMembership(memberId) {\n  return {\n    type: constants.TOGGLE_TRELLO_TEAM_MEMBERSHIP,\n    payload: { memberId },\n  };\n}\n\nexport function tagDevsOnCardRequest() {\n  return {\n    type: constants.TAG_DEVS_ON_CARD.REQUEST,\n  };\n}\n\nexport function tagDevsOnCardSuccess() {\n  return {\n    type: constants.TAG_DEVS_ON_CARD.SUCCESS,\n  };\n}\n\nexport function tagDevsOnCardError(error) {\n  return {\n    type: constants.TAG_DEVS_ON_CARD.ERROR,\n    payload: { errorMessage: error.message },\n  };\n}\n\nexport function tagDevsOnCard(cardId, membersId) {\n  return dispatch => {\n    dispatch(tagDevsOnCardRequest());\n    membersId.forEach(memberId =>\n      window.Trello.post(`cards/` + cardId + '/idMembers', { value: memberId }),\n    );\n  };\n}\n\nexport function moveCardToDailyGoalsRequest() {\n  return {\n    type: constants.MOVE_CARD_TO_DAILY_GOALS.REQUEST,\n  };\n}\n\nexport function moveCardToDailyGoals(cardId, dailyGoalsColumnId) {\n  return dispatch => {\n    dispatch(moveCardToDailyGoalsRequest());\n    window.Trello.put(`cards/` + cardId + '/idList', { value: dailyGoalsColumnId });\n  };\n}\n\nexport default {\n  fetchTrelloUserRequest,\n  fetchTrelloUserSuccess,\n  fetchTrelloUserError,\n};\n","export const getTrelloUserFullName = state => state.trelloUserState.user.fullName;\nexport const getTrelloUserBoards = state => state.trelloUserState.user.boards;\nexport const getTrelloUserSelectedBoard = state => state.trelloUserState.user.selectedBoard;\nexport const getTrelloUserColumns = state => state.trelloUserState.user.columns;\nexport const getTrelloUserDailyGoalsColumn = state =>\n  state.trelloUserState.user.dailyGoalsColumn.id;\nexport const getTrelloUserDailyGoalsCards = state =>\n  state.trelloUserState.user.dailyGoalsColumn.cards;\nexport const getTrelloUserSprintColumn = state => state.trelloUserState.user.sprintColumn.id;\nexport const getTrelloUserSprintBacklogCards = state =>\n  state.trelloUserState.user.sprintColumn.cards;\nexport const getTrelloUserBoardMembers = state => state.trelloUserState.user.boardMembers;\nexport const getTrelloUserBoardMembersOrigin = state =>\n  state.trelloUserState.user.boardMembersOrigin;\nexport const getTrelloUserDevTeam = state => state.trelloUserState.project.devTeam;\nexport const getTrelloUserDGCardsRelatedToMember = (state, memberId) =>\n  state.trelloUserState.user.dailyGoalsColumn.cards.filter(card =>\n    card.idMembers.includes(memberId),\n  );\n","import { constants } from './actions';\n\nexport const initialState = {\n  user: {\n    fullName: null,\n    username: null,\n    boards: [],\n    selectedBoard: '',\n    columns: [],\n    dailyGoalsColumn: {\n      id: '',\n      cards: [],\n    },\n    sprintColumn: {\n      id: '',\n      cards: [],\n    },\n    boardMembers: [],\n  },\n  project: {\n    devTeam: [],\n  },\n  error: null,\n  isLoading: false,\n};\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case constants.FETCH_TRELLO_USER.REQUEST:\n      return {\n        ...state,\n        isLoading: true,\n      };\n    case constants.FETCH_TRELLO_USER.SUCCESS:\n      return {\n        ...state,\n        user: { ...state.user, ...action.payload.user },\n        isLoading: false,\n      };\n    case constants.FETCH_TRELLO_USER.ERROR:\n      return {\n        ...state,\n        error: action.payload,\n        isLoading: false,\n      };\n    case constants.FETCH_TRELLO_USER_BOARDS.REQUEST:\n      return {\n        ...state,\n        isLoading: true,\n      };\n    case constants.FETCH_TRELLO_USER_BOARDS.SUCCESS:\n      return {\n        ...state,\n        user: { ...state.user, boards: action.payload.boards },\n        isLoading: false,\n      };\n    case constants.FETCH_TRELLO_USER_BOARDS.ERROR:\n      return {\n        ...state,\n        error: action.payload,\n        isLoading: false,\n      };\n    case constants.ADD_TRELLO_USER_SELECTED_BOARD:\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          selectedBoard: action.payload.board,\n        },\n      };\n    case constants.FETCH_TRELLO_USER_COLUMNS.SUCCESS:\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          columns: action.payload.columns,\n        },\n      };\n    case constants.ADD_TRELLO_USER_DAILY_GOALS_COLUMN:\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          dailyGoalsColumn: { ...state.user.dailyGoalsColumn, id: action.payload.column },\n        },\n      };\n    case constants.ADD_TRELLO_USER_SPRINT_COLUMN:\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          sprintColumn: { ...state.user.sprintColumn, id: action.payload.column },\n        },\n      };\n    case constants.FETCH_TRELLO_USER_DAILY_GOALS_CARDS.SUCCESS:\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          dailyGoalsColumn: {\n            ...state.user.dailyGoalsColumn,\n            cards: action.payload.cards,\n          },\n        },\n      };\n    case constants.FETCH_TRELLO_USER_SPRINT_BACKLOG_CARDS.SUCCESS:\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          sprintColumn: {\n            ...state.user.sprintColumn,\n            cards: action.payload.cards,\n          },\n        },\n      };\n    case constants.FETCH_TRELLO_USER_BOARD_MEMBERS.SUCCESS:\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          boardMembers: action.payload.members,\n          boardMembersOrigin: action.payload.boardOrigin,\n        },\n      };\n    case constants.TOGGLE_TRELLO_TEAM_MEMBERSHIP:\n      const memberIndex = state.project.devTeam\n        .map(function(member) {\n          return member.id;\n        })\n        .indexOf(action.payload.memberId);\n      return {\n        ...state,\n        project: {\n          ...state.project,\n          devTeam:\n            memberIndex !== -1\n              ? state.project.devTeam.filter(member => member.id !== action.payload.memberId)\n              : state.project.devTeam.concat({\n                  ...state.user.boardMembers.filter(\n                    member => member.id === action.payload.memberId,\n                  )[0],\n                  dailyCards: [],\n                }),\n        },\n        user: {\n          ...state.user,\n          boardMembers: state.user.boardMembers.map(member => {\n            if (member.id === action.payload.memberId) {\n              return { ...member, isInTeam: !member.isInTeam };\n            }\n            return member;\n          }),\n        },\n      };\n    default:\n      return state;\n  }\n}\n","export const constants = {\n  TOGGLE_EDIT_TEAM_POPIN: 'TOGGLE_EDIT_TEAM_POPIN',\n  TOGGLE_DEV_SELECTION_POPIN: 'TOGGLE_DEV_SELECTION_POPIN',\n  ADD_DEV_SELECTION_CARD_ID: 'ADD_DEV_SELECTION_CARD_ID',\n  TOGGLE_MEMBER_SELECTION: 'TOGGLE_MEMBER_SELECTION',\n};\n\nexport function toggleEditTeamPopin() {\n  return {\n    type: constants.TOGGLE_EDIT_TEAM_POPIN,\n  };\n}\n\nexport function toggleDevSelectionPopin() {\n  return {\n    type: constants.TOGGLE_DEV_SELECTION_POPIN,\n  };\n}\n\nexport function addDevSelectionCardId(cardId) {\n  return {\n    type: constants.ADD_DEV_SELECTION_CARD_ID,\n    payload: { cardId },\n  };\n}\n\nexport function toggleMemberSelection(memberId) {\n  return {\n    type: constants.TOGGLE_MEMBER_SELECTION,\n    payload: { memberId },\n  };\n}\n\nexport default {\n  toggleEditTeamPopin,\n  toggleDevSelectionPopin,\n  addDevSelectionCardId,\n};\n","import Menu from './Menu';\nimport {\n  fetchTrelloUserBoards,\n  fetchTrelloUser,\n  fetchTrelloUserColumns,\n  fetchDailyGoalsCards,\n  addTrelloUserSelectedBoard,\n  addTrelloUserDailyGoalsColumn,\n  addTrelloUserSprintColumn,\n  fetchSprintBacklogCards,\n} from 'redux/TrelloUser/actions';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport {\n  getTrelloUserFullName,\n  getTrelloUserBoards,\n  getTrelloUserSelectedBoard,\n  getTrelloUserColumns,\n  getTrelloUserDailyGoalsColumn,\n  getTrelloUserDailyGoalsCards,\n  getTrelloUserSprintColumn,\n  getTrelloUserSprintBacklogCards,\n} from 'redux/TrelloUser';\nimport {\n  toggleEditTeamPopin,\n  toggleDevSelectionPopin,\n  addDevSelectionCardId,\n} from 'redux/App/actions';\n\nconst mapStateToProps = state => ({\n  trelloUserFullName: getTrelloUserFullName(state),\n  trelloUserBoards: getTrelloUserBoards(state),\n  trelloUserSelectedBoard: getTrelloUserSelectedBoard(state),\n  trelloUserColumns: getTrelloUserColumns(state),\n  trelloUserDailyGoalsColumn: getTrelloUserDailyGoalsColumn(state),\n  trelloUserDailyGoalsCards: getTrelloUserDailyGoalsCards(state),\n  trelloUserSprintColumn: getTrelloUserSprintColumn(state),\n  trelloUserSprintBacklogCards: getTrelloUserSprintBacklogCards(state),\n});\n\nconst mapDispatchToProps = {\n  fetchTrelloUser,\n  fetchTrelloUserBoards,\n  fetchTrelloUserColumns,\n  fetchDailyGoalsCards,\n  addTrelloUserSelectedBoard,\n  addTrelloUserDailyGoalsColumn,\n  toggleEditTeamPopin,\n  toggleDevSelectionPopin,\n  addDevSelectionCardId,\n  addTrelloUserSprintColumn,\n  fetchSprintBacklogCards,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(withRouter(Menu));\n","const styles = {\n  dashboard: {\n    display: 'flex',\n    fontFamily: 'Roboto',\n    height: '100vh',\n  },\n  menu: {\n    display: 'flex',\n    flexDirection: 'column',\n    padding: 15,\n    fontFamily: 'Roboto',\n    width: 300,\n    boxSizing: 'border-box',\n    MozBoxShadow: '2px 0 10px #cccccc',\n    WebkitBoxShadow: '2px 0 10px #cccccc',\n    boxShadow: '2px 0 10px #cccccc',\n  },\n  prodPlan: {\n    display: 'flex',\n    flexGrow: 100,\n    flexDirection: 'column',\n    position: 'relative',\n  },\n};\n\nexport default styles;\n","const styles = {\n  popInContainer: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    padding: 30,\n    background: 'white',\n    MozBoxShadow: '2px 2px 10px #cccccc',\n    WebkitBoxShadow: '2px 2px 10px #cccccc',\n    boxShadow: '2px 2px 10px #cccccc',\n    zIndex: 1,\n    borderRadius: 10,\n  },\n};\n\nexport default styles;\n","// @flow\nimport React from 'react';\nimport styles from './PlannorPopin.style';\n\nexport default class PlannorPopin extends React.Component {\n  render() {\n    return (\n      <div style={{ ...this.props.style, ...styles.popInContainer }}>{this.props.content}</div>\n    );\n  }\n}\n","const styles = {\n  editTeamPopin: {\n    maxWidth: 600,\n  },\n  avatarContainer: {\n    verticalAlign: 'top',\n    display: 'inline-flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    margin: 5,\n    minWidth: 50,\n    minHeight: 50,\n    cursor: 'pointer',\n    borderRadius: '50%',\n    boxSizing: 'border-box',\n  },\n  avatarInTeam: {\n    border: '4px solid orange',\n    margin: 1,\n  },\n  avatar: {\n    borderRadius: '50%',\n    overflow: 'hidden',\n  },\n  undefinedAvatar: {\n    width: 50,\n    height: 50,\n    display: 'inline-flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 50,\n    background: '#dddddd',\n    textTransform: 'uppercase',\n  },\n  editTeamPopinFooter: {\n    textAlign: 'right',\n  },\n};\n\nexport default styles;\n","// @flow\nimport React from 'react';\nimport PlannorPopin from '../PlannorPopin';\nimport styles from './EditTeamPopin.style';\nimport BasicButton from '../BasicButton';\n\nexport default class EditTeamPopin extends React.Component {\n  componentDidMount() {\n    if (\n      this.props.trelloUserBoardMembers.length === 0 ||\n      this.props.trelloUserBoardMembersOrigin !== this.props.trelloUserSelectedBoard\n    ) {\n      this.props.fetchTrelloUserBoardMembers(this.props.trelloUserSelectedBoard);\n    }\n  }\n  render() {\n    const members = this.props.trelloUserBoardMembers;\n    const toggleMembership = (memberId, event) =>\n      this.props.toggleTrelloUserTeamMembership(memberId);\n    const content = (\n      <div>\n        <div>\n          {members.map(member => (\n            <div\n              onClick={toggleMembership.bind(this, member.id)}\n              key={member.id}\n              style={\n                member.isInTeam\n                  ? { ...styles.avatarContainer, ...styles.avatarInTeam }\n                  : styles.avatarContainer\n              }\n              title={member.fullName}\n            >\n              {member.avatarHash ? (\n                <img\n                  style={styles.avatar}\n                  alt={member.fullName}\n                  src={'https://trello-avatars.s3.amazonaws.com/' + member.avatarHash + '/50.png'}\n                />\n              ) : (\n                <div style={styles.undefinedAvatar}>{member.initials}</div>\n              )}\n            </div>\n          ))}\n        </div>\n        <div style={styles.editTeamPopinFooter}>\n          <BasicButton label=\"Valider\" onClickAction={this.props.toggleEditTeamPopin} />\n        </div>\n      </div>\n    );\n    return <PlannorPopin style={styles.editTeamPopin} content={content} />;\n  }\n}\n","import EditTeamPopin from './EditTeamPopin';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport {\n  getTrelloUserBoardMembers,\n  getTrelloUserBoardMembersOrigin,\n  getTrelloUserSelectedBoard,\n} from 'redux/TrelloUser';\nimport {\n  fetchTrelloUserBoardMembers,\n  toggleTrelloUserTeamMembership,\n} from 'redux/TrelloUser/actions';\nimport { toggleEditTeamPopin } from 'redux/App/actions';\n\nconst mapStateToProps = state => ({\n  trelloUserSelectedBoard: getTrelloUserSelectedBoard(state),\n  trelloUserBoardMembers: getTrelloUserBoardMembers(state),\n  trelloUserBoardMembersOrigin: getTrelloUserBoardMembersOrigin(state),\n});\n\nconst mapDispatchToProps = {\n  fetchTrelloUserBoardMembers,\n  toggleEditTeamPopin,\n  toggleTrelloUserTeamMembership,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(withRouter(EditTeamPopin));\n","const styles = {\n  editTeamPopin: {\n    maxWidth: 600,\n  },\n  avatarContainer: {\n    verticalAlign: 'top',\n    display: 'inline-flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    margin: 5,\n    minWidth: 50,\n    minHeight: 50,\n    cursor: 'pointer',\n    borderRadius: '50%',\n    boxSizing: 'border-box',\n  },\n  avatar: {\n    borderRadius: '50%',\n    overflow: 'hidden',\n  },\n  avatarInTeam: {\n    border: '4px solid orange',\n    margin: 1,\n  },\n  undefinedAvatar: {\n    width: 50,\n    height: 50,\n    display: 'inline-flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 50,\n    background: '#dddddd',\n    textTransform: 'uppercase',\n  },\n  editTeamPopinFooter: {\n    textAlign: 'right',\n  },\n  warningMessage: {\n    color: '#d88c00',\n    marginBottom: 10,\n  },\n};\n\nexport default styles;\n","// @flow\nimport React from 'react';\nimport PlannorPopin from '../PlannorPopin';\nimport styles from './DevSelectionPopin.style';\nimport BasicButton from '../BasicButton';\n\nexport default class DevSelectionPopin extends React.Component {\n  componentDidMount() {\n    if (\n      this.props.trelloUserBoardMembers.length === 0 ||\n      this.props.trelloUserBoardMembersOrigin !== this.props.trelloUserSelectedBoard\n    ) {\n      this.props.fetchTrelloUserBoardMembers(this.props.trelloUserSelectedBoard);\n    }\n  }\n  render() {\n    const members = this.props.devTeamMembers;\n\n    const validateAction = () => {\n      this.props.toggleDevSelectionPopin();\n      this.props.tagDevsOnCard(this.props.selectedCard, this.props.selectedMembers);\n      if (this.props.selectedMembers.length > 0) {\n        this.props.moveCardToDailyGoals(this.props.selectedCard, this.props.dailyGoalsColumn);\n      }\n    };\n    const content = (\n      <div>\n        <div>\n          {this.props.dailyGoalsColumn &&\n            members.map(member => (\n              <div\n                onClick={this.props.toggleMemberSelection.bind(this, member.id)}\n                key={member.id}\n                style={\n                  this.props.selectedMembers.includes(member.id)\n                    ? { ...styles.avatarContainer, ...styles.avatarInTeam }\n                    : styles.avatarContainer\n                }\n                title={member.fullName}\n              >\n                {member.avatarHash ? (\n                  <img\n                    style={styles.avatar}\n                    alt={member.fullName}\n                    src={'https://trello-avatars.s3.amazonaws.com/' + member.avatarHash + '/50.png'}\n                  />\n                ) : (\n                  <div style={styles.undefinedAvatar}>{member.initials}</div>\n                )}\n              </div>\n            ))}\n          {members.length === 0 && (\n            <div style={styles.warningMessage}>\n              Vous devez d'abord ajouter des membres à l'équipe\n            </div>\n          )}\n          {!this.props.dailyGoalsColumn && (\n            <div style={styles.warningMessage}>\n              Vous devez d'abord sélectionner une colonne Daily Goals\n            </div>\n          )}\n        </div>\n        <div style={styles.editTeamPopinFooter}>\n          <BasicButton label=\"Valider\" onClickAction={validateAction} />\n        </div>\n      </div>\n    );\n    return <PlannorPopin style={styles.editTeamPopin} content={content} />;\n  }\n}\n","import { constants } from './actions';\n\nexport const initialState = {\n  isEditTeamPopinOpen: false,\n  devSelectionPopin: {\n    isOpen: false,\n    selectedCardId: null,\n    selectedMembers: [],\n  },\n};\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case constants.TOGGLE_EDIT_TEAM_POPIN:\n      return {\n        ...state,\n        isEditTeamPopinOpen: !state.isEditTeamPopinOpen,\n      };\n    case constants.TOGGLE_DEV_SELECTION_POPIN:\n      return {\n        ...state,\n        devSelectionPopin: {\n          ...state.devSelectionPopin,\n          isOpen: !state.devSelectionPopin.isOpen,\n        },\n      };\n    case constants.ADD_DEV_SELECTION_CARD_ID:\n      return {\n        ...state,\n        devSelectionPopin: {\n          ...state.devSelectionPopin,\n          selectedCardId: action.payload.cardId,\n        },\n      };\n    case constants.TOGGLE_MEMBER_SELECTION:\n      return {\n        ...state,\n        devSelectionPopin: {\n          ...state.devSelectionPopin,\n          selectedMembers: state.devSelectionPopin.selectedMembers.includes(action.payload.memberId)\n            ? state.devSelectionPopin.selectedMembers.filter(\n                memberId => memberId !== action.payload.memberId,\n              )\n            : [...state.devSelectionPopin.selectedMembers, action.payload.memberId],\n        },\n      };\n    default:\n      return state;\n  }\n}\n","import DevSelectionPopin from './DevSelectionPopin';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport {\n  getTrelloUserBoardMembers,\n  getTrelloUserBoardMembersOrigin,\n  getTrelloUserSelectedBoard,\n  getTrelloUserDevTeam,\n  getTrelloUserDailyGoalsColumn,\n} from 'redux/TrelloUser';\nimport {\n  fetchTrelloUserBoardMembers,\n  toggleTrelloUserTeamMembership,\n  tagDevsOnCard,\n  moveCardToDailyGoals,\n} from 'redux/TrelloUser/actions';\nimport { toggleDevSelectionPopin, toggleMemberSelection } from 'redux/App/actions';\nimport { getDevSelectionCardId, getSelectedMembers } from 'redux/App';\n\nconst mapStateToProps = state => ({\n  selectedCard: getDevSelectionCardId(state),\n  devTeamMembers: getTrelloUserDevTeam(state),\n  dailyGoalsColumn: getTrelloUserDailyGoalsColumn(state),\n  trelloUserSelectedBoard: getTrelloUserSelectedBoard(state),\n  trelloUserBoardMembers: getTrelloUserBoardMembers(state),\n  trelloUserBoardMembersOrigin: getTrelloUserBoardMembersOrigin(state),\n  selectedMembers: getSelectedMembers(state),\n});\n\nconst mapDispatchToProps = {\n  fetchTrelloUserBoardMembers,\n  toggleDevSelectionPopin,\n  toggleTrelloUserTeamMembership,\n  tagDevsOnCard,\n  moveCardToDailyGoals,\n  toggleMemberSelection,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(withRouter(DevSelectionPopin));\n","export const isEditTeamPopinOpen = state => state.appState.isEditTeamPopinOpen;\nexport const isDevSelectionPopinOpen = state => state.appState.devSelectionPopin.isOpen;\nexport const getDevSelectionCardId = state => state.appState.devSelectionPopin.selectedCardId;\nexport const getSelectedMembers = state => state.appState.devSelectionPopin.selectedMembers;\n","const styles = {\n  container: {\n    display: 'flex',\n    overflow: 'hidden',\n    flexDirection: 'column',\n    margin: '0px 5px 10px 5px',\n    borderRadius: 5,\n    width: '20%',\n  },\n  columnHeader: {\n    flex: '0 1 auto',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  grid: {\n    position: 'relative',\n    flex: '1 1 auto',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  gridItem: {\n    display: 'inline-grid',\n    width: '100%',\n  },\n};\n\nexport default styles;\n","// @flow\nimport React from 'react';\nimport styles from './PlanColumn.style.js';\nimport PlanCard from '../PlanCard';\n\nexport default class PlanColumn extends React.Component {\n  render() {\n    return (\n      <div style={styles.container}>\n        <div style={{ ...this.props.style, ...styles.grid }}>\n          {this.props.cards.map(card => (\n            <PlanCard\n              key={card.id}\n              dayStartTime={this.props.dayStartTime}\n              dayEndTime={this.props.dayEndTime}\n              startTime={card.startTime}\n              endTime={card.endTime}\n              content={card.name}\n              icon={{ name: 'delete' }}\n            />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n","const styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    margin: '10px 5px 5px 5px',\n    backgroundColor: '#2196f3',\n    color: 'white',\n    MozBoxShadow: '2px 2px 10px #cccccc',\n    WebkitBoxShadow: '2px 2px 10px #cccccc',\n    boxShadow: '2px 2px 10px #cccccc',\n    borderRadius: 5,\n    width: '20%',\n  },\n  picture: {\n    margin: 7,\n    width: 50,\n    height: 50,\n    borderRadius: '50%',\n    overflow: 'hidden',\n  },\n  devName: {\n    textAlign: 'center',\n    margin: '0 7px 7px 7px',\n    fontSize: 20,\n  },\n  undefinedAvatar: {\n    width: 50,\n    height: 50,\n    color: '#111111',\n    display: 'inline-flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 50,\n    background: '#dddddd',\n    textTransform: 'uppercase',\n  },\n};\n\nexport default styles;\n","// @flow\nimport React from 'react';\nimport styles from './ColumnHeader.style';\n\nexport default class ColumnHeader extends React.Component {\n  render() {\n    return (\n      <div style={styles.container}>\n        <div style={styles.picture} title={this.props.member.fullName}>\n          {this.props.member.avatarHash ? (\n            <img\n              style={styles.avatar}\n              alt={this.props.member.fullName}\n              src={\n                'https://trello-avatars.s3.amazonaws.com/' +\n                this.props.member.avatarHash +\n                '/50.png'\n              }\n            />\n          ) : (\n            <div style={styles.undefinedAvatar}>{this.props.member.initials}</div>\n          )}\n        </div>\n        <div style={styles.devName}>{this.props.member.fullName}</div>\n      </div>\n    );\n  }\n}\n","const styles = {\n  hourLine: {\n    position: 'absolute',\n    top: 0,\n    color: '#cccccc',\n    borderTop: 'dashed #cccccc 1px',\n    width: '100%',\n  },\n  hourLabel: {\n    marginTop: 5,\n    marginLeft: 15,\n  },\n};\n\nexport default styles;\n","// @flow\nimport React from 'react';\nimport { timeInMinutes, durationInMinutes } from '../../helpers';\nimport styles from './HourLine.style';\n\nexport default class HourLine extends React.Component {\n  render() {\n    const topProp =\n      (100 * (timeInMinutes(this.props.time) - timeInMinutes(this.props.dayStartTime))) /\n        (durationInMinutes(this.props.dayStartTime, this.props.dayEndTime) + 10) +\n      '%';\n    return (\n      <div style={{ ...styles.hourLine, top: topProp }}>\n        <div style={styles.hourLabel}>\n          {this.props.time.hour}h{this.props.time.minute !== 0 && this.props.time.minute}\n        </div>\n      </div>\n    );\n  }\n}\n","const styles = {\n  headerContainer: {\n    position: 'relative',\n    display: 'flex',\n    width: '100%',\n    overflowX: 'scroll',\n    justifyContent: 'center',\n  },\n  columnHeadersContainer: {\n    display: 'flex',\n    marginLeft: 60,\n    width: '100%',\n    justifyContent: 'center',\n  },\n  planContainer: {\n    position: 'relative',\n    display: 'flex',\n    width: '100%',\n    overflowX: 'scroll',\n    justifyContent: 'center',\n    flexGrow: 100,\n  },\n  columnsContainer: {\n    display: 'flex',\n    marginLeft: 60,\n    width: '100%',\n    overflowX: 'scroll',\n    justifyContent: 'center',\n    flexGrow: 100,\n  },\n  errorDiv: {\n    display: 'flex',\n    margin: '0px 5px 10px 5px',\n    background: 'rgba(255, 230, 230)',\n    color: 'red',\n    width: '20%',\n    zIndex: 1,\n    borderRadius: 5,\n    justifyContent: 'center',\n    alignItems: 'center',\n    MozBoxShadow: '2px 2px 10px #cccccc',\n    WebkitBoxShadow: '2px 2px 10px #cccccc',\n    boxShadow: '2px 2px 10px #cccccc',\n  },\n  errorLabel: {\n    textAlign: 'center',\n    fontSize: 14,\n  },\n};\n\nexport default styles;\n","// @flow\nimport React from 'react';\nimport PlanColumn from '../PlanColumn';\nimport ColumnHeader from '../ColumnHeader';\nimport HourLine from '../HourLine';\nimport styles from './ProdPlan.style';\n\nexport default class ProdPlan extends React.Component {\n  render() {\n    const dayStartTime = { hour: 9, minute: 30 };\n    const dayEndTime = { hour: 18, minute: 0 };\n    const hoursOfTheDay = [\n      { id: 1, hour: 9, minute: 30 },\n      { id: 2, hour: 10, minute: 30 },\n      { id: 3, hour: 11, minute: 30 },\n      { id: 4, hour: 12, minute: 30 },\n      { id: 5, hour: 14, minute: 0 },\n      { id: 6, hour: 15, minute: 0 },\n      { id: 7, hour: 16, minute: 0 },\n      { id: 8, hour: 17, minute: 0 },\n    ];\n    const cards1 = [\n      { id: 1, startTime: { hour: 9, minute: 30 }, endTime: { hour: 11, minute: 0 } },\n      { id: 2, startTime: { hour: 11, minute: 15 }, endTime: { hour: 15, minute: 0 } },\n      { id: 3, startTime: { hour: 15, minute: 15 }, endTime: { hour: 18, minute: 0 } },\n    ];\n    const cards2 = [\n      { id: 1, startTime: { hour: 9, minute: 30 }, endTime: { hour: 12, minute: 15 } },\n      { id: 2, startTime: { hour: 14, minute: 0 }, endTime: { hour: 17, minute: 0 } },\n    ];\n    const cards3 = [\n      { id: 1, startTime: { hour: 9, minute: 45 }, endTime: { hour: 11, minute: 45 } },\n      { id: 2, startTime: { hour: 12, minute: 0 }, endTime: { hour: 15, minute: 30 } },\n      { id: 3, startTime: { hour: 16, minute: 15 }, endTime: { hour: 18, minute: 0 } },\n    ];\n    return (\n      <div style={{ ...this.props.style, ...styles.container }}>\n        <div style={styles.headerContainer}>\n          <div style={styles.columnHeadersContainer}>\n            {this.props.devTeamMembers.map(member => (\n              <ColumnHeader key={member.id} style={styles.columnHeader} member={member} />\n            ))}\n          </div>\n        </div>\n        <div style={styles.planContainer}>\n          {hoursOfTheDay.map(time => (\n            <HourLine\n              key={time.id}\n              time={time}\n              dayStartTime={dayStartTime}\n              dayEndTime={dayEndTime}\n            />\n          ))}\n          <div style={styles.columnsContainer}>\n            {this.props.devTeamMembers.map(member => {\n              if (!this.props.dailyGoalsColumn) {\n                return (\n                  <div key={member.id} style={styles.errorDiv}>\n                    <span style={styles.errorLabel}>\n                      Vous n'avez pas sélectionné de colonne 'Daily Goals'\n                    </span>\n                  </div>\n                );\n              }\n              return (\n                <PlanColumn\n                  key={member.id}\n                  dayStartTime={dayStartTime}\n                  dayEndTime={dayEndTime}\n                  member={member}\n                  cards={this.props.getDailyGoalsCardsRelatedToMember(member.id)}\n                />\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import ProdPlan from './ProdPlan';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport {\n  getTrelloUserDevTeam,\n  getTrelloUserDGCardsRelatedToMember,\n  getTrelloUserDailyGoalsColumn,\n} from 'redux/TrelloUser';\n\nconst mapStateToProps = state => ({\n  devTeamMembers: getTrelloUserDevTeam(state),\n  getDailyGoalsCardsRelatedToMember: memberId =>\n    getTrelloUserDGCardsRelatedToMember(state, memberId),\n  dailyGoalsColumn: getTrelloUserDailyGoalsColumn(state),\n});\n\nconst mapDispatchToProps = {};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(withRouter(ProdPlan));\n","// @flow\nimport React from 'react';\nimport Menu from '../Menu';\nimport styles from './Dashboard.style';\nimport EditTeamPopin from '../EditTeamPopin';\nimport DevSelectionPopin from '../DevSelectionPopin';\nimport ProdPlan from '../ProdPlan';\n\nexport default class Dashboard extends React.Component {\n  render() {\n    return (\n      <div style={styles.dashboard}>\n        <Menu style={styles.menu} />\n        <ProdPlan style={styles.prodPlan} />\n        {this.props.isEditTeamPopinOpen && <EditTeamPopin />}\n        {this.props.isDevSelectionPopinOpen && <DevSelectionPopin />}\n      </div>\n    );\n  }\n}\n","import Dashboard from './Dashboard';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { isEditTeamPopinOpen, isDevSelectionPopinOpen } from 'redux/App';\n\nconst mapStateToProps = state => ({\n  isEditTeamPopinOpen: isEditTeamPopinOpen(state),\n  isDevSelectionPopinOpen: isDevSelectionPopinOpen(state),\n});\n\nconst mapDispatchToProps = {};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(withRouter(Dashboard));\n","import * as React from 'react';\n\nimport Dashboard from '../../components/Dashboard';\n\nexport default class Home extends React.Component {\n  render() {\n    return <Dashboard />;\n  }\n}\n","import { connect } from 'react-redux';\nimport Home from './Home';\n\nfunction mapStateToProps() {\n  return {};\n}\n\nfunction mapDispatchToProps() {\n  return {};\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Home);\n","// @flow\n// $FlowFixMe flow is not ready for Suspense or lazy today\nimport React, { Suspense } from 'react';\nimport { Route, Switch } from 'react-router';\n\nimport Home from './pages/Home';\n\nconst routes = () => (\n  <Suspense fallback={<div>Loading...</div>}>\n    <Switch>\n      <Route exact path=\"/\" component={Home} />\n    </Switch>\n  </Suspense>\n);\n\nexport default routes;\n","// @flow\nexport const flattenMessages = (nestedMessages, prefix = '') =>\n  Object.keys(nestedMessages).reduce((messages, key) => {\n    const value = nestedMessages[key];\n    const prefixedKey = prefix ? `${prefix}.${key}` : key;\n\n    if (typeof value === 'string') {\n      messages[prefixedKey] = value; // eslint-disable-line\n    } else {\n      Object.assign(messages, flattenMessages(value, prefixedKey));\n    }\n\n    return messages;\n  }, {});\n\nexport default flattenMessages;\n","const styles = {\n  header: {\n    backgroundColor: '#2196f3',\n    padding: 15,\n    fontSize: 20,\n    fontFamily: 'Roboto',\n    color: 'white',\n  },\n};\n\nexport default styles;\n","// @flow\nimport React from 'react';\nimport { IntlProvider, addLocaleData } from 'react-intl';\nimport fr from 'react-intl/locale-data/fr';\nimport en from 'react-intl/locale-data/en';\n\nimport frMessages from 'translations/fr.json';\nimport enMessages from 'translations/en.json';\nimport { flattenMessages } from 'services/i18n/intl';\nimport styles from './Header.style';\n\nconst locales = {\n  fr: flattenMessages(frMessages),\n  en: flattenMessages(enMessages),\n};\n\naddLocaleData([...fr, ...en]);\n\nexport default class Header extends React.Component {\n  render() {\n    return (\n      <IntlProvider locale=\"fr\" messages={locales.fr}>\n        <div style={styles.header}>\n            Plannor 3000\n        </div>\n      </IntlProvider>\n    );\n  }\n}\n","const styles = {\n  rootContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100vh',\n  },\n};\n\nexport default styles;\n","// @flow\nimport React from 'react';\nimport { IntlProvider, addLocaleData } from 'react-intl';\nimport fr from 'react-intl/locale-data/fr';\nimport en from 'react-intl/locale-data/en';\n\nimport frMessages from 'translations/fr.json';\nimport enMessages from 'translations/en.json';\nimport { flattenMessages } from 'services/i18n/intl';\n\nimport Header from '../Header';\nimport styles from './Root.style';\n\nconst locales = {\n  fr: flattenMessages(frMessages),\n  en: flattenMessages(enMessages),\n};\n\naddLocaleData([...fr, ...en]);\n\n// type Props = {\n//   children: React$Element<*>,\n// };\n\nexport default class Root extends React.Component {\n  render() {\n    const { children } = this.props;\n    return (\n      <IntlProvider locale=\"fr\" messages={locales.fr}>\n        <div style={styles.rootContainer}>\n          <Header />\n          {children}\n        </div>\n      </IntlProvider>\n    );\n  }\n}\n","// @flow\nimport Root from './Root';\n\nexport default Root;\n","// @flow\n/**\n * Combine all reducers in this file and export the combined reducers.\n * If we were to do this in store.js, reducers wouldn't be hot reloadable.\n */\n\nimport { combineReducers } from 'redux';\n\n/**\n * Example of the Avatar module which should export a reducer.\n */\n\nimport trelloUserReducer, { initialState as trelloUserState } from './TrelloUser/reducer';\nimport appReducer, { initialState as appState } from './App/reducer';\n\n// Combine all reducers you may have here\nexport default combineReducers({\n  trelloUserState: trelloUserReducer,\n  appState: appReducer,\n});\n\nexport const initialStates = {\n  trelloUserState,\n  appState,\n};\n","import React from 'react';\n\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\n\nimport theme from './theme';\nimport Routes from './routes';\nimport Root from './components/Root';\nimport configureStore from './redux/plannorStore';\n\nconst RootComponentWithRoutes = () => (\n  <Root>\n    <Routes />\n  </Root>\n);\n\nconst store = configureStore();\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <MuiThemeProvider theme={theme}>\n          <Router>\n            <Route path=\"/\" component={RootComponentWithRoutes} />\n          </Router>\n        </MuiThemeProvider>\n      </Provider>\n    );\n  }\n}\n","import { createStore, applyMiddleware, compose } from 'redux';\n// See\n// https://github.com/gaearon/redux-thunk and http://redux.js.org/docs/advanced/AsyncActions.html\nimport thunkMiddleware from 'redux-thunk';\nimport reducers, { initialStates } from './reducers';\n\nexport default function configureStore(props, context) {\n  // This is how we get initial props from Symfony into redux.\n  const { trelloUserState } = initialStates;\n\n  // Redux expects to initialize the store using an Object\n  const initialState = {\n    trelloUserState: { ...trelloUserState },\n  };\n\n  // use devtools if we are in a browser and the extension is enabled\n  let composeEnhancers =\n    (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\n  // middlewares\n  let middlewares = [thunkMiddleware];\n\n  const store = createStore(\n    reducers,\n    initialState,\n    composeEnhancers(applyMiddleware(...middlewares)),\n  );\n  return store;\n}\n","/* eslint-disable */\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ',\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'babel-polyfill';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport createBrowserHistory from 'history/createBrowserHistory';\n\nimport App from './App';\nimport { register } from './serviceWorker';\nimport configureStore from './redux/store';\n\nconst history = createBrowserHistory();\nconst { store, persistor } = configureStore(history);\n\nconst rootEl = document.getElementById('root');\n\nconst serviceWorkerConfig = {};\nif (rootEl) {\n  ReactDOM.render(<App history={history} store={store} persistor={persistor} />, rootEl);\n  register(serviceWorkerConfig);\n}\n\nif (module.hot) {\n  module.hot.accept('./App', () => {\n    const NextApp = require('./App').default; // eslint-disable-line\n    if (rootEl) {\n      ReactDOM.render(<NextApp history={history} store={store} />, rootEl);\n    }\n  });\n}\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport reducers, { initialStates } from './reducers';\nimport thunkMiddleware from 'redux-thunk';\n\nexport default function configureStore() {\n  // use devtools if we are in a browser and the extension is enabled\n  let composeEnhancers =\n    (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\n  // middlewares\n  let middlewares = [thunkMiddleware];\n\n  const store = createStore(\n    reducers,\n    initialStates,\n    composeEnhancers(applyMiddleware(...middlewares)),\n  );\n  return store;\n}\n"],"sourceRoot":""}