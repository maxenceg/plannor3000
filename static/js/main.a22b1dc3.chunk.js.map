{"version":3,"sources":["theme.js","components/BasicButton/BasicButton.js","components/BasicSelect/BasicSelect.js","components/BasicButtonPlannor/BasicButtonPlannor.js","components/ButtonsPanel/ButtonsPanel.js","helpers/TimeHelpers/timeHelpers.js","components/PlanCard/PlanCard.js","components/Menu/Menu.style.js","components/BasicCollapsePlannor/BasicCollapsePlannor.js","components/Menu/Menu.js","redux/TrelloUser/actions.js","redux/TrelloUser/selectors.js","redux/TrelloUser/reducer.js","redux/App/actions.js","components/Menu/Menu.wrap.js","components/Dashboard/Dashboard.style.js","components/PlannorPopin/PlannorPopin.js","components/EditTeamPopin/EditTeamPopin.style.js","components/EditTeamPopin/EditTeamPopin.js","redux/App/selectors.js","redux/App/reducer.js","components/EditTeamPopin/EditTeamPopin.wrap.js","components/DevSelectionPopin/DevSelectionPopin.style.js","components/DevSelectionPopin/DevSelectionPopin.js","components/DevSelectionPopin/DevSelectionPopin.wrap.js","components/CardDescriptionPopin/CardDescriptionPopin.js","components/CardDescriptionPopin/CardDescriptionPopin.wrap.js","components/PlanColumn/PlanColumn.style.js","components/PlanColumn/PlanColumn.js","components/PlanColumn/PlanColumn.wrap.js","components/ColumnHeader/ColumnHeader.js","components/HourLine/HourLine.style.js","components/HourLine/HourLine.js","components/CurrentHourLine/CurrentHourLine.style.js","components/CurrentHourLine/CurrentHourLine.js","components/ProdPlan/ProdPlan.js","components/ProdPlan/ProdPlan.wrap.js","components/Dashboard/Dashboard.js","components/Dashboard/Dashboard.wrap.js","pages/Home/Home.js","pages/Home/Home.wrap.js","routes.js","services/i18n/intl.js","assets/plannor3000-logo.svg","components/Header/Header.js","components/Root/Root.style.js","components/Root/Root.js","components/Root/Root.wrap.js","redux/reducers.js","App.js","redux/plannorStore.js","serviceWorker.js","index.js","redux/store.js"],"names":["createMuiTheme","typography","useNextVariants","palette","primary","blue","BasicButton","react_default","a","createElement","Button_default","style","this","props","onClick","onClickAction","variant","color","label","Component","BasicSelect","FormControl_default","propStyle","InputLabel_default","htmlFor","Select_default","value","onChange","handleChange","options","map","option","MenuItem_default","key","BasicButtonPlannor","className","ButtonsPanel","isTeamEditable","components_BasicButtonPlannor_BasicButtonPlannor","editTeamAction","refreshAction","React","timeInMinutes","time","hour","minute","durationInMinutes","startTime","endTime","splitTimeFromString","timeString","split","parseInt","stringTimeFromObject","timeObject","toString","getCurrentTime","Date","getHours","getMinutes","PlanCard","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","hover","_this2","devName","setTimeout","Notification","card","idShort","body","requireInteraction","_this3","setHover","isHovered","setState","topProp","dayStartTime","dayEndTime","heightProp","timedCardContainerStyle","top","height","position","objectSpread","onMouseLeave","cardAction","labels","name","onMouseEnter","class","icons","icon","event","clickAction","stopPropagation","handleClick","action","styles","boardSelect","width","buttonsPanel","display","justifyContent","connectToTrelloButton","cardsContainer","marginTop","flexGrow","overflowY","planCard","BasicCollapsePlannor","isCollapsed","toggleCollapse","title","children","Menu","window","Trello","authorize","type","scope","read","write","expiration","success","fetchTrelloUser","fetchTrelloUserBoards","fetchData","boardSelectOptions","trelloUserBoards","board","id","columnSelectOptions","trelloUserColumns","column","authorized","components_BasicButton_BasicButton","length","ButtonsPanel_ButtonsPanel_ButtonsPanel","trelloUserSelectedBoard","fetchTrelloUserColumns","flowColumns","forEach","fetchCardsFromColumn","toggleEditTeamPopin","components_BasicSelect_BasicSelect","addTrelloUserSelectedBoard","target","trelloUserSprintColumn","addTrelloUserSprintColumn","trelloUserDailyGoalsColumn","addTrelloUserDailyGoalsColumn","fetchDailyGoalsCards","trelloUserToValidateColumn","addTrelloUserToValidateColumn","columnId","components_BasicCollapsePlannor_BasicCollapsePlannor","getCardsFromColumn","devs","PlanCard_PlanCard_PlanCard","toggleDevSelectionPopin","addDevSelectionCard","openDevSelectionPopin","fetchCardChecklists","toggleCardDescriptionPopin","openCardDescriptionPopin","constants","FETCH_TRELLO_USER","REQUEST","SUCCESS","ERROR","FETCH_TRELLO_USER_BOARDS","FETCH_TRELLO_USER_COLUMNS","FETCH_TRELLO_USER_DAILY_GOALS_CARDS","FETCH_CARDS_FROM_COLUMN","FETCH_CARD_CHECKLISTS","FETCH_TRELLO_USER_BOARD_MEMBERS","TAG_DEVS_ON_CARD","MOVE_CARD_TO_DAILY_GOALS","ADD_TRELLO_USER_SELECTED_BOARD","ADD_TRELLO_USER_DAILY_GOALS_COLUMN","ADD_TRELLO_USER_SPRINT_COLUMN","ADD_TRELLO_USER_TO_VALIDATE_COLUMN","TOGGLE_TRELLO_TEAM_MEMBERSHIP","TAG_DEVS_ON_PLANNOR_CARD","REMOVE_CARDS_FROM_SPRINT_BACKLOG","fetchTrelloUserRequest","fetchTrelloUserSuccess","user","payload","fetchTrelloUserError","error","errorMessage","message","dispatch","get","fields","data","checklists","fetchCardChecklistsSuccess","fetchCardChecklistsError","fetchTrelloUserBoardMembers","boardOrigin","members","fetchTrelloUserBoardMembersError","toggleTrelloUserTeamMembership","memberId","getTrelloUserFullName","trelloUserState","fullName","getTrelloUserBoards","boards","getTrelloUserSelectedBoard","selectedBoard","getTrelloUserColumns","columns","getTrelloUserDailyGoalsColumn","dailyGoalsColumn","getTrelloUserDailyGoalsCards","cards","getTrelloUserSprintColumn","sprintColumn","getTrelloUserToValidateColumn","toValidateColumn","getTrelloUserSprintBacklogCards","filter","getFlowColumns","toConsumableArray","firstIndex","findIndex","lastIndex","splice","getTrelloUserBoardMembers","boardMembers","getTrelloUserBoardMembersOrigin","boardMembersOrigin","getTrelloUserDevTeam","project","devTeam","initialState","username","isLoading","TOGGLE_EDIT_TEAM_POPIN","TOGGLE_DEV_SELECTION_POPIN","TOGGLE_CARD_DESCRIPTION_POPIN","ADD_DEV_SELECTION_CARD","TOGGLE_MEMBER_SELECTION","mapDispatchToProps","fetchTrelloUserBoardsError","fetchTrelloUserColumnsError","fetchTrelloUserDailyGoalsCardsError","fetchCardsFromColumnSuccess","fetchCardsFromColumnError","connect","trelloUserFullName","trelloUserDailyGoalsCards","trelloUserSprintBacklogCards","withRouter","dashboard","fontFamily","menu","flexDirection","padding","boxSizing","MozBoxShadow","WebkitBoxShadow","boxShadow","PlannorPopin","Dialog_default","open","isOpen","onClose","handleClose","aria-labelledby","aria-describedby","DialogTitle_default","DialogContent_default","content","DialogActions_default","closeLabel","handleSubmit","autoFocus","submitLabel","editTeamPopin","maxWidth","avatarContainer","verticalAlign","alignItems","margin","minWidth","minHeight","cursor","borderRadius","avatarInTeam","border","avatar","overflow","undefinedAvatar","background","textTransform","editTeamPopinFooter","textAlign","EditTeamPopin","trelloUserBoardMembers","trelloUserBoardMembersOrigin","toggleMembership","member","bind","isInTeam","avatarHash","alt","src","initials","PlannorPopin_PlannorPopin","isEditTeamPopinOpen","appState","isDevSelectionPopinOpen","devSelectionPopin","getDevSelectionCard","selectedCard","isCardDescriptionPopinOpen","cardDescriptionPopin","getCardDescriptionPopinCard","getSelectedMembers","selectedMembers","warningMessage","marginBottom","DevSelectionPopin","devTeamMembers","startTimeString","endTimeString","toggleMemberSelection","includes","TextField_default","defaultValue","InputLabelProps","shrink","inputProps","step","tagDevsOnCard","moveCardToDailyGoals","membersId","devIds","cardId","post","dailyGoalsColumnId","put","removeCardFromSprintBacklog","CardDescriptionPopin","desc","checklist","checkItems","checkItem","console","log","container","columnHeader","flex","grid","gridItem","PlanColumn","editDevSelection","getCardsOfDev","devId","ColumnHeader","hourLine","borderTop","hourLabel","marginLeft","HourLine","zIndex","CurrentHourLine","updateCurrentTime","currentTime","interval","setInterval","clearInterval","ProdPlan","ColumnHeader_ColumnHeader_ColumnHeader","CurrentHourLine_CurrentHourLine","HourLine_HourLine","PlanColumn_wrap","dailyCards","Dashboard","Menu_wrap","ProdPlan_wrap","EditTeamPopin_wrap","DevSelectionPopin_wrap","CardDescriptionPopin_wrap","Home","react","Dashboard_wrap","routes","fallback","Switch","es_Route","exact","path","component","flattenMessages","nestedMessages","prefix","arguments","undefined","keys","reduce","messages","prefixedKey","concat","assign","_extends","i","source","prototype","hasOwnProperty","apply","_ref","_ref2","fill","d","plannor3000_logo_SvgComponent","version","xmlnsXlink","x","y","viewBox","enableBackground","xmlSpace","locales","__webpack_require__","p","fr","frMessages","en","enMessages","addLocaleData","Header","index_es","locale","rootContainer","Root","Header_Header_Header","combineReducers","stateCards","fetchedCards","fetchedPlannorCards","cardsAccumulator","defineProperty","memberIndex","indexOf","initialStates","RootComponentWithRoutes","Root_wrap","src_routes","store","context","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middlewares","thunkMiddleware","createStore","reducers","applyMiddleware","configureStore","App","requestPermission","status","es","theme","BrowserRouter","basename","Route","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","history","createBrowserHistory","persistor","rootEl","document","getElementById","ReactDOM","render","App_App","URL","process","origin","addEventListener","fetch","response","headers","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.a22b1dc3.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles';\nimport blue from '@material-ui/core/colors/blue';\n\nexport default createMuiTheme({\n  typography: {\n    useNextVariants: true,\n  },\n  palette: {\n    primary: blue,\n  },\n});\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\n\nclass BasicButton extends Component {\n  render() {\n    return (\n      <Button\n        style={this.props.style}\n        onClick={this.props.onClickAction}\n        variant=\"contained\"\n        color=\"primary\"\n      >\n        {this.props.label}\n      </Button>\n    );\n  }\n}\n\nexport default BasicButton;\n","import React, { Component } from 'react';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nclass BasicSelect extends Component {\n  render() {\n    return (\n      <FormControl style={this.props.propStyle}>\n        <InputLabel htmlFor=\"age-simple\">{this.props.label}</InputLabel>\n        <Select value={this.props.value} onChange={this.props.handleChange}>\n          {this.props.options.map(option => (\n            <MenuItem key={option.value} value={option.value}>\n              {option.label}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    );\n  }\n}\n\nexport default BasicSelect;\n","import React, { Component } from 'react';\nimport \"./BasicButtonPlannor.scss\"\n\nclass BasicButtonPlannor extends Component {\n  render() {\n    return (\n      <button\n        className={ \"basic-button-plannor \" + ( this.props.className || \"\") }\n        onClick={this.props.onClickAction}\n      >\n        {this.props.label}\n      </button>\n    );\n  }\n}\n\nexport default BasicButtonPlannor;\n","// @flow\nimport React from 'react';\nimport './ButtonsPanel.scss'\nimport BasicButtonPlannor from '../BasicButtonPlannor/BasicButtonPlannor';\n\nexport default class ButtonsPanel extends React.Component {\n  render() {\n    return (\n      <div className=\"buttons-panel__container\">\n        {/*<div className=\"buttons-panel__button\">*/}\n          {/*<BasicButton*/}\n            {/*label={<i className=\"material-icons\">settings</i>}*/}\n          {/*/>*/}\n        {/*</div>*/}\n        {!!this.props.isTeamEditable && (\n          <div className=\"buttons-panel__button\">\n            <BasicButtonPlannor\n              label={<i className=\"material-icons\">people</i>}\n              onClickAction={this.props.editTeamAction}\n            />\n          </div>\n        )}\n        <div className=\"buttons-panel__button\">\n          <BasicButtonPlannor\n            label={<i className=\"material-icons\">refresh</i>}\n            onClickAction={this.props.refreshAction}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","export function timeInMinutes(time) {\n  return time.hour * 60 + time.minute;\n}\n\nexport function durationInMinutes(startTime, endTime) {\n  return timeInMinutes(endTime) - timeInMinutes(startTime);\n}\n\nexport function splitTimeFromString(timeString) {\n  const startTime = timeString.split(':');\n  return { hour: parseInt(startTime[0]), minute: parseInt(startTime[1]) };\n}\n\nexport function stringTimeFromObject(timeObject) {\n  const hours =\n    timeObject.hour >= 10 ? timeObject.hour.toString() : '0' + timeObject.hour.toString();\n  const minutes =\n    timeObject.minute >= 10 ? timeObject.minute.toString() : '0' + timeObject.minute.toString();\n  return hours + ':' + minutes;\n}\n\nexport function getCurrentTime() {\n  return {\n    hour: new Date().getHours(),\n    minute: new Date().getMinutes(),\n  };\n}\n","// @flow\nimport React from 'react';\nimport { timeInMinutes, durationInMinutes, getCurrentTime } from '../../helpers';\nimport './PlanCard.scss';\n\nexport default class PlanCard extends React.Component {\n  componentWillMount() {\n    this.props.devName &&\n      setTimeout(() => {\n        new Notification('JP alert: Ticket #' + this.props.card.idShort, {\n          body: this.props.devName + ' should finish his/her ticket in 30 minutes!',\n          requireInteraction: true,\n        });\n      }, (durationInMinutes(getCurrentTime(), this.props.card.endTime) - 30) * 60000);\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = { hover: false };\n  }\n\n  render() {\n    const handleClick = (event, clickAction) => {\n      event.stopPropagation();\n      clickAction();\n    };\n\n    const setHover = isHovered =>\n      this.setState({\n        hover: isHovered,\n      });\n\n    const topProp =\n      this.props.startTime && this.props.dayStartTime && this.props.dayEndTime\n        ? (100 * (timeInMinutes(this.props.startTime) - timeInMinutes(this.props.dayStartTime))) /\n            durationInMinutes(this.props.dayStartTime, this.props.dayEndTime) +\n          '%'\n        : null;\n    const heightProp =\n      this.props.startTime && this.props.endTime && this.props.dayStartTime && this.props.dayEndTime\n        ? (100 * (timeInMinutes(this.props.endTime) - timeInMinutes(this.props.startTime))) /\n            durationInMinutes(this.props.dayStartTime, this.props.dayEndTime) +\n          '%'\n        : null;\n    const timedCardContainerStyle =\n      topProp && heightProp\n        ? { top: topProp, height: this.state.hover ? 'auto' : heightProp, position: 'absolute' }\n        : null;\n    return (\n      <div\n        style={{ ...this.props.style, ...timedCardContainerStyle }}\n        className=\"plancard\"\n        onMouseLeave={() => setHover(false)}\n        onClick={this.props.cardAction}\n      >\n        <div className=\"plancard__header\">\n          <div className=\"plancard__header__id-short\">#{this.props.card.idShort}</div>\n          <div className=\"plancard__header__labels-container\">\n            {this.props.card.labels.map(label => (\n              <div\n                className={'plancard__header__labels-container__label ' + label.color}\n                key={label.name}\n              >\n                {label.name}\n              </div>\n            ))}\n          </div>\n        </div>\n        <div\n          className={\n            'plancard__card-name ' +\n            (!this.state.hover && this.props.devName ? 'plancard__card-name--not-hovered' : '')\n          }\n          onMouseEnter={() => setHover(true)}\n        >\n          {this.props.card.name}\n          <div class=\"plancard__card-name__fade-out\" />\n        </div>\n        <div className=\"plancard__footer-icon\">\n          {this.props.icons.map(icon => (\n            <i\n              key={icon.name}\n              className=\"plancard__footer-icon__icon material-icons\"\n              onClick={event => handleClick(event, icon.action)}\n            >\n              {icon.name}\n            </i>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n","const styles = {\n  boardSelect: {\n    width: '100%',\n  },\n  buttonsPanel: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  connectToTrelloButton: {\n    display: 'inline-block',\n  },\n  cardsContainer: {\n    marginTop: 7,\n    flexGrow: 100,\n    overflowY: 'scroll',\n  },\n  planCard: {\n    marginTop: 5,\n  },\n};\n\nexport default styles;\n","import React, { Component } from 'react';\nimport './BasicCollapsePlannor.scss';\n\nclass BasicCollapsePlannor extends Component {\n  state = { isCollapsed: true };\n\n  toggleCollapse = () => {\n    this.setState({ isCollapsed: !this.state.isCollapsed });\n  };\n\n  render() {\n    return (\n      <div>\n        <div onClick={this.toggleCollapse} className={'basic-collapse-plannor__title__container'}>\n          {this.props.title}\n          <i className=\"material-icons basic-collapse-plannor__title__button__icon\">\n            {this.state.isCollapsed ? 'keyboard_arrow_down' : 'keyboard_arrow_up'}\n          </i>\n        </div>\n        {!this.state.isCollapsed && this.props.children}\n      </div>\n    );\n  }\n}\n\nexport default BasicCollapsePlannor;\n","// @flow\nimport React from 'react';\nimport BasicButton from '../BasicButton';\nimport BasicSelect from '../BasicSelect';\nimport ButtonsPanel from '../ButtonsPanel';\nimport PlanCard from '../PlanCard';\nimport styles from './Menu.style';\nimport BasicCollapsePlannor from '../BasicCollapsePlannor';\nimport map from 'lodash/map';\n\nexport default class Menu extends React.Component {\n  componentWillMount() {\n    const fetchData = () => {\n      this.props.fetchTrelloUser();\n      this.props.fetchTrelloUserBoards();\n    };\n\n    window.Trello.authorize({\n      type: 'popup',\n      name: 'Plannor 3000',\n      scope: {\n        read: 'true',\n        write: 'true',\n      },\n      expiration: 'never',\n      success: fetchData,\n    });\n  }\n\n  render() {\n    const fetchData = () => {\n      this.props.fetchTrelloUser();\n      this.props.fetchTrelloUserBoards();\n    };\n\n    const connectToTrello = () => {\n      window.Trello.authorize({\n        type: 'popup',\n        name: 'Plannor 3000',\n        scope: {\n          read: 'true',\n          write: 'true',\n        },\n        expiration: 'never',\n        success: fetchData,\n      });\n    };\n    const boardSelectOptions = this.props.trelloUserBoards\n      ? this.props.trelloUserBoards.map(function(board) {\n          return { value: board.id, label: board.name };\n        })\n      : null;\n    const columnSelectOptions = this.props.trelloUserColumns\n      ? this.props.trelloUserColumns.map(function(column) {\n          return { value: column.id, label: column.name };\n        })\n      : null;\n    const handleBoardChange = event => {\n      this.props.addTrelloUserSelectedBoard(event.target.value);\n      this.props.fetchTrelloUserColumns(event.target.value);\n    };\n    const handleDailyGoalsChange = event => {\n      this.props.addTrelloUserDailyGoalsColumn(event.target.value);\n      this.props.fetchDailyGoalsCards(event.target.value);\n    };\n    const handleSprintColumnChange = event => {\n      this.props.addTrelloUserSprintColumn(event.target.value);\n      this.props.fetchCardsFromColumn(event.target.value);\n    };\n    const handleToValidateColumnChange = event => {\n      this.props.addTrelloUserToValidateColumn(event.target.value);\n    };\n    const toggleDropdown = columnId => {\n      this.props.fetchCardsFromColumn(columnId);\n    };\n    const refreshAction = () => {\n      this.props.trelloUserSelectedBoard &&\n        this.props.fetchTrelloUserColumns(this.props.trelloUserSelectedBoard);\n      this.props.flowColumns &&\n        this.props.flowColumns.forEach(column => this.props.fetchCardsFromColumn(column.id));\n    };\n    const editTeamAction = () => {\n      this.props.toggleEditTeamPopin();\n    };\n    const openDevSelectionPopin = card => {\n      this.props.toggleDevSelectionPopin();\n      this.props.addDevSelectionCard(card);\n    };\n    const openCardDescriptionPopin = card => {\n      this.props.fetchCardChecklists(card.id);\n      this.props.toggleCardDescriptionPopin(card);\n    };\n    return (\n      <div style={this.props.style}>\n        {!window.Trello.authorized() && (\n          <BasicButton\n            style={styles.connectToTrelloButton}\n            label=\"Se connecter avec Trello\"\n            onClickAction={connectToTrello}\n          />\n        )}\n        {this.props.trelloUserBoards && this.props.trelloUserBoards.length > 0 && (\n          <div>\n            <ButtonsPanel\n              style={styles.buttonsPanel}\n              refreshAction={refreshAction}\n              isTeamEditable={this.props.trelloUserSelectedBoard.length}\n              editTeamAction={editTeamAction}\n            />\n            <BasicSelect\n              propStyle={styles.boardSelect}\n              value={this.props.trelloUserSelectedBoard}\n              handleChange={handleBoardChange}\n              label=\"Sélectionnez un board\"\n              options={boardSelectOptions}\n            />\n            {this.props.trelloUserSelectedBoard !== '' && (\n              <div>\n                <BasicSelect\n                  propStyle={styles.boardSelect}\n                  value={this.props.trelloUserSprintColumn}\n                  handleChange={handleSprintColumnChange}\n                  label=\"Sprint Backlog\"\n                  options={columnSelectOptions}\n                />\n                <BasicSelect\n                  propStyle={styles.boardSelect}\n                  value={this.props.trelloUserDailyGoalsColumn}\n                  handleChange={handleDailyGoalsChange}\n                  label=\"Daily Goals\"\n                  options={columnSelectOptions}\n                />\n                <BasicSelect\n                  propStyle={styles.boardSelect}\n                  value={this.props.trelloUserToValidateColumn}\n                  handleChange={handleToValidateColumnChange}\n                  label=\"À valider\"\n                  options={columnSelectOptions}\n                />\n              </div>\n            )}\n          </div>\n        )}\n        <div style={styles.cardsContainer}>\n          {this.props.flowColumns.map(column => (\n            <span key={column.id} onClick={() => toggleDropdown(column.id)}>\n              <BasicCollapsePlannor title={column.name}>\n                {map(\n                  this.props.getCardsFromColumn(column.id),\n                  card =>\n                    card.devs.length === 0 && (\n                      <PlanCard\n                        style={styles.planCard}\n                        key={card.id}\n                        card={card}\n                        icons={[\n                          {\n                            name: 'arrow_right_alt',\n                            action: () => openDevSelectionPopin(card),\n                          },\n                        ]}\n                        cardAction={() => openCardDescriptionPopin(card)}\n                      />\n                    ),\n                )}\n              </BasicCollapsePlannor>\n            </span>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n","export const constants = {\n  FETCH_TRELLO_USER: {\n    REQUEST: 'FETCH_TRELLO_USER_REQUEST',\n    SUCCESS: 'FETCH_TRELLO_USER_SUCCESS',\n    ERROR: 'FETCH_TRELLO_USER_ERROR',\n  },\n  FETCH_TRELLO_USER_BOARDS: {\n    REQUEST: 'FETCH_TRELLO_USER_BOARDS_REQUEST',\n    SUCCESS: 'FETCH_TRELLO_USER_BOARDS_SUCCESS',\n    ERROR: 'FETCH_TRELLO_USER_BOARDS_ERROR',\n  },\n  FETCH_TRELLO_USER_COLUMNS: {\n    REQUEST: 'FETCH_TRELLO_USER_COLUMNS_REQUEST',\n    SUCCESS: 'FETCH_TRELLO_USER_COLUMNS_SUCCESS',\n    ERROR: 'FETCH_TRELLO_USER_COLUMNS_ERROR',\n  },\n  FETCH_TRELLO_USER_DAILY_GOALS_CARDS: {\n    REQUEST: 'FETCH_TRELLO_USER_DAILY_GOALS_CARDS_REQUEST',\n    SUCCESS: 'FETCH_TRELLO_USER_DAILY_GOALS_CARDS_SUCCESS',\n    ERROR: 'FETCH_TRELLO_USER_DAILY_GOALS_CARDS_ERROR',\n  },\n  FETCH_CARDS_FROM_COLUMN: {\n    REQUEST: 'FETCH_CARDS_FROM_COLUMN_REQUEST',\n    SUCCESS: 'FETCH_CARDS_FROM_COLUMN_SUCCESS',\n    ERROR: 'FFETCH_CARDS_FROM_COLUMN_ERROR',\n  },\n  FETCH_CARD_CHECKLISTS: {\n    REQUEST: 'FETCH_CARD_CHECKLISTS_REQUEST',\n    SUCCESS: 'FETCH_CARD_CHECKLISTS_SUCCESS',\n    ERROR: 'FETCH_CARD_CHECKLISTS_ERROR',\n  },\n  FETCH_TRELLO_USER_BOARD_MEMBERS: {\n    REQUEST: 'FETCH_TRELLO_USER_BOARD_MEMBERS_REQUEST',\n    SUCCESS: 'FETCH_TRELLO_USER_BOARD_MEMBERS_SUCCESS',\n    ERROR: 'FETCH_TRELLO_USER_BOARD_MEMBERS_ERROR',\n  },\n  TAG_DEVS_ON_CARD: {\n    REQUEST: 'TAG_DEVS_ON_CARD_REQUEST',\n    SUCCESS: 'TAG_DEVS_ON_CARD_SUCCESS',\n    ERROR: 'TAG_DEVS_ON_CARD_ERROR',\n  },\n  MOVE_CARD_TO_DAILY_GOALS: {\n    REQUEST: 'MOVE_CARD_TO_DAILY_GOALS_REQUEST',\n    SUCCESS: 'MOVE_CARD_TO_DAILY_GOALS_SUCCESS',\n    ERROR: 'MOVE_CARD_TO_DAILY_GOALS_ERROR',\n  },\n  ADD_TRELLO_USER_SELECTED_BOARD: 'ADD_TRELLO_USER_SELECTED_BOARD',\n  ADD_TRELLO_USER_DAILY_GOALS_COLUMN: 'ADD_TRELLO_USER_DAILY_GOALS_COLUMN',\n  ADD_TRELLO_USER_SPRINT_COLUMN: 'ADD_TRELLO_USER_SPRINT_COLUMN',\n  ADD_TRELLO_USER_TO_VALIDATE_COLUMN: 'ADD_TRELLO_USER_TO_VALIDATE_COLUMN',\n  TOGGLE_TRELLO_TEAM_MEMBERSHIP: 'TOGGLE_TRELLO_TEAM_MEMBERSHIP',\n  TAG_DEVS_ON_PLANNOR_CARD: 'TAG_DEVS_ON_PLANNOR_CARD',\n  REMOVE_CARDS_FROM_SPRINT_BACKLOG: 'REMOVE_CARDS_FROM_SPRINT_BACKLOG',\n};\n\nexport function fetchTrelloUserRequest() {\n  return {\n    type: constants.FETCH_TRELLO_USER.REQUEST,\n  };\n}\n\nexport function fetchTrelloUserSuccess(user) {\n  return {\n    type: constants.FETCH_TRELLO_USER.SUCCESS,\n    payload: { user },\n  };\n}\n\nexport function fetchTrelloUserError(error) {\n  return {\n    type: constants.FETCH_TRELLO_USER.ERROR,\n    payload: { errorMessage: error.message },\n  };\n}\n\nexport function fetchTrelloUserBoardsRequest() {\n  return {\n    type: constants.FETCH_TRELLO_USER_BOARDS.REQUEST,\n  };\n}\n\nexport function fetchTrelloUserBoardsSuccess(boards) {\n  return {\n    type: constants.FETCH_TRELLO_USER_BOARDS.SUCCESS,\n    payload: { boards },\n  };\n}\n\nexport function fetchTrelloUserBoardsError(error) {\n  return {\n    type: constants.FETCH_TRELLO_USER_BOARDS.ERROR,\n    payload: { errorMessage: error.message },\n  };\n}\n\nexport function addTrelloUserSelectedBoard(board) {\n  return {\n    type: constants.ADD_TRELLO_USER_SELECTED_BOARD,\n    payload: { board },\n  };\n}\n\nexport function fetchTrelloUserColumnsRequest() {\n  return {\n    type: constants.FETCH_TRELLO_USER_COLUMNS.REQUEST,\n  };\n}\n\nexport function fetchTrelloUserColumnsSuccess(columns) {\n  return {\n    type: constants.FETCH_TRELLO_USER_COLUMNS.SUCCESS,\n    payload: { columns },\n  };\n}\n\nexport function fetchTrelloUserColumnsError(error) {\n  return {\n    type: constants.FETCH_TRELLO_USER_COLUMNS.ERROR,\n    payload: { errorMessage: error.message },\n  };\n}\n\nexport function addTrelloUserDailyGoalsColumn(column) {\n  return {\n    type: constants.ADD_TRELLO_USER_DAILY_GOALS_COLUMN,\n    payload: { column },\n  };\n}\n\nexport function addTrelloUserSprintColumn(column) {\n  return {\n    type: constants.ADD_TRELLO_USER_SPRINT_COLUMN,\n    payload: { column },\n  };\n}\n\nexport function addTrelloUserToValidateColumn(column) {\n  return {\n    type: constants.ADD_TRELLO_USER_TO_VALIDATE_COLUMN,\n    payload: { column },\n  };\n}\n\nexport function fetchTrelloUserDailyGoalsCardsRequest() {\n  return {\n    type: constants.FETCH_TRELLO_USER_DAILY_GOALS_CARDS.REQUEST,\n  };\n}\n\nexport function fetchTrelloUserDailyGoalsCardsSuccess(cards) {\n  return {\n    type: constants.FETCH_TRELLO_USER_DAILY_GOALS_CARDS.SUCCESS,\n    payload: { cards },\n  };\n}\n\nexport function fetchTrelloUserDailyGoalsCardsError(error) {\n  return {\n    type: constants.FETCH_TRELLO_USER_DAILY_GOALS_CARDS.ERROR,\n    payload: { errorMessage: error.message },\n  };\n}\n\nexport function fetchCardsFromColumnRequest() {\n  return {\n    type: constants.FETCH_CARDS_FROM_COLUMN.REQUEST,\n  };\n}\n\nexport function fetchCardsFromColumnSuccess(column, cards) {\n  return {\n    type: constants.FETCH_CARDS_FROM_COLUMN.SUCCESS,\n    payload: { column, cards },\n  };\n}\n\nexport function fetchCardsFromColumnError(error) {\n  return {\n    type: constants.FETCH_CARDS_FROM_COLUMN.ERROR,\n    payload: { errorMessage: error.message },\n  };\n}\n\nexport const fetchTrelloUser = () => {\n  return dispatch => {\n    dispatch(fetchTrelloUserRequest());\n    window.Trello.members.get(\n      `me`,\n      { fields: 'username,fullName' },\n      data => dispatch(fetchTrelloUserSuccess(data)),\n      error => dispatch(fetchTrelloUserError(error)),\n    );\n  };\n};\n\nexport const fetchTrelloUserBoards = () => {\n  return dispatch => {\n    dispatch(fetchTrelloUserBoardsRequest());\n    window.Trello.members.get(\n      `me/boards`,\n      { fields: 'name,lists=open' },\n      data => dispatch(fetchTrelloUserBoardsSuccess(data)),\n      error => dispatch(fetchTrelloUserBoardsError(error)),\n    );\n  };\n};\n\nexport const fetchTrelloUserColumns = board => {\n  return dispatch => {\n    dispatch(fetchTrelloUserColumnsRequest());\n    window.Trello.get(\n      `boards/` + board + `/lists`,\n      { fields: 'name' },\n      data => dispatch(fetchTrelloUserColumnsSuccess(data)),\n      error => dispatch(fetchTrelloUserColumnsError(error)),\n    );\n  };\n};\n\nexport const fetchDailyGoalsCards = column => {\n  return dispatch => {\n    dispatch(fetchTrelloUserDailyGoalsCardsRequest());\n    window.Trello.get(\n      `lists/` + column + `/cards`,\n      { fields: 'idShort,name,idMembers' },\n      data => dispatch(fetchTrelloUserDailyGoalsCardsSuccess(data)),\n      error => dispatch(fetchTrelloUserDailyGoalsCardsError(error)),\n    );\n  };\n};\n\nexport const fetchCardsFromColumn = column => {\n  return dispatch => {\n    dispatch(fetchCardsFromColumnRequest());\n    window.Trello.get(\n      `lists/` + column + `/cards`,\n      { fields: 'idShort,name,idMembers,labels,desc' },\n      data => dispatch(fetchCardsFromColumnSuccess(column, data)),\n      error => dispatch(fetchCardsFromColumnError(error)),\n    );\n  };\n};\n\nexport function fetchCardChecklistsRequest() {\n  return {\n    type: constants.FETCH_CARD_CHECKLISTS.REQUEST,\n  };\n}\n\nexport function fetchCardChecklistsSuccess(card, checklists) {\n  return {\n    type: constants.FETCH_CARD_CHECKLISTS.SUCCESS,\n    payload: { card, checklists },\n  };\n}\n\nexport function fetchCardChecklistsError(error) {\n  return {\n    type: constants.FETCH_CARD_CHECKLISTS.ERROR,\n    payload: { errorMessage: error.message },\n  };\n}\n\nexport const fetchCardChecklists = card => {\n  return dispatch => {\n    dispatch(fetchCardChecklistsRequest());\n    window.Trello.get(\n      `cards/` + card + `/checklists`,\n      { fields: 'checkItems,name' },\n      data => dispatch(fetchCardChecklistsSuccess(card, data)),\n      error => dispatch(fetchCardChecklistsError(error)),\n    );\n  };\n};\n\nexport function fetchTrelloUserBoardMembersRequest() {\n  return {\n    type: constants.FETCH_TRELLO_USER_BOARD_MEMBERS.REQUEST,\n  };\n}\n\nexport function fetchTrelloUserBoardMembersSuccess(boardOrigin, members) {\n  return {\n    type: constants.FETCH_TRELLO_USER_BOARD_MEMBERS.SUCCESS,\n    payload: { boardOrigin, members },\n  };\n}\n\nexport function fetchTrelloUserBoardMembersError(error) {\n  return {\n    type: constants.FETCH_TRELLO_USER_BOARD_MEMBERS.ERROR,\n    payload: { errorMessage: error.message },\n  };\n}\n\nexport const fetchTrelloUserBoardMembers = board => {\n  return dispatch => {\n    dispatch(fetchTrelloUserBoardMembersRequest());\n    window.Trello.get(\n      `boards/` + board + `/members`,\n      { fields: 'avatarHash,fullName,initials' },\n      data => dispatch(fetchTrelloUserBoardMembersSuccess(board, data)),\n      error => dispatch(fetchTrelloUserBoardMembersError(error)),\n    );\n  };\n};\n\nexport function toggleTrelloUserTeamMembership(memberId) {\n  return {\n    type: constants.TOGGLE_TRELLO_TEAM_MEMBERSHIP,\n    payload: { memberId },\n  };\n}\n\nexport function tagDevsOnCardRequest() {\n  return {\n    type: constants.TAG_DEVS_ON_CARD.REQUEST,\n  };\n}\n\nexport function tagDevsOnCardSuccess() {\n  return {\n    type: constants.TAG_DEVS_ON_CARD.SUCCESS,\n  };\n}\n\nexport function tagDevsOnCardError(error) {\n  return {\n    type: constants.TAG_DEVS_ON_CARD.ERROR,\n    payload: { errorMessage: error.message },\n  };\n}\n\nexport function tagDevsOnPlannorCard(devIds, cardId) {\n  return {\n    type: constants.TAG_DEVS_ON_PLANNOR_CARD,\n    payload: { devIds, cardId },\n  };\n}\n\nexport function tagDevsOnCard(card, membersId) {\n  return dispatch => {\n    dispatch(tagDevsOnCardRequest());\n    dispatch(tagDevsOnPlannorCard(membersId, card.id));\n    membersId.forEach(memberId => {\n      window.Trello.post(`cards/` + card.id + '/idMembers', { value: memberId });\n    });\n  };\n}\n\nexport function moveCardToDailyGoalsRequest() {\n  return {\n    type: constants.MOVE_CARD_TO_DAILY_GOALS.REQUEST,\n  };\n}\n\nexport function moveCardToDailyGoals(card, dailyGoalsColumnId) {\n  return dispatch => {\n    dispatch(moveCardToDailyGoalsRequest());\n    window.Trello.put(`cards/` + card.id + '/idList', { value: dailyGoalsColumnId });\n  };\n}\n\nexport function removeCardFromSprintBacklog(cardId) {\n  return {\n    type: constants.REMOVE_CARDS_FROM_SPRINT_BACKLOG,\n    payload: { cardId },\n  };\n}\n\nexport default {\n  fetchTrelloUserRequest,\n  fetchTrelloUserSuccess,\n  fetchTrelloUserError,\n};\n","import filter from 'lodash/filter';\n\nexport const getTrelloUserFullName = state => state.trelloUserState.user.fullName;\nexport const getTrelloUserBoards = state => state.trelloUserState.user.boards;\nexport const getTrelloUserSelectedBoard = state => state.trelloUserState.user.selectedBoard;\nexport const getTrelloUserColumns = state => state.trelloUserState.user.columns;\nexport const getTrelloUserDailyGoalsColumn = state =>\n  state.trelloUserState.user.dailyGoalsColumn.id;\nexport const getTrelloUserDailyGoalsCards = state =>\n  state.trelloUserState.user.dailyGoalsColumn.cards;\nexport const getTrelloUserSprintColumn = state => state.trelloUserState.user.sprintColumn.id;\nexport const getTrelloUserToValidateColumn = state =>\n  state.trelloUserState.user.toValidateColumn.id;\nexport const getTrelloUserSprintBacklogCards = state =>\n  state.trelloUserState.user.sprintColumn.cards.filter(card => card.devs.length === 0);\nexport const getCardChecklists = (state, cardId) =>\n  filter(state.trelloUserState.user.cards, card => {\n    if (card.id === cardId) {\n      return card.checklists;\n    }\n  });\nexport const getFlowColumns = state => {\n  const dailyGoalsColumn = getTrelloUserDailyGoalsColumn(state);\n  const toValidateColumn = getTrelloUserToValidateColumn(state);\n  if (dailyGoalsColumn && toValidateColumn) {\n    const flowColumns = [...state.trelloUserState.user.columns];\n    const firstIndex =\n      state.trelloUserState.user.columns.findIndex(column => column.id === dailyGoalsColumn) - 1;\n    const lastIndex = state.trelloUserState.user.columns.findIndex(\n      column => column.id === toValidateColumn,\n    );\n    return flowColumns.splice(firstIndex, lastIndex - firstIndex);\n  }\n  return [];\n};\nexport const getCardsFromColumn = (state, columnId) =>\n  filter(state.trelloUserState.user.cards, card => card.column === columnId);\nexport const getTrelloUserBoardMembers = state => state.trelloUserState.user.boardMembers;\nexport const getTrelloUserBoardMembersOrigin = state =>\n  state.trelloUserState.user.boardMembersOrigin;\nexport const getTrelloUserDevTeam = state => state.trelloUserState.project.devTeam;\nexport const getCardsOfDev = (state, devId) =>\n  filter(state.trelloUserState.user.cards, card => card.devs.includes(devId));\n","import { constants } from './actions';\nimport reduce from 'lodash/reduce';\n\nexport const initialState = {\n  user: {\n    fullName: null,\n    username: null,\n    boards: [],\n    selectedBoard: '',\n    columns: [],\n    cards: {},\n    dailyGoalsColumn: {\n      id: '',\n      cards: [],\n    },\n    sprintColumn: {\n      id: '',\n      cards: [],\n    },\n    toValidateColumn: {\n      id: '',\n      cards: [],\n    },\n    boardMembers: [],\n  },\n  project: {\n    devTeam: [],\n  },\n  error: null,\n  isLoading: false,\n};\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case constants.FETCH_TRELLO_USER.REQUEST:\n      return {\n        ...state,\n        isLoading: true,\n      };\n    case constants.FETCH_TRELLO_USER.SUCCESS:\n      return {\n        ...state,\n        user: { ...state.user, ...action.payload.user },\n        isLoading: false,\n      };\n    case constants.FETCH_TRELLO_USER.ERROR:\n      return {\n        ...state,\n        error: action.payload,\n        isLoading: false,\n      };\n    case constants.FETCH_TRELLO_USER_BOARDS.REQUEST:\n      return {\n        ...state,\n        isLoading: true,\n      };\n    case constants.FETCH_TRELLO_USER_BOARDS.SUCCESS:\n      return {\n        ...state,\n        user: { ...state.user, boards: action.payload.boards },\n        isLoading: false,\n      };\n    case constants.FETCH_TRELLO_USER_BOARDS.ERROR:\n      return {\n        ...state,\n        error: action.payload,\n        isLoading: false,\n      };\n    case constants.ADD_TRELLO_USER_SELECTED_BOARD:\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          selectedBoard: action.payload.board,\n        },\n      };\n    case constants.FETCH_TRELLO_USER_COLUMNS.SUCCESS:\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          columns: action.payload.columns,\n        },\n      };\n    case constants.ADD_TRELLO_USER_DAILY_GOALS_COLUMN:\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          dailyGoalsColumn: { ...state.user.dailyGoalsColumn, id: action.payload.column },\n        },\n      };\n    case constants.ADD_TRELLO_USER_SPRINT_COLUMN:\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          sprintColumn: { ...state.user.sprintColumn, id: action.payload.column },\n        },\n      };\n    case constants.ADD_TRELLO_USER_TO_VALIDATE_COLUMN:\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          toValidateColumn: { ...state.user.sprintColumn, id: action.payload.column },\n        },\n      };\n    case constants.FETCH_TRELLO_USER_DAILY_GOALS_CARDS.SUCCESS:\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          dailyGoalsColumn: {\n            ...state.user.dailyGoalsColumn,\n            cards: action.payload.cards,\n          },\n        },\n      };\n    case constants.FETCH_CARDS_FROM_COLUMN.SUCCESS:\n      const stateCards = state.user.cards;\n      const fetchedCards = action.payload.cards;\n      const fetchedPlannorCards = reduce(\n        fetchedCards,\n        (cardsAccumulator, card) => {\n          return {\n            ...cardsAccumulator,\n            [card.id]: {\n              ...card,\n              devs: [],\n              startTime: { hour: 10, minute: 0 },\n              endTime: { hour: 12, minute: 30 },\n              column: action.payload.column,\n            },\n          };\n        },\n        {},\n      );\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          cards: {\n            ...fetchedPlannorCards,\n            ...stateCards,\n          },\n        },\n      };\n    case constants.FETCH_CARD_CHECKLISTS.SUCCESS:\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          sprintColumn: {\n            ...state.user.sprintColumn,\n            cards: state.user.sprintColumn.cards.map(card => {\n              if (card.id === action.payload.card) {\n                return {\n                  ...card,\n                  checklists: action.payload.checklists,\n                };\n              }\n              return card;\n            }),\n          },\n        },\n      };\n    case constants.FETCH_TRELLO_USER_BOARD_MEMBERS.SUCCESS:\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          boardMembers: action.payload.members,\n          boardMembersOrigin: action.payload.boardOrigin,\n        },\n      };\n    case constants.TOGGLE_TRELLO_TEAM_MEMBERSHIP:\n      const memberIndex = state.project.devTeam\n        .map(function(member) {\n          return member.id;\n        })\n        .indexOf(action.payload.memberId);\n      return {\n        ...state,\n        project: {\n          ...state.project,\n          devTeam:\n            memberIndex !== -1\n              ? state.project.devTeam.filter(member => member.id !== action.payload.memberId)\n              : state.project.devTeam.concat({\n                  ...state.user.boardMembers.filter(\n                    member => member.id === action.payload.memberId,\n                  )[0],\n                  dailyCards: [],\n                }),\n        },\n        user: {\n          ...state.user,\n          boardMembers: state.user.boardMembers.map(member => {\n            if (member.id === action.payload.memberId) {\n              return { ...member, isInTeam: !member.isInTeam };\n            }\n            return member;\n          }),\n        },\n      };\n    case constants.TAG_DEVS_ON_PLANNOR_CARD:\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          cards: {\n            ...state.user.cards,\n            [action.payload.cardId]: {\n              ...state.user.cards[action.payload.cardId],\n              devs: action.payload.devIds,\n            },\n          },\n        },\n      };\n    case constants.REMOVE_CARDS_FROM_SPRINT_BACKLOG:\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          sprintColumn: {\n            ...state.user.sprintColumn,\n            cards: state.user.sprintColumn.cards.filter(card => card.id !== action.payload.cardId),\n          },\n        },\n      };\n    default:\n      return state;\n  }\n}\n","export const constants = {\n  TOGGLE_EDIT_TEAM_POPIN: 'TOGGLE_EDIT_TEAM_POPIN',\n  TOGGLE_DEV_SELECTION_POPIN: 'TOGGLE_DEV_SELECTION_POPIN',\n  TOGGLE_CARD_DESCRIPTION_POPIN: 'TOGGLE_CARD_DESCRIPTION_POPIN',\n  ADD_DEV_SELECTION_CARD: 'ADD_DEV_SELECTION_CARD',\n  TOGGLE_MEMBER_SELECTION: 'TOGGLE_MEMBER_SELECTION',\n};\n\nexport function toggleEditTeamPopin() {\n  return {\n    type: constants.TOGGLE_EDIT_TEAM_POPIN,\n  };\n}\n\nexport function toggleDevSelectionPopin() {\n  return {\n    type: constants.TOGGLE_DEV_SELECTION_POPIN,\n  };\n}\n\nexport function toggleCardDescriptionPopin(card) {\n  return {\n    type: constants.TOGGLE_CARD_DESCRIPTION_POPIN,\n    payload: { card },\n  };\n}\n\nexport function addDevSelectionCard(card) {\n  return {\n    type: constants.ADD_DEV_SELECTION_CARD,\n    payload: { card },\n  };\n}\n\nexport function toggleMemberSelection(memberId) {\n  return {\n    type: constants.TOGGLE_MEMBER_SELECTION,\n    payload: { memberId },\n  };\n}\n\nexport default {\n  toggleEditTeamPopin,\n  toggleDevSelectionPopin,\n  toggleCardDescriptionPopin,\n  addDevSelectionCard,\n};\n","import Menu from './Menu';\nimport {\n  fetchTrelloUserBoards,\n  fetchTrelloUser,\n  fetchTrelloUserColumns,\n  fetchDailyGoalsCards,\n  addTrelloUserSelectedBoard,\n  addTrelloUserDailyGoalsColumn,\n  addTrelloUserSprintColumn,\n  addTrelloUserToValidateColumn,\n  fetchCardsFromColumn,\n  fetchCardChecklists,\n} from 'redux/TrelloUser/actions';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport {\n  getTrelloUserFullName,\n  getTrelloUserBoards,\n  getTrelloUserSelectedBoard,\n  getTrelloUserColumns,\n  getTrelloUserDailyGoalsColumn,\n  getTrelloUserDailyGoalsCards,\n  getTrelloUserSprintColumn,\n  getTrelloUserSprintBacklogCards,\n  getTrelloUserToValidateColumn,\n  getFlowColumns,\n  getCardsFromColumn,\n} from 'redux/TrelloUser';\nimport {\n  toggleEditTeamPopin,\n  toggleDevSelectionPopin,\n  toggleCardDescriptionPopin,\n  addDevSelectionCard,\n} from 'redux/App/actions';\n\nconst mapStateToProps = state => ({\n  trelloUserFullName: getTrelloUserFullName(state),\n  trelloUserBoards: getTrelloUserBoards(state),\n  trelloUserSelectedBoard: getTrelloUserSelectedBoard(state),\n  trelloUserColumns: getTrelloUserColumns(state),\n  trelloUserDailyGoalsColumn: getTrelloUserDailyGoalsColumn(state),\n  trelloUserDailyGoalsCards: getTrelloUserDailyGoalsCards(state),\n  trelloUserSprintColumn: getTrelloUserSprintColumn(state),\n  trelloUserSprintBacklogCards: getTrelloUserSprintBacklogCards(state),\n  trelloUserToValidateColumn: getTrelloUserToValidateColumn(state),\n  flowColumns: getFlowColumns(state),\n  getCardsFromColumn: columnId => getCardsFromColumn(state, columnId),\n});\n\nconst mapDispatchToProps = {\n  fetchTrelloUser,\n  fetchTrelloUserBoards,\n  fetchTrelloUserColumns,\n  fetchDailyGoalsCards,\n  addTrelloUserSelectedBoard,\n  addTrelloUserDailyGoalsColumn,\n  addTrelloUserToValidateColumn,\n  toggleEditTeamPopin,\n  toggleDevSelectionPopin,\n  toggleCardDescriptionPopin,\n  addDevSelectionCard,\n  addTrelloUserSprintColumn,\n  fetchCardsFromColumn,\n  fetchCardChecklists,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(withRouter(Menu));\n","const styles = {\n  dashboard: {\n    display: 'flex',\n    fontFamily: 'Roboto',\n    height: 'calc(100vh - 53px)',\n  },\n  menu: {\n    display: 'flex',\n    flexDirection: 'column',\n    padding: 15,\n    fontFamily: 'Roboto',\n    width: 300,\n    boxSizing: 'border-box',\n    MozBoxShadow: '2px 0 10px #cccccc',\n    WebkitBoxShadow: '2px 0 10px #cccccc',\n    boxShadow: '2px 0 10px #cccccc',\n  },\n};\n\nexport default styles;\n","// @flow\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nexport default class PlannorPopin extends React.Component {\n  render() {\n    return (\n      <Dialog\n        open={this.props.isOpen}\n        onClose={this.props.handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{this.props.title}</DialogTitle>\n        <DialogContent>{this.props.content}</DialogContent>\n        <DialogActions>\n          {this.props.handleClose && (\n            <Button onClick={this.props.handleClose} color=\"primary\">\n              {this.props.closeLabel}\n            </Button>\n          )}\n          {this.props.handleSubmit && (\n            <Button onClick={this.props.handleSubmit} color=\"primary\" autoFocus>\n              {this.props.submitLabel}\n            </Button>\n          )}\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n","const styles = {\n  editTeamPopin: {\n    maxWidth: 600,\n  },\n  avatarContainer: {\n    verticalAlign: 'top',\n    display: 'inline-flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    margin: 5,\n    minWidth: 50,\n    minHeight: 50,\n    cursor: 'pointer',\n    borderRadius: '50%',\n    boxSizing: 'border-box',\n  },\n  avatarInTeam: {\n    border: '4px solid orange',\n    margin: 1,\n  },\n  avatar: {\n    borderRadius: '50%',\n    overflow: 'hidden',\n  },\n  undefinedAvatar: {\n    width: 50,\n    height: 50,\n    display: 'inline-flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 50,\n    background: '#dddddd',\n    textTransform: 'uppercase',\n  },\n  editTeamPopinFooter: {\n    textAlign: 'right',\n  },\n};\n\nexport default styles;\n","// @flow\nimport React from 'react';\nimport PlannorPopin from '../PlannorPopin';\nimport styles from './EditTeamPopin.style';\n\nexport default class EditTeamPopin extends React.Component {\n  componentDidMount() {\n    if (\n      this.props.trelloUserBoardMembers.length === 0 ||\n      this.props.trelloUserBoardMembersOrigin !== this.props.trelloUserSelectedBoard\n    ) {\n      this.props.fetchTrelloUserBoardMembers(this.props.trelloUserSelectedBoard);\n    }\n  }\n  render() {\n    const members = this.props.trelloUserBoardMembers;\n    const toggleMembership = (memberId, event) =>\n      this.props.toggleTrelloUserTeamMembership(memberId);\n    const content = (\n      <div>\n        <div>\n          {members.map(member => (\n            <div\n              onClick={toggleMembership.bind(this, member.id)}\n              key={member.id}\n              style={\n                member.isInTeam\n                  ? { ...styles.avatarContainer, ...styles.avatarInTeam }\n                  : styles.avatarContainer\n              }\n              title={member.fullName}\n            >\n              {member.avatarHash ? (\n                <img\n                  style={styles.avatar}\n                  alt={member.fullName}\n                  src={'https://trello-avatars.s3.amazonaws.com/' + member.avatarHash + '/50.png'}\n                />\n              ) : (\n                <div style={styles.undefinedAvatar}>{member.initials}</div>\n              )}\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n    return (\n      <PlannorPopin\n        isOpen={this.props.isEditTeamPopinOpen}\n        handleClose={this.props.toggleEditTeamPopin}\n        closeLabel=\"Valider\"\n        title=\"Ajouter des devs à l'équipe\"\n        content={content}\n      />\n    );\n  }\n}\n","import filter from 'lodash/filter';\n\nexport const isEditTeamPopinOpen = state => state.appState.isEditTeamPopinOpen;\nexport const isDevSelectionPopinOpen = state => state.appState.devSelectionPopin.isOpen;\nexport const getDevSelectionCardId = state => state.appState.devSelectionPopin.selectedCard.id;\nexport const getDevSelectionCard = state =>\n  filter(\n    state.trelloUserState.user.cards,\n    card => card.id === state.appState.devSelectionPopin.selectedCard.id,\n  )[0];\nexport const isCardDescriptionPopinOpen = state => state.appState.cardDescriptionPopin.isOpen;\nexport const getCardDescriptionPopinCard = state => state.appState.cardDescriptionPopin.card;\nexport const getSelectedMembers = state => state.appState.devSelectionPopin.selectedMembers;\n","import { constants } from './actions';\n\nexport const initialState = {\n  isEditTeamPopinOpen: false,\n  devSelectionPopin: {\n    isOpen: false,\n    selectedCard: {\n      id: null,\n    },\n    selectedMembers: [],\n  },\n  cardDescriptionPopin: {\n    isOpen: false,\n    card: null,\n  },\n};\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case constants.TOGGLE_EDIT_TEAM_POPIN:\n      return {\n        ...state,\n        isEditTeamPopinOpen: !state.isEditTeamPopinOpen,\n      };\n    case constants.TOGGLE_DEV_SELECTION_POPIN:\n      return {\n        ...state,\n        devSelectionPopin: {\n          ...state.devSelectionPopin,\n          isOpen: !state.devSelectionPopin.isOpen,\n        },\n      };\n    case constants.TOGGLE_CARD_DESCRIPTION_POPIN:\n      return {\n        ...state,\n        cardDescriptionPopin: {\n          ...state.cardDescriptionPopin,\n          isOpen: !state.cardDescriptionPopin.isOpen,\n          card: action.payload.card,\n        },\n      };\n    case constants.ADD_DEV_SELECTION_CARD:\n      return {\n        ...state,\n        devSelectionPopin: {\n          ...state.devSelectionPopin,\n          selectedCard: {\n            ...action.payload.card,\n            startTime: { hour: 10, minute: 0 },\n            endTime: { hour: 12, minute: 30 },\n          },\n        },\n      };\n    case constants.TOGGLE_MEMBER_SELECTION:\n      return {\n        ...state,\n        devSelectionPopin: {\n          ...state.devSelectionPopin,\n          selectedMembers: state.devSelectionPopin.selectedMembers.includes(action.payload.memberId)\n            ? state.devSelectionPopin.selectedMembers.filter(\n                memberId => memberId !== action.payload.memberId,\n              )\n            : [...state.devSelectionPopin.selectedMembers, action.payload.memberId],\n        },\n      };\n    default:\n      return state;\n  }\n}\n","import EditTeamPopin from './EditTeamPopin';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport {\n  getTrelloUserBoardMembers,\n  getTrelloUserBoardMembersOrigin,\n  getTrelloUserSelectedBoard,\n} from 'redux/TrelloUser';\nimport {\n  fetchTrelloUserBoardMembers,\n  toggleTrelloUserTeamMembership,\n} from 'redux/TrelloUser/actions';\nimport { toggleEditTeamPopin } from 'redux/App/actions';\nimport { isEditTeamPopinOpen } from 'redux/App';\n\nconst mapStateToProps = state => ({\n  trelloUserSelectedBoard: getTrelloUserSelectedBoard(state),\n  trelloUserBoardMembers: getTrelloUserBoardMembers(state),\n  trelloUserBoardMembersOrigin: getTrelloUserBoardMembersOrigin(state),\n  isEditTeamPopinOpen: isEditTeamPopinOpen(state),\n});\n\nconst mapDispatchToProps = {\n  fetchTrelloUserBoardMembers,\n  toggleEditTeamPopin,\n  toggleTrelloUserTeamMembership,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(withRouter(EditTeamPopin));\n","const styles = {\n  editTeamPopin: {\n    maxWidth: 600,\n  },\n  avatarContainer: {\n    verticalAlign: 'top',\n    display: 'inline-flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    margin: 5,\n    minWidth: 50,\n    minHeight: 50,\n    cursor: 'pointer',\n    borderRadius: '50%',\n    boxSizing: 'border-box',\n  },\n  avatar: {\n    borderRadius: '50%',\n    overflow: 'hidden',\n  },\n  avatarInTeam: {\n    border: '4px solid orange',\n    margin: 1,\n  },\n  undefinedAvatar: {\n    width: 50,\n    height: 50,\n    display: 'inline-flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 50,\n    background: '#dddddd',\n    textTransform: 'uppercase',\n  },\n  editTeamPopinFooter: {\n    textAlign: 'right',\n  },\n  warningMessage: {\n    color: '#d88c00',\n    marginBottom: 10,\n  },\n};\n\nexport default styles;\n","// @flow\nimport React from 'react';\nimport PlannorPopin from '../PlannorPopin';\nimport styles from './DevSelectionPopin.style';\nimport TextField from '@material-ui/core/TextField';\nimport { splitTimeFromString, stringTimeFromObject } from '../../helpers/TimeHelpers/timeHelpers';\n\nexport default class DevSelectionPopin extends React.Component {\n  componentDidMount() {\n    if (\n      this.props.trelloUserBoardMembers.length === 0 ||\n      this.props.trelloUserBoardMembersOrigin !== this.props.trelloUserSelectedBoard\n    ) {\n      this.props.fetchTrelloUserBoardMembers(this.props.trelloUserSelectedBoard);\n    }\n  }\n  render() {\n    const members = this.props.devTeamMembers;\n\n    const validateAction = () => {\n      this.props.toggleDevSelectionPopin();\n      this.props.tagDevsOnCard(this.props.selectedCard, this.props.selectedMembers);\n      if (this.props.selectedMembers.length > 0) {\n        this.props.moveCardToDailyGoals(this.props.selectedCard, this.props.dailyGoalsColumn);\n      }\n    };\n    const onChangeStartTime = event => {\n      this.props.selectedCard.startTime = splitTimeFromString(event.target.value);\n    };\n    const onChangeEndTime = event => {\n      this.props.selectedCard.endTime = splitTimeFromString(event.target.value);\n    };\n    const startTimeString = stringTimeFromObject(this.props.selectedCard.startTime);\n    const endTimeString = stringTimeFromObject(this.props.selectedCard.endTime);\n\n    const content = (\n      <div>\n        <div>\n          {this.props.dailyGoalsColumn && (\n            <div>\n              {members.map(member => (\n                <div\n                  onClick={this.props.toggleMemberSelection.bind(this, member.id)}\n                  key={member.id}\n                  style={\n                    this.props.selectedMembers.includes(member.id)\n                      ? { ...styles.avatarContainer, ...styles.avatarInTeam }\n                      : styles.avatarContainer\n                  }\n                  title={member.fullName}\n                >\n                  {member.avatarHash ? (\n                    <img\n                      style={styles.avatar}\n                      alt={member.fullName}\n                      src={\n                        'https://trello-avatars.s3.amazonaws.com/' + member.avatarHash + '/50.png'\n                      }\n                    />\n                  ) : (\n                    <div style={styles.undefinedAvatar}>{member.initials}</div>\n                  )}\n                </div>\n              ))}\n              <br />\n              <TextField\n                id=\"start\"\n                label=\"Début\"\n                type=\"time\"\n                defaultValue={startTimeString}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                inputProps={{\n                  step: 900, // 15 min\n                }}\n                onChange={onChangeStartTime}\n              />\n              &nbsp;\n              <TextField\n                id=\"end\"\n                label=\"Fin\"\n                type=\"time\"\n                defaultValue={endTimeString}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                inputProps={{\n                  step: 900, // 15 min\n                }}\n                onChange={onChangeEndTime}\n              />\n            </div>\n          )}\n          {members.length === 0 && (\n            <div style={styles.warningMessage}>\n              Vous devez d'abord ajouter des membres à l'équipe\n            </div>\n          )}\n          {!this.props.dailyGoalsColumn && (\n            <div style={styles.warningMessage}>\n              Vous devez d'abord sélectionner une colonne Daily Goals\n            </div>\n          )}\n        </div>\n      </div>\n    );\n    return (\n      <PlannorPopin\n        isOpen={this.props.isDevSelectionPopinOpen}\n        handleClose={this.props.toggleDevSelectionPopin}\n        closeLabel=\"Annuler\"\n        handleSubmit={validateAction}\n        submitLabel=\"Valider\"\n        title=\"Sélection du dev\"\n        content={content}\n      />\n    );\n  }\n}\n","import DevSelectionPopin from './DevSelectionPopin';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport {\n  getTrelloUserBoardMembers,\n  getTrelloUserBoardMembersOrigin,\n  getTrelloUserSelectedBoard,\n  getTrelloUserDevTeam,\n  getTrelloUserDailyGoalsColumn,\n} from 'redux/TrelloUser';\nimport {\n  fetchTrelloUserBoardMembers,\n  toggleTrelloUserTeamMembership,\n  tagDevsOnCard,\n  moveCardToDailyGoals,\n  removeCardFromSprintBacklog,\n} from 'redux/TrelloUser/actions';\nimport { toggleDevSelectionPopin, toggleMemberSelection } from 'redux/App/actions';\nimport { getDevSelectionCard, getSelectedMembers, isDevSelectionPopinOpen } from 'redux/App';\n\nconst mapStateToProps = state => ({\n  selectedCard: getDevSelectionCard(state),\n  devTeamMembers: getTrelloUserDevTeam(state),\n  dailyGoalsColumn: getTrelloUserDailyGoalsColumn(state),\n  isDevSelectionPopinOpen: isDevSelectionPopinOpen(state),\n  trelloUserSelectedBoard: getTrelloUserSelectedBoard(state),\n  trelloUserBoardMembers: getTrelloUserBoardMembers(state),\n  trelloUserBoardMembersOrigin: getTrelloUserBoardMembersOrigin(state),\n  selectedMembers: getSelectedMembers(state),\n});\n\nconst mapDispatchToProps = {\n  fetchTrelloUserBoardMembers,\n  toggleDevSelectionPopin,\n  toggleTrelloUserTeamMembership,\n  tagDevsOnCard,\n  moveCardToDailyGoals,\n  toggleMemberSelection,\n  removeCardFromSprintBacklog,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(withRouter(DevSelectionPopin));\n","// @flow\nimport React from 'react';\nimport PlannorPopin from '../PlannorPopin';\n\nexport default class CardDescriptionPopin extends React.Component {\n  render() {\n    const content = (\n      <div>\n        {this.props.card.desc && <div>{this.props.card.desc}</div>}\n        <div>\n          {this.props.card.checklists &&\n            this.props.card.checklists.length > 0 &&\n            this.props.card.checklists.map(checklist => (\n              <div key={checklist.id}>\n                {checklist.name}\n                <ul key={checklist.id}>\n                  {checklist.checkItems.map(checkItem => (\n                    <li key={checkItem.id}>{checkItem.name}</li>\n                  ))}\n                </ul>\n              </div>\n            ))}\n        </div>\n      </div>\n    );\n    console.log(this.props.card);\n    return (\n      <PlannorPopin\n        isOpen={this.props.isCardDescriptionPopinOpen}\n        handleClose={this.props.toggleCardDescriptionPopin}\n        closeLabel=\"Valider\"\n        title={this.props.card.name}\n        content={content}\n      />\n    );\n  }\n}\n","import CardDescriptionPopin from './CardDescriptionPopin';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { toggleCardDescriptionPopin } from 'redux/App/actions';\nimport { fetchCardChecklists } from 'redux/TrelloUser/actions';\nimport { getCardDescriptionPopinCard, isCardDescriptionPopinOpen } from 'redux/App/selectors';\n\nconst mapStateToProps = state => ({\n  card: getCardDescriptionPopinCard(state),\n  isCardDescriptionPopinOpen: isCardDescriptionPopinOpen(state),\n});\n\nconst mapDispatchToProps = {\n  toggleCardDescriptionPopin,\n  fetchCardChecklists,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(withRouter(CardDescriptionPopin));\n","const styles = {\n  container: {\n    display: 'flex',\n    overflow: 'hidden',\n    flexDirection: 'column',\n    margin: '0px 5px 10px 5px',\n    borderRadius: 5,\n    width: '20%',\n  },\n  columnHeader: {\n    flex: '0 1 auto',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  grid: {\n    position: 'relative',\n    flex: '1 1 auto',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  gridItem: {\n    display: 'inline-grid',\n    width: '100%',\n  },\n};\n\nexport default styles;\n","// @flow\nimport React from 'react';\nimport styles from './PlanColumn.style.js';\nimport PlanCard from '../PlanCard';\nimport map from 'lodash/map';\n\nexport default class PlanColumn extends React.Component {\n  render() {\n    const editDevSelection = () => {\n      this.props.toggleDevSelectionPopin();\n    };\n\n    const cards = this.props.getCardsOfDev(this.props.member.id);\n\n    return (\n      <div style={styles.container}>\n        <div style={{ ...this.props.style, ...styles.grid }}>\n          {map(cards, card => {\n            return (\n              <PlanCard\n                key={card.id}\n                card={card}\n                devName={this.props.member.fullName}\n                dayStartTime={this.props.dayStartTime}\n                dayEndTime={this.props.dayEndTime}\n                startTime={card.startTime}\n                endTime={card.endTime}\n                content={card.name}\n                icons={[{ name: 'edit', action: editDevSelection }]}\n              />\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n","import PlanColumn from './PlanColumn';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { toggleDevSelectionPopin } from 'redux/App/actions';\nimport { getCardsOfDev } from 'redux/TrelloUser/selectors';\n\nconst mapStateToProps = state => ({\n  getCardsOfDev: devId => getCardsOfDev(state, devId),\n});\n\nconst mapDispatchToProps = {\n  toggleDevSelectionPopin,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(withRouter(PlanColumn));\n","// @flow\nimport React from 'react';\nimport './ColumnHeader.scss'\n\nexport default class ColumnHeader extends React.Component {\n  render() {\n    return (\n      <div className=\"column-header__container\">\n        <div className=\"column-header__avatar\" title={this.props.member.fullName}>\n          {this.props.member.avatarHash ? (\n            <img\n              alt={this.props.member.fullName}\n              src={\n                'https://trello-avatars.s3.amazonaws.com/' +\n                this.props.member.avatarHash +\n                '/50.png'\n              }\n            />\n          ) : (\n            <div className=\"column-header__avatar--undefined\">\n              {this.props.member.initials}\n            </div>\n          )}\n        </div>\n        <div className=\"column-header__title\">\n          {this.props.member.fullName}\n        </div>\n      </div>\n    );\n  }\n}\n","const styles = {\n  hourLine: {\n    position: 'absolute',\n    top: 0,\n    color: '#cccccc',\n    borderTop: 'dashed #cccccc 1px',\n    width: '100%',\n  },\n  hourLabel: {\n    marginTop: 5,\n    marginLeft: 15,\n  },\n};\n\nexport default styles;\n","// @flow\nimport React from 'react';\nimport { timeInMinutes, durationInMinutes } from '../../helpers';\nimport styles from './HourLine.style';\n\nexport default class HourLine extends React.Component {\n  render() {\n    const topProp =\n      (100 * (timeInMinutes(this.props.time) - timeInMinutes(this.props.dayStartTime))) /\n        (durationInMinutes(this.props.dayStartTime, this.props.dayEndTime) + 10) +\n      '%';\n    return (\n      <div style={{ ...styles.hourLine, top: topProp }}>\n        <div style={styles.hourLabel}>\n          {this.props.time.hour}h{this.props.time.minute !== 0 && this.props.time.minute}\n        </div>\n      </div>\n    );\n  }\n}\n","const styles = {\n  hourLine: {\n    position: 'absolute',\n    top: 0,\n    borderTop: 'red solid 1px',\n    width: '100%',\n    zIndex: 2,\n  },\n};\n\nexport default styles;\n","// @flow\nimport React from 'react';\nimport { timeInMinutes, durationInMinutes, getCurrentTime } from '../../helpers';\nimport styles from './CurrentHourLine.style';\n\nexport default class CurrentHourLine extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentTime: getCurrentTime(),\n    };\n  }\n  componentDidMount() {\n    var interval = setInterval(this.updateCurrentTime, 1000);\n    this.setState({ interval: interval });\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.state.interval);\n  }\n\n  updateCurrentTime = () => {\n    this.setState({\n      currentTime: getCurrentTime(),\n    });\n  };\n\n  render() {\n    const topProp =\n      (100 * (timeInMinutes(this.state.currentTime) - timeInMinutes(this.props.dayStartTime))) /\n        (durationInMinutes(this.props.dayStartTime, this.props.dayEndTime) + 10) +\n      '%';\n    return <div style={{ ...styles.hourLine, top: topProp }} />;\n  }\n}\n","// @flow\nimport React from 'react';\nimport PlanColumn from '../PlanColumn';\nimport ColumnHeader from '../ColumnHeader';\nimport HourLine from '../HourLine';\nimport CurrentHourLine from '../CurrentHourLine';\nimport './ProdPlan.scss'\n\nexport default class ProdPlan extends React.Component {\n  render() {\n    const dayStartTime = { hour: 9, minute: 30 };\n    const dayEndTime = { hour: 19, minute: 0 };\n    const hoursOfTheDay = [\n      { id: 1, hour: 9, minute: 30 },\n      { id: 2, hour: 10, minute: 30 },\n      { id: 3, hour: 11, minute: 30 },\n      { id: 4, hour: 12, minute: 30 },\n      { id: 5, hour: 14, minute: 0 },\n      { id: 6, hour: 15, minute: 0 },\n      { id: 7, hour: 16, minute: 0 },\n      { id: 8, hour: 17, minute: 0 },\n      { id: 9, hour: 18, minute: 0 },\n    ];\n    return (\n      <div className=\"prod-plan\">\n        <div className=\"prod-plan__header__container\">\n          <div className=\"prod-plan__header__columns-container\">\n            {this.props.devTeamMembers.map(member => (\n              <ColumnHeader key={member.id} member={member} />\n            ))}\n          </div>\n        </div>\n        <div className=\"prod-plan__plan__container\">\n          <CurrentHourLine dayStartTime={dayStartTime} dayEndTime={dayEndTime} />\n          {hoursOfTheDay.map(time => (\n            <HourLine\n              key={time.id}\n              time={time}\n              dayStartTime={dayStartTime}\n              dayEndTime={dayEndTime}\n            />\n          ))}\n          <div className=\"prod-plan__plan__columns__container\">\n            {this.props.devTeamMembers.map(member => {\n              if (!this.props.dailyGoalsColumn) {\n                return (\n                  <div key={member.id} className=\"prod-plan__plan__columns__error__column\">\n                    <span className=\"prod-plan__plan__columns__error__label\">\n                      Vous n'avez pas sélectionné de colonne 'Daily Goals'\n                    </span>\n                  </div>\n                );\n              }\n              return (\n                <PlanColumn\n                  key={member.id}\n                  dayStartTime={dayStartTime}\n                  dayEndTime={dayEndTime}\n                  member={member}\n                  cards={member.dailyCards}\n                />\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import ProdPlan from './ProdPlan';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { getTrelloUserDevTeam, getTrelloUserDailyGoalsColumn } from 'redux/TrelloUser';\n\nconst mapStateToProps = state => ({\n  devTeamMembers: getTrelloUserDevTeam(state),\n  dailyGoalsColumn: getTrelloUserDailyGoalsColumn(state),\n});\n\nconst mapDispatchToProps = {};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(withRouter(ProdPlan));\n","// @flow\nimport React from 'react';\nimport Menu from '../Menu';\nimport styles from './Dashboard.style';\nimport EditTeamPopin from '../EditTeamPopin';\nimport DevSelectionPopin from '../DevSelectionPopin';\nimport CardDescriptionPopin from '../CardDescriptionPopin';\nimport ProdPlan from '../ProdPlan';\n\nexport default class Dashboard extends React.Component {\n  render() {\n    return (\n      <div style={styles.dashboard}>\n        <Menu style={styles.menu} />\n        <ProdPlan />\n        {this.props.isEditTeamPopinOpen && <EditTeamPopin />}\n        {this.props.isDevSelectionPopinOpen && <DevSelectionPopin />}\n        {this.props.isCardDescriptionPopinOpen && <CardDescriptionPopin />}\n      </div>\n    );\n  }\n}\n","import Dashboard from './Dashboard';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport {\n  isEditTeamPopinOpen,\n  isDevSelectionPopinOpen,\n  isCardDescriptionPopinOpen,\n} from 'redux/App';\n\nconst mapStateToProps = state => ({\n  isEditTeamPopinOpen: isEditTeamPopinOpen(state),\n  isDevSelectionPopinOpen: isDevSelectionPopinOpen(state),\n  isCardDescriptionPopinOpen: isCardDescriptionPopinOpen(state),\n});\n\nconst mapDispatchToProps = {};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(withRouter(Dashboard));\n","import * as React from 'react';\n\nimport Dashboard from '../../components/Dashboard';\n\nexport default class Home extends React.Component {\n  render() {\n    return <Dashboard />;\n  }\n}\n","import { connect } from 'react-redux';\nimport Home from './Home';\n\nfunction mapStateToProps() {\n  return {};\n}\n\nfunction mapDispatchToProps() {\n  return {};\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Home);\n","// @flow\n// $FlowFixMe flow is not ready for Suspense or lazy today\nimport React, { Suspense } from 'react';\nimport { Route, Switch } from 'react-router';\n\nimport Home from './pages/Home';\n\nconst routes = () => (\n  <Suspense fallback={<div>Loading...</div>}>\n    <Switch>\n      <Route exact path=\"/\" component={Home} />\n    </Switch>\n  </Suspense>\n);\n\nexport default routes;\n","// @flow\nexport const flattenMessages = (nestedMessages, prefix = '') =>\n  Object.keys(nestedMessages).reduce((messages, key) => {\n    const value = nestedMessages[key];\n    const prefixedKey = prefix ? `${prefix}.${key}` : key;\n\n    if (typeof value === 'string') {\n      messages[prefixedKey] = value; // eslint-disable-line\n    } else {\n      Object.assign(messages, flattenMessages(value, prefixedKey));\n    }\n\n    return messages;\n  }, {});\n\nexport default flattenMessages;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"title\", null, \"Fichier 8\");\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"g\", null, React.createElement(\"g\", {\n  id: \"Calque_1-2\"\n}, React.createElement(\"path\", {\n  fill: \"currentColor\",\n  d: \"M57.3,19.3c0,2.1-0.2,4.2-0.7,6.3c-0.9,4.6-3,8.8-6.1,12.4c-1.7,2-3.7,3.6-5.8,5c-2.5,1.5-5.2,2.7-8,3.4 c-3.5,0.9-7.1,1.3-10.8,1.3h-7.3l-4.4,22.2c-0.1,0.4-0.3,0.7-0.5,1c-0.4,0.3-0.8,0.6-1.3,0.7c-0.8,0.2-1.5,0.3-2.3,0.4 c-0.9,0.1-2.1,0.1-3.4,0.1s-2.4,0-3.3-0.1c-0.7-0.1-1.4-0.2-2.1-0.4c-0.4-0.1-0.7-0.3-1-0.7c-0.2-0.3-0.2-0.7-0.1-1L12.6,7.3 c0.2-1.5,0.9-2.8,2.1-3.8c1.1-0.9,2.6-1.3,4-1.3h15.2c1.9,0,3.5,0.1,5,0.2c1.4,0.1,2.9,0.3,4.3,0.6c2,0.4,4,1.1,5.9,2 c1.7,0.8,3.2,2,4.4,3.4c1.2,1.4,2.2,3,2.8,4.7C57,15.1,57.3,17.2,57.3,19.3z M42.4,20.9c0-1.6-0.4-3.1-1.2-4.4 c-0.9-1.3-2.3-2.3-3.8-2.6c-0.8-0.3-1.7-0.4-2.5-0.5c-0.9-0.1-2-0.1-3.1-0.1h-6.2l-4.6,23.6h6.4c1.8,0,3.5-0.2,5.2-0.7 c1.4-0.4,2.6-1.1,3.8-1.9c1.1-0.8,2-1.7,2.8-2.8c1.5-2.1,2.5-4.4,2.9-7C42.3,23.2,42.4,22,42.4,20.9z\"\n}), React.createElement(\"path\", {\n  fill: \"currentColor\",\n  d: \"M98,62.2c0,0.3,0,0.7-0.1,1.2s-0.2,1.2-0.3,1.9s-0.3,1.4-0.5,2.2c-0.2,0.7-0.4,1.4-0.7,2.1 c-0.2,0.6-0.5,1.1-0.9,1.5c-0.3,0.4-0.8,0.6-1.2,0.6H62.4c-0.5,0-1.1-0.1-1.6-0.2c-0.5-0.2-0.9-0.4-1.2-0.8 c-0.3-0.4-0.5-0.9-0.6-1.4c-0.1-0.7-0.1-1.3,0-2L71.8,4.1c0-0.4,0.2-0.7,0.5-1c0.4-0.3,0.8-0.6,1.3-0.7c0.7-0.2,1.5-0.3,2.3-0.4 c0.9-0.1,2.1-0.1,3.5-0.1s2.5,0,3.4,0.1c0.7,0.1,1.4,0.2,2.1,0.4c0.4,0.1,0.8,0.4,1,0.7c0.2,0.3,0.2,0.7,0.1,1l-11.2,56h21.9 c0.4,0,0.9,0.2,1.1,0.6C97.9,61.2,98,61.7,98,62.2z\"\n}), React.createElement(\"path\", {\n  fill: \"currentColor\",\n  d: \"M162.6,66.5c0.2,1,0.2,2,0.3,3.1c0,0.7-0.3,1.3-0.8,1.7c-0.7,0.4-1.5,0.7-2.4,0.7 c-1.1,0.1-2.6,0.1-4.6,0.1c-1.4,0-2.5,0-3.3-0.1c-0.7,0-1.3-0.1-2-0.3c-0.4-0.1-0.8-0.3-1-0.6c-0.2-0.4-0.3-0.8-0.3-1.2l-1.9-14 h-26.1l-7.2,13.7c-0.2,0.5-0.5,0.9-0.9,1.3c-0.4,0.4-0.9,0.6-1.4,0.8c-0.8,0.2-1.6,0.3-2.4,0.4c-1,0.1-2.3,0.1-3.8,0.1 c-1.3,0-2.5,0-3.8-0.1c-0.7,0-1.3-0.3-1.8-0.8c-0.3-0.5-0.4-1.2-0.1-1.8c0.4-1,0.8-2,1.4-3l33.7-61.7c0.3-0.5,0.7-1,1.1-1.5 c0.4-0.4,1-0.7,1.5-0.9c0.9-0.2,1.8-0.3,2.7-0.4c1.1,0,2.6-0.1,4.4-0.1c2.1,0,3.8,0,5,0.1c1,0,1.9,0.1,2.9,0.4 c0.5,0.1,1,0.4,1.4,0.9c0.2,0.5,0.4,1.1,0.4,1.6L162.6,66.5z M141.5,15.5L141.5,15.5L126,45h19.6L141.5,15.5z\"\n}), React.createElement(\"path\", {\n  fill: \"currentColor\",\n  d: \"M229.4,66.8c-0.1,0.8-0.4,1.5-0.8,2.2c-0.4,0.6-0.9,1.2-1.4,1.6c-0.5,0.4-1.2,0.7-1.8,0.9 c-0.7,0.2-1.4,0.3-2.1,0.3h-6c-1.1,0-2.1-0.1-3.2-0.4c-0.8-0.2-1.5-0.7-2.1-1.3c-0.7-0.8-1.2-1.7-1.6-2.6 c-0.6-1.4-1.1-2.8-1.5-4.2l-10.3-31c-0.8-2.4-1.5-4.8-2.2-7.3c-0.7-2.4-1.3-4.9-1.9-7.3h-0.1c-0.4,2.8-0.8,5.6-1.2,8.4 c-0.5,2.7-1,5.5-1.6,8.2l-7.1,35.5c-0.1,0.4-0.2,0.7-0.5,1c-0.3,0.3-0.7,0.6-1.2,0.7c-0.7,0.2-1.4,0.4-2.1,0.4 c-1,0.1-2.1,0.2-3.1,0.2c-1,0-2.1,0-3.1-0.2c-0.6-0.1-1.3-0.2-1.9-0.4c-0.7-0.2-1.1-0.9-0.9-1.5c0,0,0-0.1,0-0.1l12.5-62.6 c0.2-1.5,1-2.9,2.2-3.8c1.1-0.8,2.5-1.3,3.9-1.3h7.4c1,0,2,0.1,3,0.4c0.8,0.3,1.5,0.7,2.1,1.3c0.6,0.7,1.2,1.4,1.6,2.3 c0.5,1.1,0.9,2.3,1.3,3.4L216.1,41c0.7,2,1.3,4,1.9,6s1.1,3.9,1.7,5.9h0.1c0.4-2.6,0.8-5.2,1.3-8c0.5-2.8,1-5.4,1.5-8l6.6-32.8 c0.1-0.4,0.2-0.7,0.5-0.9c0.3-0.3,0.7-0.5,1.2-0.7c0.7-0.2,1.3-0.3,2-0.4c0.8-0.1,1.9-0.1,3.1-0.1s2.3,0,3.1,0.1 c0.6,0.1,1.3,0.2,1.9,0.4c0.4,0.1,0.7,0.3,0.9,0.7c0.1,0.3,0.2,0.6,0.1,0.9L229.4,66.8z\"\n}), React.createElement(\"path\", {\n  fill: \"currentColor\",\n  d: \"M301.5,66.8c-0.1,0.8-0.4,1.5-0.8,2.2c-0.4,0.6-0.9,1.2-1.5,1.6c-0.5,0.4-1.2,0.7-1.8,0.9 c-0.7,0.2-1.4,0.3-2.1,0.3h-6c-1.1,0-2.1-0.1-3.2-0.4c-0.8-0.2-1.5-0.7-2.1-1.3c-0.7-0.8-1.2-1.7-1.6-2.6 c-0.6-1.4-1.1-2.8-1.5-4.2l-10.3-31c-0.8-2.4-1.5-4.8-2.2-7.3s-1.3-4.9-1.9-7.3h-0.1c-0.4,2.8-0.8,5.6-1.2,8.4s-1,5.5-1.6,8.2 l-7.1,35.5c-0.1,0.4-0.2,0.7-0.5,1c-0.3,0.3-0.8,0.6-1.2,0.7c-0.7,0.2-1.4,0.4-2.1,0.4c-1,0.1-2.1,0.2-3.1,0.2c-1,0-2.1,0-3.1-0.2 c-0.6-0.1-1.3-0.2-1.9-0.4c-0.4-0.1-0.7-0.4-0.8-0.7c-0.1-0.3-0.1-0.7,0-1l12.5-62.6c0.2-1.5,1-2.9,2.2-3.8 c1.1-0.8,2.5-1.3,3.9-1.3h7.4c1,0,2,0.1,3,0.4c0.8,0.3,1.5,0.7,2.1,1.3c0.6,0.7,1.2,1.4,1.6,2.3c0.5,1.1,0.9,2.3,1.3,3.4L288.3,41 c0.7,2,1.3,4,1.9,6s1.1,3.9,1.7,5.9h0.1c0.4-2.6,0.8-5.2,1.3-8s1-5.4,1.5-8l6.6-32.8c0.1-0.4,0.2-0.7,0.5-0.9 c0.3-0.3,0.7-0.6,1.1-0.7c0.7-0.2,1.3-0.3,2-0.4c0.8-0.1,1.9-0.1,3.1-0.1s2.3,0,3.1,0.1c0.6,0.1,1.3,0.2,1.9,0.4 c0.4,0.1,0.7,0.3,0.9,0.7c0.1,0.3,0.2,0.6,0.1,0.9L301.5,66.8z\"\n}), React.createElement(\"path\", {\n  fill: \"currentColor\",\n  d: \"M385.4,25.5c0,3.4-0.3,6.8-0.9,10.1c-0.6,3.6-1.5,7.2-2.8,10.7c-1.3,3.6-3,7-5,10.1 c-2.1,3.2-4.6,6.1-7.6,8.5c-3.1,2.5-6.7,4.5-10.5,5.9c-4.4,1.5-9,2.3-13.7,2.2c-3.9,0.1-7.7-0.4-11.5-1.4c-3.1-0.8-6-2.4-8.4-4.5 c-2.3-2.1-4.1-4.7-5.2-7.6c-1.2-3.4-1.8-7.1-1.7-10.7c0-3.5,0.3-7.1,0.9-10.6c0.6-3.7,1.6-7.3,2.9-10.8c1.3-3.5,3-6.9,5.1-10.1 c2.1-3.2,4.7-6,7.6-8.4c3.1-2.5,6.6-4.5,10.4-5.8c8.1-2.6,16.8-2.8,25-0.6c3.1,0.9,6,2.4,8.4,4.5c2.3,2.1,4.1,4.7,5.1,7.6 C384.9,18.1,385.5,21.8,385.4,25.5z M370.5,26.8c0-2-0.2-4-0.7-5.9c-0.4-1.7-1.2-3.2-2.3-4.5c-1.1-1.3-2.6-2.2-4.2-2.8 c-4.8-1.6-10-1.3-14.6,0.8c-2.3,1.2-4.4,2.8-6.2,4.7c-1.8,2-3.3,4.2-4.4,6.6c-1.2,2.4-2.1,5-2.8,7.6c-0.7,2.5-1.2,5-1.5,7.5 c-0.3,2.1-0.4,4.3-0.5,6.4c0,2,0.2,4,0.7,6c0.8,3.4,3.3,6.1,6.6,7.2c2.1,0.7,4.2,1,6.4,1c2.8,0.1,5.6-0.6,8.2-1.8 c2.3-1.1,4.4-2.7,6.1-4.6c1.8-2,3.2-4.2,4.4-6.6c1.2-2.4,2.1-4.9,2.9-7.5c0.7-2.4,1.2-4.9,1.5-7.5C370.3,31.2,370.5,29,370.5,26.8 z\"\n}), React.createElement(\"path\", {\n  fill: \"currentColor\",\n  d: \"M447.7,17.4c0,2.3-0.3,4.6-0.9,6.8c-0.6,2.3-1.7,4.4-3,6.4c-1.4,2.1-3.2,3.9-5.3,5.4 c-2.4,1.7-5.1,3-7.9,3.9c1.9,0.8,3.4,2.2,4.3,4c1.4,2.6,2.3,5.4,2.9,8.3l2.9,14.1c0.1,0.8,0.3,1.5,0.4,2.1 c0.1,0.5,0.1,1.1,0.1,1.6c0,0.3-0.1,0.7-0.4,0.9c-0.4,0.3-0.8,0.5-1.3,0.6c-0.8,0.2-1.6,0.4-2.5,0.5c-1,0.1-2.4,0.1-4,0.1 s-2.7,0-3.6-0.1c-0.7-0.1-1.4-0.2-2.1-0.4c-0.4-0.1-0.8-0.4-1-0.8c-0.2-0.4-0.3-0.7-0.4-1.1l-2.7-15.5c-0.3-1.6-0.7-3.2-1.2-4.7 c-0.4-1.2-1-2.4-1.8-3.5c-0.7-0.9-1.7-1.6-2.8-2c-1.2-0.5-2.6-0.7-3.9-0.7h-4.4l-5.3,26.5c-0.1,0.4-0.3,0.7-0.5,1 c-0.4,0.3-0.8,0.6-1.3,0.7c-0.7,0.2-1.5,0.3-2.3,0.4c-0.9,0.1-2.1,0.1-3.4,0.1s-2.5,0-3.4-0.1c-0.7-0.1-1.4-0.2-2.1-0.4 c-0.4-0.1-0.7-0.3-1-0.7c-0.2-0.3-0.2-0.7-0.1-1l12.7-63.2c0.2-1.3,0.8-2.6,1.9-3.4c1-0.7,2.2-1,3.4-1h18.6c3,0,5.9,0.3,8.8,0.9 c2.4,0.5,4.7,1.5,6.7,2.8c1.8,1.2,3.3,2.8,4.3,4.7C447.2,12.8,447.7,15.1,447.7,17.4z M432.5,20c0-1-0.2-1.9-0.5-2.8 c-0.3-0.9-0.9-1.6-1.6-2.2c-0.9-0.7-1.9-1.2-2.9-1.4c-1.4-0.4-2.9-0.5-4.3-0.5h-8l-3.9,19.7h6.7c2.3,0.1,4.6-0.3,6.8-1.1 c1.7-0.7,3.2-1.7,4.5-3c1.1-1.2,2-2.5,2.5-4.1C432.3,23.1,432.5,21.5,432.5,20z\"\n}), React.createElement(\"path\", {\n  fill: \"currentColor\",\n  d: \"M526.6,18.8c0.1-2.1-0.8-4.2-2.3-5.6c-1.5-1.4-4.1-2.1-7.7-2.1c-2.6,0-5.2,0.3-7.8,0.8 c-3.2,0.7-6.3,1.6-9.4,2.6l2.3-11.1c2.5-1.1,5.2-1.9,7.8-2.5c3.1-0.7,6.3-1,9.5-1c3.1-0.1,6.2,0.4,9.2,1.3c2.4,0.7,4.6,2,6.4,3.6 c1.7,1.5,2.9,3.4,3.8,5.4c0.8,2.2,1.3,4.5,1.2,6.8c0.1,4.3-1.1,8.6-3.3,12.3c-2.4,3.7-5.9,6.5-10,8v0.2c2.7,0.8,5,2.4,6.6,4.7 c1.6,2.4,2.4,5.2,2.3,8c0.1,7.5-3.1,14.7-8.8,19.5c-2.9,2.4-6.1,4.2-9.7,5.4c-3.9,1.3-7.9,1.9-12,1.9c-3.5,0-6.9-0.4-10.3-1.2 c-2.6-0.6-5.2-1.6-7.5-3l2.2-10.7c2.2,1.2,4.6,2.2,7.1,2.8c2.5,0.7,5.1,1,7.7,1c2.7,0.1,5.4-0.4,7.9-1.2c2.1-0.7,4-1.8,5.7-3.2 c1.5-1.3,2.7-2.9,3.5-4.7c0.8-1.8,1.2-3.7,1.2-5.6c0.1-2.3-0.8-4.5-2.5-6c-1.7-1.5-4.2-2.3-7.7-2.3h-10.5l2.3-11h6.7 c2.6,0,5.2-0.4,7.7-1.2c1.9-0.6,3.6-1.7,5-3c1.2-1.2,2.2-2.7,2.8-4.3C526.3,22.1,526.6,20.5,526.6,18.8z\"\n}), React.createElement(\"path\", {\n  fill: \"currentColor\",\n  d: \"M587,52.9c5.4-5.7,11.4-3.5,17.1-2.7c3.3,0.5,5.8-0.1,8.2-2.3c3-2.7,6.1-5.3,9.3-7.8 c2.8-2.2,2.7-4.3,0-6.3c-6.3-4.7-12.6-9.3-18.8-14c-0.9-0.8-1.8-1.7-2.6-2.7c0.9-0.8,1.9-1.6,2.9-2.3c4.1-2.3,8.3-2.4,12.8-1.1 c7.1,2.2,14.3,4,21.4,6.2c2.5,0.9,5.3,0.3,7.2-1.5c6.2-5,12.2-10.2,18.8-14.6c3.2-2.1,7.3-3,11.2-3.8c2.6-0.6,4.4,2.3,3.1,5.2 c-1.4,3.4-3.4,6.5-5.8,9.1c-11.3,11-23.2,21.4-34.5,32.4c-8.1,7.9-18.6,11.4-28.1,16.7c-1.2,0.5-2.5,0.5-3.7,0 C599.2,60.1,593.2,56.5,587,52.9z\"\n}), React.createElement(\"path\", {\n  fill: \"currentColor\",\n  d: \"M642.2,53.1l10-9.1c5.9,3.9,11.7,8,17.6,11.7c13.8,8.6,26.4,1.1,31.7-7.3c6.8-11.1,3.4-25.6-7.8-32.5 c-2.2-1.4-4.7-2.4-7.2-2.9c-0.7-0.2-1.5-0.3-2.1-0.5L687.7,0c18.2,3.5,30.9,18.9,30.2,36.9c-0.7,18.4-14.4,33.1-33,35.4 c-6,0.8-12.1-0.5-17.4-3.5C659.1,64,651,58.6,642.2,53.1z\"\n}), React.createElement(\"path\", {\n  fill: \"currentColor\",\n  d: \"M589.4,13.3c-11.9-1.9-23.2,5.7-26,17.4c-3.2,12.4,3.9,24.1,16.2,28.7c6.7,2.5,12.8,6.6,19.5,10.2 c-12.1,7-29.8,2.9-40.1-8.8c-11.7-13.2-12.3-32.9-1.4-46.8C566.7,2.2,585.7-5,601,4L589.4,13.3z\"\n}), React.createElement(\"path\", {\n  fill: \"currentColor\",\n  d: \"M803.3,19.5c-6.2-3.9-12-7.7-17.8-11.3c-5-4.2-11-7-17.4-8.2l-0.1,0.3c-2.5-0.3-5-0.4-7.4-0.1 c-18.6,2.3-32.3,17-33,35.4c-0.2,3.9,0.3,7.8,1.4,11.5l-6.5,5.9c6.2,3.9,12,7.7,17.8,11.3c5,4.2,11,7,17.4,8.2l0.1-0.3 c2.5,0.3,5,0.4,7.4,0.1c18.6-2.3,32.3-17,33-35.4c0.2-3.9-0.3-7.8-1.4-11.6L803.3,19.5z M781.8,48.3c-5.2,8.5-17.8,15.9-31.6,7.4 c-9.8-7.3-12.5-20.9-6.1-31.4c5.2-8.4,17.8-15.9,31.6-7.4C785.6,24.2,788.2,37.8,781.8,48.3z\"\n})));\n\nvar SvgComponent = function SvgComponent(props) {\n  return React.createElement(\"svg\", _extends({\n    version: 1.1,\n    id: \"Calque_1\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 803.3 77.2\",\n    enableBackground: \"new 0 0 803.3 77.2\",\n    xmlSpace: \"preserve\"\n  }, props), _ref, _ref2);\n};\n\nexport default __webpack_public_path__ + \"static/media/plannor3000-logo.45f80eb7.svg\";\nexport { SvgComponent as ReactComponent };","// @flow\nimport React from 'react';\nimport { IntlProvider, addLocaleData } from 'react-intl';\nimport fr from 'react-intl/locale-data/fr';\nimport en from 'react-intl/locale-data/en';\nimport { ReactComponent as Logo } from '../../assets/plannor3000-logo.svg';\nimport './Header.scss'\n\nimport frMessages from 'translations/fr.json';\nimport enMessages from 'translations/en.json';\nimport { flattenMessages } from 'services/i18n/intl';\n\nconst locales = {\n  fr: flattenMessages(frMessages),\n  en: flattenMessages(enMessages),\n};\n\naddLocaleData([...fr, ...en]);\n\nexport default class Header extends React.Component {\n  render() {\n    return (\n      <IntlProvider locale=\"fr\" messages={locales.fr}>\n        <div className=\"header\">\n          <Logo className=\"header__logo\" />\n        </div>\n      </IntlProvider>\n    );\n  }\n}\n","const styles = {\n  rootContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100vh',\n  },\n};\n\nexport default styles;\n","// @flow\nimport React from 'react';\nimport { IntlProvider, addLocaleData } from 'react-intl';\nimport fr from 'react-intl/locale-data/fr';\nimport en from 'react-intl/locale-data/en';\n\nimport frMessages from 'translations/fr.json';\nimport enMessages from 'translations/en.json';\nimport { flattenMessages } from 'services/i18n/intl';\n\nimport Header from '../Header';\nimport styles from './Root.style';\n\nconst locales = {\n  fr: flattenMessages(frMessages),\n  en: flattenMessages(enMessages),\n};\n\naddLocaleData([...fr, ...en]);\n\n// type Props = {\n//   children: React$Element<*>,\n// };\n\nexport default class Root extends React.Component {\n  render() {\n    const { children } = this.props;\n    return (\n      <IntlProvider locale=\"fr\" messages={locales.fr}>\n        <div style={styles.rootContainer}>\n          <Header />\n          {children}\n        </div>\n      </IntlProvider>\n    );\n  }\n}\n","// @flow\nimport Root from './Root';\n\nexport default Root;\n","// @flow\n/**\n * Combine all reducers in this file and export the combined reducers.\n * If we were to do this in store.js, reducers wouldn't be hot reloadable.\n */\n\nimport { combineReducers } from 'redux';\n\n/**\n * Example of the Avatar module which should export a reducer.\n */\n\nimport trelloUserReducer, { initialState as trelloUserState } from './TrelloUser/reducer';\nimport appReducer, { initialState as appState } from './App/reducer';\n\n// Combine all reducers you may have here\nexport default combineReducers({\n  trelloUserState: trelloUserReducer,\n  appState: appReducer,\n});\n\nexport const initialStates = {\n  trelloUserState,\n  appState,\n};\n","import './App.scss';\nimport React from 'react';\n\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\n\nimport theme from './theme';\nimport Routes from './routes';\nimport Root from './components/Root';\nimport configureStore from './redux/plannorStore';\n\nconst RootComponentWithRoutes = () => (\n  <Root>\n    <Routes />\n  </Root>\n);\n\nconst appBasename = process.env.NODE_ENV === 'production' ? '/plannor3000' : '';\n\nconst store = configureStore();\n\nexport default class App extends React.Component {\n  render() {\n    Notification.requestPermission(function(status) {\n      console.log('Notification permission status:', status);\n    });\n\n    return (\n      <Provider store={store}>\n        <MuiThemeProvider theme={theme}>\n          <Router basename={appBasename}>\n            <Route path=\"/\" component={RootComponentWithRoutes} />\n          </Router>\n        </MuiThemeProvider>\n      </Provider>\n    );\n  }\n}\n","import { createStore, applyMiddleware, compose } from 'redux';\n// See\n// https://github.com/gaearon/redux-thunk and http://redux.js.org/docs/advanced/AsyncActions.html\nimport thunkMiddleware from 'redux-thunk';\nimport reducers, { initialStates } from './reducers';\n\nexport default function configureStore(props, context) {\n  // This is how we get initial props from Symfony into redux.\n  const { trelloUserState } = initialStates;\n\n  // Redux expects to initialize the store using an Object\n  const initialState = {\n    trelloUserState: { ...trelloUserState },\n  };\n\n  // use devtools if we are in a browser and the extension is enabled\n  let composeEnhancers =\n    (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\n  // middlewares\n  let middlewares = [thunkMiddleware];\n\n  const store = createStore(\n    reducers,\n    initialState,\n    composeEnhancers(applyMiddleware(...middlewares)),\n  );\n  return store;\n}\n","/* eslint-disable */\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ',\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'babel-polyfill';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport createBrowserHistory from 'history/createBrowserHistory';\n\nimport App from './App';\nimport { register } from './serviceWorker';\nimport configureStore from './redux/store';\n\nconst history = createBrowserHistory();\nconst { store, persistor } = configureStore(history);\n\nconst rootEl = document.getElementById('root');\n\nconst serviceWorkerConfig = {};\nif (rootEl) {\n  ReactDOM.render(<App history={history} store={store} persistor={persistor} />, rootEl);\n  register(serviceWorkerConfig);\n}\n\nif (module.hot) {\n  module.hot.accept('./App', () => {\n    const NextApp = require('./App').default; // eslint-disable-line\n    if (rootEl) {\n      ReactDOM.render(<NextApp history={history} store={store} />, rootEl);\n    }\n  });\n}\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport reducers, { initialStates } from './reducers';\nimport thunkMiddleware from 'redux-thunk';\n\nexport default function configureStore() {\n  // use devtools if we are in a browser and the extension is enabled\n  let composeEnhancers =\n    (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\n  // middlewares\n  let middlewares = [thunkMiddleware];\n\n  const store = createStore(\n    reducers,\n    initialStates,\n    composeEnhancers(applyMiddleware(...middlewares)),\n  );\n  return store;\n}\n"],"sourceRoot":""}