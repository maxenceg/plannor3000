{"version":3,"sources":["theme.js","components/BasicButton/BasicButton.js","components/BasicSelect/BasicSelect.js","components/ButtonsPanel/ButtonsPanel.style.js","components/ButtonsPanel/ButtonsPanel.js","helpers/TimeHelpers/timeHelpers.js","components/PlanCard/PlanCard.style.js","components/PlanCard/PlanCard.js","components/Menu/Menu.style.js","components/Menu/Menu.js","redux/TrelloUser/actions.js","redux/TrelloUser/selectors.js","redux/TrelloUser/reducer.js","redux/App/actions.js","components/Menu/Menu.wrap.js","components/Dashboard/Dashboard.style.js","components/PlannorPopin/PlannorPopin.js","components/EditTeamPopin/EditTeamPopin.style.js","components/EditTeamPopin/EditTeamPopin.js","redux/App/selectors.js","redux/App/reducer.js","components/EditTeamPopin/EditTeamPopin.wrap.js","components/DevSelectionPopin/DevSelectionPopin.style.js","components/DevSelectionPopin/DevSelectionPopin.js","components/DevSelectionPopin/DevSelectionPopin.wrap.js","components/CardDescriptionPopin/CardDescriptionPopin.js","components/CardDescriptionPopin/CardDescriptionPopin.wrap.js","components/PlanColumn/PlanColumn.style.js","components/PlanColumn/PlanColumn.js","components/PlanColumn/PlanColumn.wrap.js","components/ColumnHeader/ColumnHeader.js","components/HourLine/HourLine.style.js","components/HourLine/HourLine.js","components/CurrentHourLine/CurrentHourLine.style.js","components/CurrentHourLine/CurrentHourLine.js","components/ProdPlan/ProdPlan.js","components/ProdPlan/ProdPlan.wrap.js","components/Dashboard/Dashboard.js","components/Dashboard/Dashboard.wrap.js","pages/Home/Home.js","pages/Home/Home.wrap.js","routes.js","services/i18n/intl.js","assets/plannor3000-logo.svg","components/Header/Header.js","components/Root/Root.style.js","components/Root/Root.js","components/Root/Root.wrap.js","redux/reducers.js","App.js","redux/plannorStore.js","serviceWorker.js","index.js","redux/store.js"],"names":["createMuiTheme","typography","useNextVariants","palette","primary","blue","BasicButton","react_default","a","createElement","Button_default","style","this","props","onClick","onClickAction","variant","color","label","Component","BasicSelect","FormControl_default","propStyle","InputLabel_default","htmlFor","Select_default","value","onChange","handleChange","options","map","option","MenuItem_default","key","styles","panelButton","minWidth","minHeight","width","height","padding","settingsButton","marginRight","editTeamButton","refreshButton","ButtonsPanel","components_BasicButton_BasicButton","Object","objectSpread","className","isTeamEditable","editTeamAction","refreshAction","React","timeInMinutes","time","hour","minute","durationInMinutes","startTime","endTime","splitTimeFromString","timeString","split","parseInt","stringTimeFromObject","timeObject","toString","getCurrentTime","Date","getHours","getMinutes","cardContainer","display","flexDirection","cursor","backgroundColor","MozBoxShadow","WebkitBoxShadow","boxShadow","borderRadius","boxSizing","footerIcon","justifyContent","marginTop","icon","header","alignItems","fontSize","idShort","labelsContainer","flexWrap","marginBottom","marginLeft","whiteSpace","cardName","PlanCard","_this","devName","setTimeout","Notification","card","body","requireInteraction","topProp","dayStartTime","dayEndTime","heightProp","timedCardContainerStyle","top","position","cardAction","labels","name","icons","event","clickAction","stopPropagation","handleClick","action","boardSelect","buttonsPanel","connectToTrelloButton","cardsContainer","flexGrow","overflowY","planCard","Menu","window","Trello","authorize","type","scope","read","write","expiration","success","fetchTrelloUser","fetchTrelloUserBoards","_this2","fetchData","boardSelectOptions","trelloUserBoards","board","id","dailyGoalsSelectOptions","trelloUserColumns","column","authorized","length","ButtonsPanel_ButtonsPanel","trelloUserSelectedBoard","fetchTrelloUserColumns","trelloUserDailyGoalsColumn","fetchDailyGoalsCards","trelloUserSprintColumn","fetchSprintBacklogCards","toggleEditTeamPopin","components_BasicSelect_BasicSelect","addTrelloUserSelectedBoard","target","addTrelloUserSprintColumn","addTrelloUserDailyGoalsColumn","trelloUserSprintBacklogCards","PlanCard_PlanCard","toggleDevSelectionPopin","addDevSelectionCard","openDevSelectionPopin","fetchCardChecklists","toggleCardDescriptionPopin","openCardDescriptionPopin","constants","FETCH_TRELLO_USER","REQUEST","SUCCESS","ERROR","FETCH_TRELLO_USER_BOARDS","FETCH_TRELLO_USER_COLUMNS","FETCH_TRELLO_USER_DAILY_GOALS_CARDS","FETCH_TRELLO_USER_SPRINT_BACKLOG_CARDS","FETCH_CARD_CHECKLISTS","FETCH_TRELLO_USER_BOARD_MEMBERS","TAG_DEVS_ON_CARD","MOVE_CARD_TO_DAILY_GOALS","ADD_TRELLO_USER_SELECTED_BOARD","ADD_TRELLO_USER_DAILY_GOALS_COLUMN","ADD_TRELLO_USER_SPRINT_COLUMN","TOGGLE_TRELLO_TEAM_MEMBERSHIP","TAG_DEV_ON_PLANNOR_CARD","REMOVE_CARDS_FROM_SPRINT_BACKLOG","fetchTrelloUserRequest","fetchTrelloUserSuccess","user","payload","fetchTrelloUserError","error","errorMessage","message","dispatch","get","fields","data","checklists","fetchCardChecklistsSuccess","ffetchCardChecklistsError","fetchTrelloUserBoardMembers","boardOrigin","members","fetchTrelloUserBoardMembersError","toggleTrelloUserTeamMembership","memberId","getTrelloUserFullName","state","trelloUserState","fullName","getTrelloUserBoards","boards","getTrelloUserSelectedBoard","selectedBoard","getTrelloUserColumns","columns","getTrelloUserDailyGoalsColumn","dailyGoalsColumn","getTrelloUserDailyGoalsCards","cards","getTrelloUserSprintColumn","sprintColumn","getTrelloUserSprintBacklogCards","getTrelloUserBoardMembers","boardMembers","getTrelloUserBoardMembersOrigin","boardMembersOrigin","getTrelloUserDevTeam","project","devTeam","initialState","username","isLoading","TOGGLE_EDIT_TEAM_POPIN","TOGGLE_DEV_SELECTION_POPIN","TOGGLE_CARD_DESCRIPTION_POPIN","ADD_DEV_SELECTION_CARD","TOGGLE_MEMBER_SELECTION","mapDispatchToProps","fetchTrelloUserBoardsError","fetchTrelloUserColumnsError","fetchTrelloUserDailyGoalsCardsError","fetchTrelloUserSprintBacklogCardsError","connect","trelloUserFullName","trelloUserDailyGoalsCards","withRouter","dashboard","fontFamily","menu","PlannorPopin","Dialog_default","open","isOpen","onClose","handleClose","aria-labelledby","aria-describedby","DialogTitle_default","title","DialogContent_default","content","DialogActions_default","closeLabel","handleSubmit","autoFocus","submitLabel","editTeamPopin","maxWidth","avatarContainer","verticalAlign","margin","avatarInTeam","border","avatar","overflow","undefinedAvatar","background","textTransform","editTeamPopinFooter","textAlign","EditTeamPopin","trelloUserBoardMembers","trelloUserBoardMembersOrigin","toggleMembership","member","bind","isInTeam","avatarHash","alt","src","initials","PlannorPopin_PlannorPopin","isEditTeamPopinOpen","appState","isDevSelectionPopinOpen","devSelectionPopin","getDevSelectionCard","filter","selectedCard","isCardDescriptionPopinOpen","cardDescriptionPopin","getCardDescriptionPopinCard","getSelectedMembers","selectedMembers","warningMessage","DevSelectionPopin","devTeamMembers","startTimeString","endTimeString","toggleMemberSelection","includes","TextField_default","defaultValue","InputLabelProps","shrink","inputProps","step","tagDevsOnCard","moveCardToDailyGoals","membersId","forEach","devId","cardId","post","dailyGoalsColumnId","put","removeCardFromSprintBacklog","CardDescriptionPopin","desc","checklist","checkItems","checkItem","console","log","container","columnHeader","flex","grid","gridItem","PlanColumn","editDevSelection","getCardsOfDev","devs","ColumnHeader","hourLine","borderTop","hourLabel","HourLine","zIndex","CurrentHourLine","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","updateCurrentTime","setState","currentTime","interval","setInterval","clearInterval","ProdPlan","ColumnHeader_ColumnHeader_ColumnHeader","CurrentHourLine_CurrentHourLine","HourLine_HourLine","PlanColumn_wrap","dailyCards","Dashboard","Menu_wrap","ProdPlan_wrap","EditTeamPopin_wrap","DevSelectionPopin_wrap","CardDescriptionPopin_wrap","Home","react","Dashboard_wrap","routes","fallback","Switch","es_Route","exact","path","component","flattenMessages","nestedMessages","prefix","arguments","undefined","keys","reduce","messages","prefixedKey","concat","assign","_extends","i","source","prototype","hasOwnProperty","apply","_ref","_ref2","fill","d","plannor3000_logo_SvgComponent","version","xmlnsXlink","x","y","viewBox","enableBackground","xmlSpace","locales","__webpack_require__","p","fr","frMessages","en","enMessages","addLocaleData","toConsumableArray","Header","index_es","locale","rootContainer","Root","children","Header_Header_Header","combineReducers","memberIndex","indexOf","initialStates","RootComponentWithRoutes","Root_wrap","src_routes","store","context","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middlewares","thunkMiddleware","createStore","reducers","applyMiddleware","configureStore","App","requestPermission","status","es","theme","BrowserRouter","basename","Route","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","history","createBrowserHistory","persistor","rootEl","document","getElementById","ReactDOM","render","App_App","URL","process","origin","addEventListener","fetch","response","headers","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.8a43a153.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles';\nimport blue from '@material-ui/core/colors/blue';\n\nexport default createMuiTheme({\n  typography: {\n    useNextVariants: true,\n  },\n  palette: {\n    primary: blue,\n  },\n});\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\n\nclass BasicButton extends Component {\n  render() {\n    return (\n      <Button\n        style={this.props.style}\n        onClick={this.props.onClickAction}\n        variant=\"contained\"\n        color=\"primary\"\n      >\n        {this.props.label}\n      </Button>\n    );\n  }\n}\n\nexport default BasicButton;\n","import React, { Component } from 'react';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nclass BasicSelect extends Component {\n  render() {\n    return (\n      <FormControl style={this.props.propStyle}>\n        <InputLabel htmlFor=\"age-simple\">{this.props.label}</InputLabel>\n        <Select value={this.props.value} onChange={this.props.handleChange}>\n          {this.props.options.map(option => (\n            <MenuItem key={option.value} value={option.value}>\n              {option.label}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    );\n  }\n}\n\nexport default BasicSelect;\n","const styles = {\n  panelButton: {\n    minWidth: 'auto',\n    minHeight: 'auto',\n    width: '32px',\n    height: '32px',\n    padding: 0,\n  },\n  settingsButton: {\n    marginRight: 5,\n  },\n  editTeamButton: {\n    marginRight: 5,\n  },\n  refreshButton: {},\n};\n\nexport default styles;\n","// @flow\nimport React from 'react';\nimport BasicButton from '../BasicButton';\nimport styles from './ButtonsPanel.style';\n\nexport default class ButtonsPanel extends React.Component {\n  render() {\n    return (\n      <div style={this.props.style}>\n        <BasicButton\n          style={{ ...styles.panelButton, ...styles.settingsButton }}\n          label={<i className=\"material-icons\">settings</i>}\n        />\n        {!!this.props.isTeamEditable && (\n          <BasicButton\n            style={{ ...styles.panelButton, ...styles.editTeamButton }}\n            label={<i className=\"material-icons\">people</i>}\n            onClickAction={this.props.editTeamAction}\n          />\n        )}\n        <BasicButton\n          style={{ ...styles.panelButton, ...styles.refreshButton }}\n          label={<i className=\"material-icons\">refresh</i>}\n          onClickAction={this.props.refreshAction}\n        />\n      </div>\n    );\n  }\n}\n","export function timeInMinutes(time) {\n  return time.hour * 60 + time.minute;\n}\n\nexport function durationInMinutes(startTime, endTime) {\n  return timeInMinutes(endTime) - timeInMinutes(startTime);\n}\n\nexport function splitTimeFromString(timeString) {\n  const startTime = timeString.split(':');\n  return { hour: parseInt(startTime[0]), minute: parseInt(startTime[1]) };\n}\n\nexport function stringTimeFromObject(timeObject) {\n  const hours =\n    timeObject.hour >= 10 ? timeObject.hour.toString() : '0' + timeObject.hour.toString();\n  const minutes =\n    timeObject.minute >= 10 ? timeObject.minute.toString() : '0' + timeObject.minute.toString();\n  return hours + ':' + minutes;\n}\n\nexport function getCurrentTime() {\n  return {\n    hour: new Date().getHours(),\n    minute: new Date().getMinutes(),\n  };\n}\n","const styles = {\n  cardContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    cursor: 'pointer',\n    width: '100%',\n    backgroundColor: '#2196f3dd',\n    MozBoxShadow: '2px 2px 10px #cccccc',\n    WebkitBoxShadow: '2px 2px 10px #cccccc',\n    boxShadow: '2px 2px 10px #cccccc',\n    borderRadius: 5,\n    padding: 10,\n    boxSizing: 'border-box',\n    color: 'white',\n  },\n  footerIcon: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    marginTop: 'auto',\n  },\n  icon: {\n    cursor: 'pointer',\n  },\n  header: {\n    display: 'flex',\n    alignItems: 'flex-start',\n    fontSize: 11,\n  },\n  idShort: {\n    backgroundColor: 'yellow',\n    borderRadius: 5,\n    color: 'black',\n    padding: '4px 5px',\n  },\n  labelsContainer: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    marginBottom: -5,\n  },\n  label: {\n    marginLeft: 5,\n    marginBottom: 5,\n    borderRadius: 5,\n    padding: '4px 5px',\n    whiteSpace: 'nowrap',\n  },\n  cardName: {\n    marginTop: 10,\n  },\n};\n\nexport default styles;\n","// @flow\nimport React from 'react';\nimport { timeInMinutes, durationInMinutes, getCurrentTime } from '../../helpers';\nimport styles from './PlanCard.style';\n\nexport default class PlanCard extends React.Component {\n  componentWillMount() {\n    this.props.devName &&\n      setTimeout(() => {\n        new Notification('JP alert: Ticket #' + this.props.card.idShort, {\n          body: this.props.devName + ' should finish their ticket in 30 minutes!',\n          requireInteraction: true,\n        });\n      }, (durationInMinutes(getCurrentTime(), this.props.card.endTime) - 30) * 60000);\n  }\n  render() {\n    const handleClick = (event, clickAction) => {\n      event.stopPropagation();\n      clickAction();\n    };\n\n    const topProp =\n      this.props.startTime && this.props.dayStartTime && this.props.dayEndTime\n        ? (100 * (timeInMinutes(this.props.startTime) - timeInMinutes(this.props.dayStartTime))) /\n            durationInMinutes(this.props.dayStartTime, this.props.dayEndTime) +\n          '%'\n        : null;\n    const heightProp =\n      this.props.startTime && this.props.endTime && this.props.dayStartTime && this.props.dayEndTime\n        ? (100 * (timeInMinutes(this.props.endTime) - timeInMinutes(this.props.startTime))) /\n            durationInMinutes(this.props.dayStartTime, this.props.dayEndTime) +\n          '%'\n        : null;\n    const timedCardContainerStyle =\n      topProp && heightProp ? { top: topProp, height: heightProp, position: 'absolute' } : null;\n    return (\n      <div\n        style={{ ...this.props.style, ...styles.cardContainer, ...timedCardContainerStyle }}\n        onClick={this.props.cardAction}\n      >\n        <div style={styles.header}>\n          <div style={styles.idShort}>#{this.props.card.idShort}</div>\n          <div style={styles.labelsContainer}>\n            {this.props.card.labels.map(label => (\n              <div style={{ backgroundColor: label.color, ...styles.label }} key={label.name}>\n                {label.name}\n              </div>\n            ))}\n          </div>\n        </div>\n        <div style={styles.cardName}>{this.props.card.name}</div>\n        <div style={styles.footerIcon}>\n          {this.props.icons.map(icon => (\n            <i\n              style={styles.icon}\n              className=\"material-icons\"\n              onClick={event => handleClick(event, icon.action)}\n            >\n              {icon.name}\n            </i>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n","const styles = {\n  boardSelect: {\n    width: '100%',\n  },\n  buttonsPanel: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  connectToTrelloButton: {\n    display: 'inline-block',\n  },\n  cardsContainer: {\n    marginTop: 7,\n    flexGrow: 100,\n    overflowY: 'scroll',\n  },\n  planCard: {\n    marginTop: 5,\n  },\n};\n\nexport default styles;\n","// @flow\nimport React from 'react';\nimport BasicButton from '../BasicButton';\nimport BasicSelect from '../BasicSelect';\nimport ButtonsPanel from '../ButtonsPanel';\nimport PlanCard from '../PlanCard';\nimport styles from './Menu.style';\n\nexport default class Menu extends React.Component {\n  componentWillMount() {\n    const fetchData = () => {\n      this.props.fetchTrelloUser();\n      this.props.fetchTrelloUserBoards();\n    };\n\n    window.Trello.authorize({\n      type: 'popup',\n      name: 'Plannor 3000',\n      scope: {\n        read: 'true',\n        write: 'true',\n      },\n      expiration: 'never',\n      success: fetchData,\n    });\n  }\n\n  render() {\n    const fetchData = () => {\n      this.props.fetchTrelloUser();\n      this.props.fetchTrelloUserBoards();\n    };\n\n    const connectToTrello = () => {\n      window.Trello.authorize({\n        type: 'popup',\n        name: 'Plannor 3000',\n        scope: {\n          read: 'true',\n          write: 'true',\n        },\n        expiration: 'never',\n        success: fetchData,\n      });\n    };\n    const boardSelectOptions = this.props.trelloUserBoards\n      ? this.props.trelloUserBoards.map(function(board) {\n          return { value: board.id, label: board.name };\n        })\n      : null;\n    const dailyGoalsSelectOptions = this.props.trelloUserColumns\n      ? this.props.trelloUserColumns.map(function(column) {\n          return { value: column.id, label: column.name };\n        })\n      : null;\n    const handleBoardChange = event => {\n      this.props.addTrelloUserSelectedBoard(event.target.value);\n      this.props.fetchTrelloUserColumns(event.target.value);\n    };\n    const handleDailyGoalsChange = event => {\n      this.props.addTrelloUserDailyGoalsColumn(event.target.value);\n      this.props.fetchDailyGoalsCards(event.target.value);\n    };\n    const handleSprintColumnChange = event => {\n      this.props.addTrelloUserSprintColumn(event.target.value);\n      this.props.fetchSprintBacklogCards(event.target.value);\n    };\n    const refreshAction = () => {\n      this.props.trelloUserSelectedBoard &&\n        this.props.fetchTrelloUserColumns(this.props.trelloUserSelectedBoard);\n      this.props.trelloUserDailyGoalsColumn &&\n        this.props.fetchDailyGoalsCards(this.props.trelloUserDailyGoalsColumn);\n      this.props.trelloUserSprintColumn &&\n        this.props.fetchSprintBacklogCards(this.props.trelloUserSprintColumn);\n    };\n    const editTeamAction = () => {\n      this.props.toggleEditTeamPopin();\n    };\n    const openDevSelectionPopin = card => {\n      this.props.toggleDevSelectionPopin();\n      this.props.addDevSelectionCard(card);\n    };\n    const openCardDescriptionPopin = card => {\n      this.props.fetchCardChecklists(card.id);\n      this.props.toggleCardDescriptionPopin(card);\n    };\n    return (\n      <div style={this.props.style}>\n        {!window.Trello.authorized() && (\n          <BasicButton\n            style={styles.connectToTrelloButton}\n            label=\"Se connecter avec Trello\"\n            onClickAction={connectToTrello}\n          />\n        )}\n        {this.props.trelloUserBoards && this.props.trelloUserBoards.length > 0 && (\n          <div>\n            <ButtonsPanel\n              style={styles.buttonsPanel}\n              refreshAction={refreshAction}\n              isTeamEditable={this.props.trelloUserSelectedBoard.length}\n              editTeamAction={editTeamAction}\n            />\n            <BasicSelect\n              propStyle={styles.boardSelect}\n              value={this.props.trelloUserSelectedBoard}\n              handleChange={handleBoardChange}\n              label=\"Sélectionnez un board\"\n              options={boardSelectOptions}\n            />\n            {this.props.trelloUserSelectedBoard !== '' && (\n              <div>\n                <BasicSelect\n                  propStyle={styles.boardSelect}\n                  value={this.props.trelloUserSprintColumn}\n                  handleChange={handleSprintColumnChange}\n                  label=\"Sélectionnez la colonne Sprint Backlog\"\n                  options={dailyGoalsSelectOptions}\n                />\n                <BasicSelect\n                  propStyle={styles.boardSelect}\n                  value={this.props.trelloUserDailyGoalsColumn}\n                  handleChange={handleDailyGoalsChange}\n                  label=\"Sélectionnez la colonne Daily Goals\"\n                  options={dailyGoalsSelectOptions}\n                />\n              </div>\n            )}\n          </div>\n        )}\n        <div style={styles.cardsContainer}>\n          {this.props.trelloUserSprintBacklogCards.length > 0 &&\n            this.props.trelloUserSprintBacklogCards.map(card => (\n              <PlanCard\n                style={styles.planCard}\n                key={card.id}\n                card={card}\n                icons={[\n                  {\n                    name: 'arrow_right_alt',\n                    action: () => openDevSelectionPopin(card),\n                  },\n                ]}\n                cardAction={() => openCardDescriptionPopin(card)}\n              />\n            ))}\n        </div>\n      </div>\n    );\n  }\n}\n","export const constants = {\n  FETCH_TRELLO_USER: {\n    REQUEST: 'FETCH_TRELLO_USER_REQUEST',\n    SUCCESS: 'FETCH_TRELLO_USER_SUCCESS',\n    ERROR: 'FETCH_TRELLO_USER_ERROR',\n  },\n  FETCH_TRELLO_USER_BOARDS: {\n    REQUEST: 'FETCH_TRELLO_USER_BOARDS_REQUEST',\n    SUCCESS: 'FETCH_TRELLO_USER_BOARDS_SUCCESS',\n    ERROR: 'FETCH_TRELLO_USER_BOARDS_ERROR',\n  },\n  FETCH_TRELLO_USER_COLUMNS: {\n    REQUEST: 'FETCH_TRELLO_USER_COLUMNS_REQUEST',\n    SUCCESS: 'FETCH_TRELLO_USER_COLUMNS_SUCCESS',\n    ERROR: 'FETCH_TRELLO_USER_COLUMNS_ERROR',\n  },\n  FETCH_TRELLO_USER_DAILY_GOALS_CARDS: {\n    REQUEST: 'FETCH_TRELLO_USER_DAILY_GOALS_CARDS_REQUEST',\n    SUCCESS: 'FETCH_TRELLO_USER_DAILY_GOALS_CARDS_SUCCESS',\n    ERROR: 'FETCH_TRELLO_USER_DAILY_GOALS_CARDS_ERROR',\n  },\n  FETCH_TRELLO_USER_SPRINT_BACKLOG_CARDS: {\n    REQUEST: 'FETCH_TRELLO_USER_SPRINT_BACKLOG_CARDS_REQUEST',\n    SUCCESS: 'FETCH_TRELLO_USER_SPRINT_BACKLOG_CARDS_SUCCESS',\n    ERROR: 'FETCH_TRELLO_USER_SPRINT_BACKLOG_CARDS_ERROR',\n  },\n  FETCH_CARD_CHECKLISTS: {\n    REQUEST: 'FETCH_CARD_CHECKLISTS_REQUEST',\n    SUCCESS: 'FETCH_CARD_CHECKLISTS_SUCCESS',\n    ERROR: 'FETCH_CARD_CHECKLISTS_ERROR',\n  },\n  FETCH_TRELLO_USER_BOARD_MEMBERS: {\n    REQUEST: 'FETCH_TRELLO_USER_BOARD_MEMBERS_REQUEST',\n    SUCCESS: 'FETCH_TRELLO_USER_BOARD_MEMBERS_SUCCESS',\n    ERROR: 'FETCH_TRELLO_USER_BOARD_MEMBERS_ERROR',\n  },\n  TAG_DEVS_ON_CARD: {\n    REQUEST: 'TAG_DEVS_ON_CARD_REQUEST',\n    SUCCESS: 'TAG_DEVS_ON_CARD_SUCCESS',\n    ERROR: 'TAG_DEVS_ON_CARD_ERROR',\n  },\n  MOVE_CARD_TO_DAILY_GOALS: {\n    REQUEST: 'MOVE_CARD_TO_DAILY_GOALS_REQUEST',\n    SUCCESS: 'MOVE_CARD_TO_DAILY_GOALS_SUCCESS',\n    ERROR: 'MOVE_CARD_TO_DAILY_GOALS_ERROR',\n  },\n  ADD_TRELLO_USER_SELECTED_BOARD: 'ADD_TRELLO_USER_SELECTED_BOARD',\n  ADD_TRELLO_USER_DAILY_GOALS_COLUMN: 'ADD_TRELLO_USER_DAILY_GOALS_COLUMN',\n  ADD_TRELLO_USER_SPRINT_COLUMN: 'ADD_TRELLO_USER_SPRINT_COLUMN',\n  TOGGLE_TRELLO_TEAM_MEMBERSHIP: 'TOGGLE_TRELLO_TEAM_MEMBERSHIP',\n  TAG_DEV_ON_PLANNOR_CARD: 'TAG_DEV_ON_PLANNOR_CARD',\n  REMOVE_CARDS_FROM_SPRINT_BACKLOG: 'REMOVE_CARDS_FROM_SPRINT_BACKLOG',\n};\n\nexport function fetchTrelloUserRequest() {\n  return {\n    type: constants.FETCH_TRELLO_USER.REQUEST,\n  };\n}\n\nexport function fetchTrelloUserSuccess(user) {\n  return {\n    type: constants.FETCH_TRELLO_USER.SUCCESS,\n    payload: { user },\n  };\n}\n\nexport function fetchTrelloUserError(error) {\n  return {\n    type: constants.FETCH_TRELLO_USER.ERROR,\n    payload: { errorMessage: error.message },\n  };\n}\n\nexport function fetchTrelloUserBoardsRequest() {\n  return {\n    type: constants.FETCH_TRELLO_USER_BOARDS.REQUEST,\n  };\n}\n\nexport function fetchTrelloUserBoardsSuccess(boards) {\n  return {\n    type: constants.FETCH_TRELLO_USER_BOARDS.SUCCESS,\n    payload: { boards },\n  };\n}\n\nexport function fetchTrelloUserBoardsError(error) {\n  return {\n    type: constants.FETCH_TRELLO_USER_BOARDS.ERROR,\n    payload: { errorMessage: error.message },\n  };\n}\n\nexport function addTrelloUserSelectedBoard(board) {\n  return {\n    type: constants.ADD_TRELLO_USER_SELECTED_BOARD,\n    payload: { board },\n  };\n}\n\nexport function fetchTrelloUserColumnsRequest() {\n  return {\n    type: constants.FETCH_TRELLO_USER_COLUMNS.REQUEST,\n  };\n}\n\nexport function fetchTrelloUserColumnsSuccess(columns) {\n  return {\n    type: constants.FETCH_TRELLO_USER_COLUMNS.SUCCESS,\n    payload: { columns },\n  };\n}\n\nexport function fetchTrelloUserColumnsError(error) {\n  return {\n    type: constants.FETCH_TRELLO_USER_COLUMNS.ERROR,\n    payload: { errorMessage: error.message },\n  };\n}\n\nexport function addTrelloUserDailyGoalsColumn(column) {\n  return {\n    type: constants.ADD_TRELLO_USER_DAILY_GOALS_COLUMN,\n    payload: { column },\n  };\n}\n\nexport function addTrelloUserSprintColumn(column) {\n  return {\n    type: constants.ADD_TRELLO_USER_SPRINT_COLUMN,\n    payload: { column },\n  };\n}\n\nexport function fetchTrelloUserDailyGoalsCardsRequest() {\n  return {\n    type: constants.FETCH_TRELLO_USER_DAILY_GOALS_CARDS.REQUEST,\n  };\n}\n\nexport function fetchTrelloUserDailyGoalsCardsSuccess(cards) {\n  return {\n    type: constants.FETCH_TRELLO_USER_DAILY_GOALS_CARDS.SUCCESS,\n    payload: { cards },\n  };\n}\n\nexport function fetchTrelloUserDailyGoalsCardsError(error) {\n  return {\n    type: constants.FETCH_TRELLO_USER_DAILY_GOALS_CARDS.ERROR,\n    payload: { errorMessage: error.message },\n  };\n}\n\nexport function fetchTrelloUserSprintBacklogCardsRequest() {\n  return {\n    type: constants.FETCH_TRELLO_USER_SPRINT_BACKLOG_CARDS.REQUEST,\n  };\n}\n\nexport function fetchTrelloUserSprintBacklogCardsSuccess(cards) {\n  return {\n    type: constants.FETCH_TRELLO_USER_SPRINT_BACKLOG_CARDS.SUCCESS,\n    payload: { cards },\n  };\n}\n\nexport function fetchTrelloUserSprintBacklogCardsError(error) {\n  return {\n    type: constants.FETCH_TRELLO_USER_SPRINT_BACKLOG_CARDS.ERROR,\n    payload: { errorMessage: error.message },\n  };\n}\n\nexport const fetchTrelloUser = () => {\n  return dispatch => {\n    dispatch(fetchTrelloUserRequest());\n    window.Trello.members.get(\n      `me`,\n      { fields: 'username,fullName' },\n      data => dispatch(fetchTrelloUserSuccess(data)),\n      error => dispatch(fetchTrelloUserError(error)),\n    );\n  };\n};\n\nexport const fetchTrelloUserBoards = () => {\n  return dispatch => {\n    dispatch(fetchTrelloUserBoardsRequest());\n    window.Trello.members.get(\n      `me/boards`,\n      { fields: 'name,lists=open' },\n      data => dispatch(fetchTrelloUserBoardsSuccess(data)),\n      error => dispatch(fetchTrelloUserBoardsError(error)),\n    );\n  };\n};\n\nexport const fetchTrelloUserColumns = board => {\n  return dispatch => {\n    dispatch(fetchTrelloUserColumnsRequest());\n    window.Trello.get(\n      `boards/` + board + `/lists`,\n      { fields: 'name' },\n      data => dispatch(fetchTrelloUserColumnsSuccess(data)),\n      error => dispatch(fetchTrelloUserColumnsError(error)),\n    );\n  };\n};\n\nexport const fetchDailyGoalsCards = column => {\n  return dispatch => {\n    dispatch(fetchTrelloUserDailyGoalsCardsRequest());\n    window.Trello.get(\n      `lists/` + column + `/cards`,\n      { fields: 'idShort,name,idMembers' },\n      data => dispatch(fetchTrelloUserDailyGoalsCardsSuccess(data)),\n      error => dispatch(fetchTrelloUserDailyGoalsCardsError(error)),\n    );\n  };\n};\n\nexport const fetchSprintBacklogCards = column => {\n  return dispatch => {\n    dispatch(fetchTrelloUserSprintBacklogCardsRequest());\n    window.Trello.get(\n      `lists/` + column + `/cards`,\n      { fields: 'idShort,name,idMembers,labels,desc' },\n      data => dispatch(fetchTrelloUserSprintBacklogCardsSuccess(data)),\n      error => dispatch(fetchTrelloUserSprintBacklogCardsError(error)),\n    );\n  };\n};\n\nexport function fetchCardChecklistsRequest() {\n  return {\n    type: constants.FETCH_CARD_CHECKLISTS.REQUEST,\n  };\n}\n\nexport function fetchCardChecklistsSuccess(card, checklists) {\n  return {\n    type: constants.FETCH_CARD_CHECKLISTS.SUCCESS,\n    payload: { card, checklists },\n  };\n}\n\nexport function ffetchCardChecklistsError(error) {\n  return {\n    type: constants.FETCH_CARD_CHECKLISTS.ERROR,\n    payload: { errorMessage: error.message },\n  };\n}\n\nexport const fetchCardChecklists = card => {\n  return dispatch => {\n    dispatch(fetchCardChecklistsRequest());\n    window.Trello.get(\n      `cards/` + card + `/checklists`,\n      { fields: 'checkItems,name' },\n      data => dispatch(fetchCardChecklistsSuccess(card, data)),\n      error => dispatch(ffetchCardChecklistsError(error)),\n    );\n  };\n};\n\nexport function fetchTrelloUserBoardMembersRequest() {\n  return {\n    type: constants.FETCH_TRELLO_USER_BOARD_MEMBERS.REQUEST,\n  };\n}\n\nexport function fetchTrelloUserBoardMembersSuccess(boardOrigin, members) {\n  return {\n    type: constants.FETCH_TRELLO_USER_BOARD_MEMBERS.SUCCESS,\n    payload: { boardOrigin, members },\n  };\n}\n\nexport function fetchTrelloUserBoardMembersError(error) {\n  return {\n    type: constants.FETCH_TRELLO_USER_BOARD_MEMBERS.ERROR,\n    payload: { errorMessage: error.message },\n  };\n}\n\nexport const fetchTrelloUserBoardMembers = board => {\n  return dispatch => {\n    dispatch(fetchTrelloUserBoardMembersRequest());\n    window.Trello.get(\n      `boards/` + board + `/members`,\n      { fields: 'avatarHash,fullName,initials' },\n      data => dispatch(fetchTrelloUserBoardMembersSuccess(board, data)),\n      error => dispatch(fetchTrelloUserBoardMembersError(error)),\n    );\n  };\n};\n\nexport function toggleTrelloUserTeamMembership(memberId) {\n  return {\n    type: constants.TOGGLE_TRELLO_TEAM_MEMBERSHIP,\n    payload: { memberId },\n  };\n}\n\nexport function tagDevsOnCardRequest() {\n  return {\n    type: constants.TAG_DEVS_ON_CARD.REQUEST,\n  };\n}\n\nexport function tagDevsOnCardSuccess() {\n  return {\n    type: constants.TAG_DEVS_ON_CARD.SUCCESS,\n  };\n}\n\nexport function tagDevsOnCardError(error) {\n  return {\n    type: constants.TAG_DEVS_ON_CARD.ERROR,\n    payload: { errorMessage: error.message },\n  };\n}\n\nexport function tagDevOnPlannorCard(devId, cardId) {\n  return {\n    type: constants.TAG_DEV_ON_PLANNOR_CARD,\n    payload: { devId, cardId },\n  };\n}\n\nexport function tagDevsOnCard(card, membersId) {\n  return dispatch => {\n    dispatch(tagDevsOnCardRequest());\n    membersId.forEach(memberId => {\n      if (window.Trello.post(`cards/` + card.id + '/idMembers', { value: memberId })) {\n        dispatch(tagDevOnPlannorCard(memberId, card.id));\n      }\n    });\n  };\n}\n\nexport function moveCardToDailyGoalsRequest() {\n  return {\n    type: constants.MOVE_CARD_TO_DAILY_GOALS.REQUEST,\n  };\n}\n\nexport function moveCardToDailyGoals(card, dailyGoalsColumnId) {\n  return dispatch => {\n    dispatch(moveCardToDailyGoalsRequest());\n    window.Trello.put(`cards/` + card.id + '/idList', { value: dailyGoalsColumnId });\n  };\n}\n\nexport function removeCardFromSprintBacklog(cardId) {\n  return {\n    type: constants.REMOVE_CARDS_FROM_SPRINT_BACKLOG,\n    payload: { cardId },\n  };\n}\n\nexport default {\n  fetchTrelloUserRequest,\n  fetchTrelloUserSuccess,\n  fetchTrelloUserError,\n};\n","export const getTrelloUserFullName = state => state.trelloUserState.user.fullName;\nexport const getTrelloUserBoards = state => state.trelloUserState.user.boards;\nexport const getTrelloUserSelectedBoard = state => state.trelloUserState.user.selectedBoard;\nexport const getTrelloUserColumns = state => state.trelloUserState.user.columns;\nexport const getTrelloUserDailyGoalsColumn = state =>\n  state.trelloUserState.user.dailyGoalsColumn.id;\nexport const getTrelloUserDailyGoalsCards = state =>\n  state.trelloUserState.user.dailyGoalsColumn.cards;\nexport const getTrelloUserSprintColumn = state => state.trelloUserState.user.sprintColumn.id;\nexport const getTrelloUserSprintBacklogCards = state =>\n  state.trelloUserState.user.sprintColumn.cards;\nexport const getCardChecklists = (state, cardId) =>\n  state.trelloUserState.user.sprintColumn.cards.filter(card => {\n    if (card.id === cardId) {\n      return card.checklists;\n    }\n  });\nexport const getTrelloUserBoardMembers = state => state.trelloUserState.user.boardMembers;\nexport const getTrelloUserBoardMembersOrigin = state =>\n  state.trelloUserState.user.boardMembersOrigin;\nexport const getTrelloUserDevTeam = state => state.trelloUserState.project.devTeam;\nexport const getCardsOfDev = (state, devId) =>\n  state.trelloUserState.user.sprintColumn.cards.filter(card => card.devs.includes(devId));\n","import { constants } from './actions';\n\nexport const initialState = {\n  user: {\n    fullName: null,\n    username: null,\n    boards: [],\n    selectedBoard: '',\n    columns: [],\n    dailyGoalsColumn: {\n      id: '',\n      cards: [],\n    },\n    sprintColumn: {\n      id: '',\n      cards: [],\n    },\n    boardMembers: [],\n  },\n  project: {\n    devTeam: [],\n  },\n  error: null,\n  isLoading: false,\n};\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case constants.FETCH_TRELLO_USER.REQUEST:\n      return {\n        ...state,\n        isLoading: true,\n      };\n    case constants.FETCH_TRELLO_USER.SUCCESS:\n      return {\n        ...state,\n        user: { ...state.user, ...action.payload.user },\n        isLoading: false,\n      };\n    case constants.FETCH_TRELLO_USER.ERROR:\n      return {\n        ...state,\n        error: action.payload,\n        isLoading: false,\n      };\n    case constants.FETCH_TRELLO_USER_BOARDS.REQUEST:\n      return {\n        ...state,\n        isLoading: true,\n      };\n    case constants.FETCH_TRELLO_USER_BOARDS.SUCCESS:\n      return {\n        ...state,\n        user: { ...state.user, boards: action.payload.boards },\n        isLoading: false,\n      };\n    case constants.FETCH_TRELLO_USER_BOARDS.ERROR:\n      return {\n        ...state,\n        error: action.payload,\n        isLoading: false,\n      };\n    case constants.ADD_TRELLO_USER_SELECTED_BOARD:\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          selectedBoard: action.payload.board,\n        },\n      };\n    case constants.FETCH_TRELLO_USER_COLUMNS.SUCCESS:\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          columns: action.payload.columns,\n        },\n      };\n    case constants.ADD_TRELLO_USER_DAILY_GOALS_COLUMN:\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          dailyGoalsColumn: { ...state.user.dailyGoalsColumn, id: action.payload.column },\n        },\n      };\n    case constants.ADD_TRELLO_USER_SPRINT_COLUMN:\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          sprintColumn: { ...state.user.sprintColumn, id: action.payload.column },\n        },\n      };\n    case constants.FETCH_TRELLO_USER_DAILY_GOALS_CARDS.SUCCESS:\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          dailyGoalsColumn: {\n            ...state.user.dailyGoalsColumn,\n            cards: action.payload.cards,\n          },\n        },\n      };\n    case constants.FETCH_TRELLO_USER_SPRINT_BACKLOG_CARDS.SUCCESS:\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          sprintColumn: {\n            ...state.user.sprintColumn,\n            cards: action.payload.cards.map(card => {\n              return {\n                ...card,\n                devs: [],\n                startTime: { hour: 10, minute: 0 },\n                endTime: { hour: 12, minute: 30 },\n              };\n            }),\n          },\n        },\n      };\n    case constants.FETCH_CARD_CHECKLISTS.SUCCESS:\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          sprintColumn: {\n            ...state.user.sprintColumn,\n            cards: state.user.sprintColumn.cards.map(card => {\n              if (card.id === action.payload.card) {\n                return {\n                  ...card,\n                  checklists: action.payload.checklists,\n                };\n              }\n              return card;\n            }),\n          },\n        },\n      };\n    case constants.FETCH_TRELLO_USER_BOARD_MEMBERS.SUCCESS:\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          boardMembers: action.payload.members,\n          boardMembersOrigin: action.payload.boardOrigin,\n        },\n      };\n    case constants.TOGGLE_TRELLO_TEAM_MEMBERSHIP:\n      const memberIndex = state.project.devTeam\n        .map(function(member) {\n          return member.id;\n        })\n        .indexOf(action.payload.memberId);\n      return {\n        ...state,\n        project: {\n          ...state.project,\n          devTeam:\n            memberIndex !== -1\n              ? state.project.devTeam.filter(member => member.id !== action.payload.memberId)\n              : state.project.devTeam.concat({\n                  ...state.user.boardMembers.filter(\n                    member => member.id === action.payload.memberId,\n                  )[0],\n                  dailyCards: [],\n                }),\n        },\n        user: {\n          ...state.user,\n          boardMembers: state.user.boardMembers.map(member => {\n            if (member.id === action.payload.memberId) {\n              return { ...member, isInTeam: !member.isInTeam };\n            }\n            return member;\n          }),\n        },\n      };\n    case constants.TAG_DEV_ON_PLANNOR_CARD:\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          sprintColumn: {\n            ...state.user.sprintColumn,\n            cards: state.user.sprintColumn.cards.map(card =>\n              card.id === action.payload.cardId ? { ...card, devs: [action.payload.devId] } : card,\n            ),\n          },\n        },\n      };\n    case constants.REMOVE_CARDS_FROM_SPRINT_BACKLOG:\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          sprintColumn: {\n            ...state.user.sprintColumn,\n            cards: state.user.sprintColumn.cards.filter(card => card.id !== action.payload.cardId),\n          },\n        },\n      };\n    default:\n      return state;\n  }\n}\n","export const constants = {\n  TOGGLE_EDIT_TEAM_POPIN: 'TOGGLE_EDIT_TEAM_POPIN',\n  TOGGLE_DEV_SELECTION_POPIN: 'TOGGLE_DEV_SELECTION_POPIN',\n  TOGGLE_CARD_DESCRIPTION_POPIN: 'TOGGLE_CARD_DESCRIPTION_POPIN',\n  ADD_DEV_SELECTION_CARD: 'ADD_DEV_SELECTION_CARD',\n  TOGGLE_MEMBER_SELECTION: 'TOGGLE_MEMBER_SELECTION',\n};\n\nexport function toggleEditTeamPopin() {\n  return {\n    type: constants.TOGGLE_EDIT_TEAM_POPIN,\n  };\n}\n\nexport function toggleDevSelectionPopin() {\n  return {\n    type: constants.TOGGLE_DEV_SELECTION_POPIN,\n  };\n}\n\nexport function toggleCardDescriptionPopin(card) {\n  return {\n    type: constants.TOGGLE_CARD_DESCRIPTION_POPIN,\n    payload: { card },\n  };\n}\n\nexport function addDevSelectionCard(card) {\n  return {\n    type: constants.ADD_DEV_SELECTION_CARD,\n    payload: { card },\n  };\n}\n\nexport function toggleMemberSelection(memberId) {\n  return {\n    type: constants.TOGGLE_MEMBER_SELECTION,\n    payload: { memberId },\n  };\n}\n\nexport default {\n  toggleEditTeamPopin,\n  toggleDevSelectionPopin,\n  toggleCardDescriptionPopin,\n  addDevSelectionCard,\n};\n","import Menu from './Menu';\nimport {\n  fetchTrelloUserBoards,\n  fetchTrelloUser,\n  fetchTrelloUserColumns,\n  fetchDailyGoalsCards,\n  addTrelloUserSelectedBoard,\n  addTrelloUserDailyGoalsColumn,\n  addTrelloUserSprintColumn,\n  fetchSprintBacklogCards,\n  fetchCardChecklists,\n} from 'redux/TrelloUser/actions';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport {\n  getTrelloUserFullName,\n  getTrelloUserBoards,\n  getTrelloUserSelectedBoard,\n  getTrelloUserColumns,\n  getTrelloUserDailyGoalsColumn,\n  getTrelloUserDailyGoalsCards,\n  getTrelloUserSprintColumn,\n  getTrelloUserSprintBacklogCards,\n} from 'redux/TrelloUser';\nimport {\n  toggleEditTeamPopin,\n  toggleDevSelectionPopin,\n  toggleCardDescriptionPopin,\n  addDevSelectionCard,\n} from 'redux/App/actions';\n\nconst mapStateToProps = state => ({\n  trelloUserFullName: getTrelloUserFullName(state),\n  trelloUserBoards: getTrelloUserBoards(state),\n  trelloUserSelectedBoard: getTrelloUserSelectedBoard(state),\n  trelloUserColumns: getTrelloUserColumns(state),\n  trelloUserDailyGoalsColumn: getTrelloUserDailyGoalsColumn(state),\n  trelloUserDailyGoalsCards: getTrelloUserDailyGoalsCards(state),\n  trelloUserSprintColumn: getTrelloUserSprintColumn(state),\n  trelloUserSprintBacklogCards: getTrelloUserSprintBacklogCards(state),\n});\n\nconst mapDispatchToProps = {\n  fetchTrelloUser,\n  fetchTrelloUserBoards,\n  fetchTrelloUserColumns,\n  fetchDailyGoalsCards,\n  addTrelloUserSelectedBoard,\n  addTrelloUserDailyGoalsColumn,\n  toggleEditTeamPopin,\n  toggleDevSelectionPopin,\n  toggleCardDescriptionPopin,\n  addDevSelectionCard,\n  addTrelloUserSprintColumn,\n  fetchSprintBacklogCards,\n  fetchCardChecklists,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(withRouter(Menu));\n","const styles = {\n  dashboard: {\n    display: 'flex',\n    fontFamily: 'Roboto',\n    height: '100vh',\n  },\n  menu: {\n    display: 'flex',\n    flexDirection: 'column',\n    padding: 15,\n    fontFamily: 'Roboto',\n    width: 300,\n    boxSizing: 'border-box',\n    MozBoxShadow: '2px 0 10px #cccccc',\n    WebkitBoxShadow: '2px 0 10px #cccccc',\n    boxShadow: '2px 0 10px #cccccc',\n  },\n};\n\nexport default styles;\n","// @flow\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nexport default class PlannorPopin extends React.Component {\n  render() {\n    return (\n      <Dialog\n        open={this.props.isOpen}\n        onClose={this.props.handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{this.props.title}</DialogTitle>\n        <DialogContent>{this.props.content}</DialogContent>\n        <DialogActions>\n          {this.props.handleClose && (\n            <Button onClick={this.props.handleClose} color=\"primary\">\n              {this.props.closeLabel}\n            </Button>\n          )}\n          {this.props.handleSubmit && (\n            <Button onClick={this.props.handleSubmit} color=\"primary\" autoFocus>\n              {this.props.submitLabel}\n            </Button>\n          )}\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n","const styles = {\n  editTeamPopin: {\n    maxWidth: 600,\n  },\n  avatarContainer: {\n    verticalAlign: 'top',\n    display: 'inline-flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    margin: 5,\n    minWidth: 50,\n    minHeight: 50,\n    cursor: 'pointer',\n    borderRadius: '50%',\n    boxSizing: 'border-box',\n  },\n  avatarInTeam: {\n    border: '4px solid orange',\n    margin: 1,\n  },\n  avatar: {\n    borderRadius: '50%',\n    overflow: 'hidden',\n  },\n  undefinedAvatar: {\n    width: 50,\n    height: 50,\n    display: 'inline-flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 50,\n    background: '#dddddd',\n    textTransform: 'uppercase',\n  },\n  editTeamPopinFooter: {\n    textAlign: 'right',\n  },\n};\n\nexport default styles;\n","// @flow\nimport React from 'react';\nimport PlannorPopin from '../PlannorPopin';\nimport styles from './EditTeamPopin.style';\n\nexport default class EditTeamPopin extends React.Component {\n  componentDidMount() {\n    if (\n      this.props.trelloUserBoardMembers.length === 0 ||\n      this.props.trelloUserBoardMembersOrigin !== this.props.trelloUserSelectedBoard\n    ) {\n      this.props.fetchTrelloUserBoardMembers(this.props.trelloUserSelectedBoard);\n    }\n  }\n  render() {\n    const members = this.props.trelloUserBoardMembers;\n    const toggleMembership = (memberId, event) =>\n      this.props.toggleTrelloUserTeamMembership(memberId);\n    const content = (\n      <div>\n        <div>\n          {members.map(member => (\n            <div\n              onClick={toggleMembership.bind(this, member.id)}\n              key={member.id}\n              style={\n                member.isInTeam\n                  ? { ...styles.avatarContainer, ...styles.avatarInTeam }\n                  : styles.avatarContainer\n              }\n              title={member.fullName}\n            >\n              {member.avatarHash ? (\n                <img\n                  style={styles.avatar}\n                  alt={member.fullName}\n                  src={'https://trello-avatars.s3.amazonaws.com/' + member.avatarHash + '/50.png'}\n                />\n              ) : (\n                <div style={styles.undefinedAvatar}>{member.initials}</div>\n              )}\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n    return (\n      <PlannorPopin\n        isOpen={this.props.isEditTeamPopinOpen}\n        handleClose={this.props.toggleEditTeamPopin}\n        closeLabel=\"Valider\"\n        title=\"Ajouter des devs à l'équipe\"\n        content={content}\n      />\n    );\n  }\n}\n","export const isEditTeamPopinOpen = state => state.appState.isEditTeamPopinOpen;\nexport const isDevSelectionPopinOpen = state => state.appState.devSelectionPopin.isOpen;\nexport const getDevSelectionCardId = state => state.appState.devSelectionPopin.selectedCard.id;\nexport const getDevSelectionCard = state =>\n  state.trelloUserState.user.sprintColumn.cards.filter(\n    card => card.id === state.appState.devSelectionPopin.selectedCard.id,\n  )[0];\nexport const isCardDescriptionPopinOpen = state => state.appState.cardDescriptionPopin.isOpen;\nexport const getCardDescriptionPopinCard = state => state.appState.cardDescriptionPopin.card;\nexport const getSelectedMembers = state => state.appState.devSelectionPopin.selectedMembers;\n","import { constants } from './actions';\n\nexport const initialState = {\n  isEditTeamPopinOpen: false,\n  devSelectionPopin: {\n    isOpen: false,\n    selectedCard: {\n      id: null,\n    },\n    selectedMembers: [],\n  },\n  cardDescriptionPopin: {\n    isOpen: false,\n    card: null,\n  },\n};\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case constants.TOGGLE_EDIT_TEAM_POPIN:\n      return {\n        ...state,\n        isEditTeamPopinOpen: !state.isEditTeamPopinOpen,\n      };\n    case constants.TOGGLE_DEV_SELECTION_POPIN:\n      return {\n        ...state,\n        devSelectionPopin: {\n          ...state.devSelectionPopin,\n          isOpen: !state.devSelectionPopin.isOpen,\n        },\n      };\n    case constants.TOGGLE_CARD_DESCRIPTION_POPIN:\n      return {\n        ...state,\n        cardDescriptionPopin: {\n          ...state.cardDescriptionPopin,\n          isOpen: !state.cardDescriptionPopin.isOpen,\n          card: action.payload.card,\n        },\n      };\n    case constants.ADD_DEV_SELECTION_CARD:\n      return {\n        ...state,\n        devSelectionPopin: {\n          ...state.devSelectionPopin,\n          selectedCard: {\n            ...action.payload.card,\n            startTime: { hour: 10, minute: 0 },\n            endTime: { hour: 12, minute: 30 },\n          },\n        },\n      };\n    case constants.TOGGLE_MEMBER_SELECTION:\n      return {\n        ...state,\n        devSelectionPopin: {\n          ...state.devSelectionPopin,\n          selectedMembers: state.devSelectionPopin.selectedMembers.includes(action.payload.memberId)\n            ? state.devSelectionPopin.selectedMembers.filter(\n                memberId => memberId !== action.payload.memberId,\n              )\n            : [...state.devSelectionPopin.selectedMembers, action.payload.memberId],\n        },\n      };\n    default:\n      return state;\n  }\n}\n","import EditTeamPopin from './EditTeamPopin';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport {\n  getTrelloUserBoardMembers,\n  getTrelloUserBoardMembersOrigin,\n  getTrelloUserSelectedBoard,\n} from 'redux/TrelloUser';\nimport {\n  fetchTrelloUserBoardMembers,\n  toggleTrelloUserTeamMembership,\n} from 'redux/TrelloUser/actions';\nimport { toggleEditTeamPopin } from 'redux/App/actions';\nimport { isEditTeamPopinOpen } from 'redux/App';\n\nconst mapStateToProps = state => ({\n  trelloUserSelectedBoard: getTrelloUserSelectedBoard(state),\n  trelloUserBoardMembers: getTrelloUserBoardMembers(state),\n  trelloUserBoardMembersOrigin: getTrelloUserBoardMembersOrigin(state),\n  isEditTeamPopinOpen: isEditTeamPopinOpen(state),\n});\n\nconst mapDispatchToProps = {\n  fetchTrelloUserBoardMembers,\n  toggleEditTeamPopin,\n  toggleTrelloUserTeamMembership,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(withRouter(EditTeamPopin));\n","const styles = {\n  editTeamPopin: {\n    maxWidth: 600,\n  },\n  avatarContainer: {\n    verticalAlign: 'top',\n    display: 'inline-flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    margin: 5,\n    minWidth: 50,\n    minHeight: 50,\n    cursor: 'pointer',\n    borderRadius: '50%',\n    boxSizing: 'border-box',\n  },\n  avatar: {\n    borderRadius: '50%',\n    overflow: 'hidden',\n  },\n  avatarInTeam: {\n    border: '4px solid orange',\n    margin: 1,\n  },\n  undefinedAvatar: {\n    width: 50,\n    height: 50,\n    display: 'inline-flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 50,\n    background: '#dddddd',\n    textTransform: 'uppercase',\n  },\n  editTeamPopinFooter: {\n    textAlign: 'right',\n  },\n  warningMessage: {\n    color: '#d88c00',\n    marginBottom: 10,\n  },\n};\n\nexport default styles;\n","// @flow\nimport React from 'react';\nimport PlannorPopin from '../PlannorPopin';\nimport styles from './DevSelectionPopin.style';\nimport TextField from '@material-ui/core/TextField';\nimport { splitTimeFromString, stringTimeFromObject } from '../../helpers/TimeHelpers/timeHelpers';\n\nexport default class DevSelectionPopin extends React.Component {\n  componentDidMount() {\n    if (\n      this.props.trelloUserBoardMembers.length === 0 ||\n      this.props.trelloUserBoardMembersOrigin !== this.props.trelloUserSelectedBoard\n    ) {\n      this.props.fetchTrelloUserBoardMembers(this.props.trelloUserSelectedBoard);\n    }\n  }\n  render() {\n    const members = this.props.devTeamMembers;\n\n    const validateAction = () => {\n      this.props.toggleDevSelectionPopin();\n      if (this.props.selectedMembers.length > 0) {\n        this.props.tagDevsOnCard(this.props.selectedCard, this.props.selectedMembers);\n        this.props.moveCardToDailyGoals(this.props.selectedCard, this.props.dailyGoalsColumn);\n      }\n    };\n    const onChangeStartTime = event => {\n      this.props.selectedCard.startTime = splitTimeFromString(event.target.value);\n    };\n    const onChangeEndTime = event => {\n      this.props.selectedCard.endTime = splitTimeFromString(event.target.value);\n    };\n    const startTimeString = stringTimeFromObject(this.props.selectedCard.startTime);\n    const endTimeString = stringTimeFromObject(this.props.selectedCard.endTime);\n\n    const content = (\n      <div>\n        <div>\n          {this.props.dailyGoalsColumn && (\n            <div>\n              {members.map(member => (\n                <div\n                  onClick={this.props.toggleMemberSelection.bind(this, member.id)}\n                  key={member.id}\n                  style={\n                    this.props.selectedMembers.includes(member.id)\n                      ? { ...styles.avatarContainer, ...styles.avatarInTeam }\n                      : styles.avatarContainer\n                  }\n                  title={member.fullName}\n                >\n                  {member.avatarHash ? (\n                    <img\n                      style={styles.avatar}\n                      alt={member.fullName}\n                      src={\n                        'https://trello-avatars.s3.amazonaws.com/' + member.avatarHash + '/50.png'\n                      }\n                    />\n                  ) : (\n                    <div style={styles.undefinedAvatar}>{member.initials}</div>\n                  )}\n                </div>\n              ))}\n              <br />\n              <TextField\n                id=\"start\"\n                label=\"Début\"\n                type=\"time\"\n                defaultValue={startTimeString}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                inputProps={{\n                  step: 900, // 15 min\n                }}\n                onChange={onChangeStartTime}\n              />\n              &nbsp;\n              <TextField\n                id=\"end\"\n                label=\"Fin\"\n                type=\"time\"\n                defaultValue={endTimeString}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                inputProps={{\n                  step: 900, // 15 min\n                }}\n                onChange={onChangeEndTime}\n              />\n            </div>\n          )}\n          {members.length === 0 && (\n            <div style={styles.warningMessage}>\n              Vous devez d'abord ajouter des membres à l'équipe\n            </div>\n          )}\n          {!this.props.dailyGoalsColumn && (\n            <div style={styles.warningMessage}>\n              Vous devez d'abord sélectionner une colonne Daily Goals\n            </div>\n          )}\n        </div>\n      </div>\n    );\n    return (\n      <PlannorPopin\n        isOpen={this.props.isDevSelectionPopinOpen}\n        handleClose={this.props.toggleDevSelectionPopin}\n        closeLabel=\"Annuler\"\n        handleSubmit={validateAction}\n        submitLabel=\"Valider\"\n        title=\"Sélection du dev\"\n        content={content}\n      />\n    );\n  }\n}\n","import DevSelectionPopin from './DevSelectionPopin';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport {\n  getTrelloUserBoardMembers,\n  getTrelloUserBoardMembersOrigin,\n  getTrelloUserSelectedBoard,\n  getTrelloUserDevTeam,\n  getTrelloUserDailyGoalsColumn,\n} from 'redux/TrelloUser';\nimport {\n  fetchTrelloUserBoardMembers,\n  toggleTrelloUserTeamMembership,\n  tagDevsOnCard,\n  moveCardToDailyGoals,\n  removeCardFromSprintBacklog,\n} from 'redux/TrelloUser/actions';\nimport { toggleDevSelectionPopin, toggleMemberSelection } from 'redux/App/actions';\nimport { getDevSelectionCard, getSelectedMembers, isDevSelectionPopinOpen } from 'redux/App';\n\nconst mapStateToProps = state => ({\n  selectedCard: getDevSelectionCard(state),\n  devTeamMembers: getTrelloUserDevTeam(state),\n  dailyGoalsColumn: getTrelloUserDailyGoalsColumn(state),\n  isDevSelectionPopinOpen: isDevSelectionPopinOpen(state),\n  trelloUserSelectedBoard: getTrelloUserSelectedBoard(state),\n  trelloUserBoardMembers: getTrelloUserBoardMembers(state),\n  trelloUserBoardMembersOrigin: getTrelloUserBoardMembersOrigin(state),\n  selectedMembers: getSelectedMembers(state),\n});\n\nconst mapDispatchToProps = {\n  fetchTrelloUserBoardMembers,\n  toggleDevSelectionPopin,\n  toggleTrelloUserTeamMembership,\n  tagDevsOnCard,\n  moveCardToDailyGoals,\n  toggleMemberSelection,\n  removeCardFromSprintBacklog,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(withRouter(DevSelectionPopin));\n","// @flow\nimport React from 'react';\nimport PlannorPopin from '../PlannorPopin';\n\nexport default class CardDescriptionPopin extends React.Component {\n  render() {\n    const content = (\n      <div>\n        {this.props.card.desc && <div>{this.props.card.desc}</div>}\n        <div>\n          {this.props.card.checklists &&\n            this.props.card.checklists.length > 0 &&\n            this.props.card.checklists.map(checklist => (\n              <div>\n                {checklist.name}\n                <ul key={checklist.id}>\n                  {checklist.checkItems.map(checkItem => (\n                    <li key={checkItem.id}>{checkItem.name}</li>\n                  ))}\n                </ul>\n              </div>\n            ))}\n        </div>\n      </div>\n    );\n    console.log(this.props.card);\n    return (\n      <PlannorPopin\n        isOpen={this.props.isCardDescriptionPopinOpen}\n        handleClose={this.props.toggleCardDescriptionPopin}\n        closeLabel=\"Valider\"\n        title={this.props.card.name}\n        content={content}\n      />\n    );\n  }\n}\n","import CardDescriptionPopin from './CardDescriptionPopin';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { toggleCardDescriptionPopin } from 'redux/App/actions';\nimport { fetchCardChecklists } from 'redux/TrelloUser/actions';\nimport { getCardDescriptionPopinCard, isCardDescriptionPopinOpen } from 'redux/App/selectors';\n\nconst mapStateToProps = state => ({\n  card: getCardDescriptionPopinCard(state),\n  isCardDescriptionPopinOpen: isCardDescriptionPopinOpen(state),\n});\n\nconst mapDispatchToProps = {\n  toggleCardDescriptionPopin,\n  fetchCardChecklists,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(withRouter(CardDescriptionPopin));\n","const styles = {\n  container: {\n    display: 'flex',\n    overflow: 'hidden',\n    flexDirection: 'column',\n    margin: '0px 5px 10px 5px',\n    borderRadius: 5,\n    width: '20%',\n  },\n  columnHeader: {\n    flex: '0 1 auto',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  grid: {\n    position: 'relative',\n    flex: '1 1 auto',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  gridItem: {\n    display: 'inline-grid',\n    width: '100%',\n  },\n};\n\nexport default styles;\n","// @flow\nimport React from 'react';\nimport styles from './PlanColumn.style.js';\nimport PlanCard from '../PlanCard';\n\nexport default class PlanColumn extends React.Component {\n  render() {\n    const editDevSelection = () => {\n      this.props.toggleDevSelectionPopin();\n    };\n\n    const cards = this.props.getCardsOfDev(this.props.member.id);\n\n    return (\n      <div style={styles.container}>\n        <div style={{ ...this.props.style, ...styles.grid }}>\n          {cards.map(card => {\n            return (\n              <PlanCard\n                key={card.id}\n                card={card}\n                devName={this.props.member.fullName}\n                dayStartTime={this.props.dayStartTime}\n                dayEndTime={this.props.dayEndTime}\n                startTime={card.startTime}\n                endTime={card.endTime}\n                content={card.name}\n                icons={[{ name: 'edit', action: editDevSelection }]}\n              />\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n","import PlanColumn from './PlanColumn';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { toggleDevSelectionPopin } from 'redux/App/actions';\nimport { getCardsOfDev } from 'redux/TrelloUser/selectors';\n\nconst mapStateToProps = state => ({\n  getCardsOfDev: devId => getCardsOfDev(state, devId),\n});\n\nconst mapDispatchToProps = {\n  toggleDevSelectionPopin,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(withRouter(PlanColumn));\n","// @flow\nimport React from 'react';\nimport './ColumnHeader.scss'\n\nexport default class ColumnHeader extends React.Component {\n  render() {\n    return (\n      <div className=\"column-header__container\">\n        <div className=\"column-header__avatar\" title={this.props.member.fullName}>\n          {this.props.member.avatarHash ? (\n            <img\n              alt={this.props.member.fullName}\n              src={\n                'https://trello-avatars.s3.amazonaws.com/' +\n                this.props.member.avatarHash +\n                '/50.png'\n              }\n            />\n          ) : (\n            <div className=\"column-header__avatar--undefined\">\n              {this.props.member.initials}\n            </div>\n          )}\n        </div>\n        <div className=\"column-header__title\">\n          {this.props.member.fullName}\n        </div>\n      </div>\n    );\n  }\n}\n","const styles = {\n  hourLine: {\n    position: 'absolute',\n    top: 0,\n    color: '#cccccc',\n    borderTop: 'dashed #cccccc 1px',\n    width: '100%',\n  },\n  hourLabel: {\n    marginTop: 5,\n    marginLeft: 15,\n  },\n};\n\nexport default styles;\n","// @flow\nimport React from 'react';\nimport { timeInMinutes, durationInMinutes } from '../../helpers';\nimport styles from './HourLine.style';\n\nexport default class HourLine extends React.Component {\n  render() {\n    const topProp =\n      (100 * (timeInMinutes(this.props.time) - timeInMinutes(this.props.dayStartTime))) /\n        (durationInMinutes(this.props.dayStartTime, this.props.dayEndTime) + 10) +\n      '%';\n    return (\n      <div style={{ ...styles.hourLine, top: topProp }}>\n        <div style={styles.hourLabel}>\n          {this.props.time.hour}h{this.props.time.minute !== 0 && this.props.time.minute}\n        </div>\n      </div>\n    );\n  }\n}\n","const styles = {\n  hourLine: {\n    position: 'absolute',\n    top: 0,\n    borderTop: 'red solid 1px',\n    width: '100%',\n    zIndex: 2,\n  },\n};\n\nexport default styles;\n","// @flow\nimport React from 'react';\nimport { timeInMinutes, durationInMinutes, getCurrentTime } from '../../helpers';\nimport styles from './CurrentHourLine.style';\n\nexport default class CurrentHourLine extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentTime: getCurrentTime(),\n    };\n  }\n  componentDidMount() {\n    var interval = setInterval(this.updateCurrentTime, 1000);\n    this.setState({ interval: interval });\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.state.interval);\n  }\n\n  updateCurrentTime = () => {\n    this.setState({\n      currentTime: getCurrentTime(),\n    });\n  };\n\n  render() {\n    const topProp =\n      (100 * (timeInMinutes(this.state.currentTime) - timeInMinutes(this.props.dayStartTime))) /\n        (durationInMinutes(this.props.dayStartTime, this.props.dayEndTime) + 10) +\n      '%';\n    return <div style={{ ...styles.hourLine, top: topProp }} />;\n  }\n}\n","// @flow\nimport React from 'react';\nimport PlanColumn from '../PlanColumn';\nimport ColumnHeader from '../ColumnHeader';\nimport HourLine from '../HourLine';\nimport CurrentHourLine from '../CurrentHourLine';\nimport './ProdPlan.scss'\n\nexport default class ProdPlan extends React.Component {\n  render() {\n    const dayStartTime = { hour: 9, minute: 30 };\n    const dayEndTime = { hour: 19, minute: 0 };\n    const hoursOfTheDay = [\n      { id: 1, hour: 9, minute: 30 },\n      { id: 2, hour: 10, minute: 30 },\n      { id: 3, hour: 11, minute: 30 },\n      { id: 4, hour: 12, minute: 30 },\n      { id: 5, hour: 14, minute: 0 },\n      { id: 6, hour: 15, minute: 0 },\n      { id: 7, hour: 16, minute: 0 },\n      { id: 8, hour: 17, minute: 0 },\n      { id: 9, hour: 18, minute: 0 },\n    ];\n    return (\n      <div className=\"prod-plan\">\n        <div className=\"prod-plan__header__container\">\n          <div className=\"prod-plan__header__columns-container\">\n            {this.props.devTeamMembers.map(member => (\n              <ColumnHeader key={member.id} member={member} />\n            ))}\n          </div>\n        </div>\n        <div className=\"prod-plan__plan__container\">\n          <CurrentHourLine dayStartTime={dayStartTime} dayEndTime={dayEndTime} />\n          {hoursOfTheDay.map(time => (\n            <HourLine\n              key={time.id}\n              time={time}\n              dayStartTime={dayStartTime}\n              dayEndTime={dayEndTime}\n            />\n          ))}\n          <div className=\"prod-plan__plan__columns__container\">\n            {this.props.devTeamMembers.map(member => {\n              if (!this.props.dailyGoalsColumn) {\n                return (\n                  <div key={member.id} className=\"prod-plan__plan__columns__error__column\">\n                    <span className=\"prod-plan__plan__columns__error__label\">\n                      Vous n'avez pas sélectionné de colonne 'Daily Goals'\n                    </span>\n                  </div>\n                );\n              }\n              return (\n                <PlanColumn\n                  key={member.id}\n                  dayStartTime={dayStartTime}\n                  dayEndTime={dayEndTime}\n                  member={member}\n                  cards={member.dailyCards}\n                />\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import ProdPlan from './ProdPlan';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { getTrelloUserDevTeam, getTrelloUserDailyGoalsColumn } from 'redux/TrelloUser';\n\nconst mapStateToProps = state => ({\n  devTeamMembers: getTrelloUserDevTeam(state),\n  dailyGoalsColumn: getTrelloUserDailyGoalsColumn(state),\n});\n\nconst mapDispatchToProps = {};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(withRouter(ProdPlan));\n","// @flow\nimport React from 'react';\nimport Menu from '../Menu';\nimport styles from './Dashboard.style';\nimport EditTeamPopin from '../EditTeamPopin';\nimport DevSelectionPopin from '../DevSelectionPopin';\nimport CardDescriptionPopin from '../CardDescriptionPopin';\nimport ProdPlan from '../ProdPlan';\n\nexport default class Dashboard extends React.Component {\n  render() {\n    return (\n      <div style={styles.dashboard}>\n        <Menu style={styles.menu} />\n        <ProdPlan />\n        {this.props.isEditTeamPopinOpen && <EditTeamPopin />}\n        {this.props.isDevSelectionPopinOpen && <DevSelectionPopin />}\n        {this.props.isCardDescriptionPopinOpen && <CardDescriptionPopin />}\n      </div>\n    );\n  }\n}\n","import Dashboard from './Dashboard';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport {\n  isEditTeamPopinOpen,\n  isDevSelectionPopinOpen,\n  isCardDescriptionPopinOpen,\n} from 'redux/App';\n\nconst mapStateToProps = state => ({\n  isEditTeamPopinOpen: isEditTeamPopinOpen(state),\n  isDevSelectionPopinOpen: isDevSelectionPopinOpen(state),\n  isCardDescriptionPopinOpen: isCardDescriptionPopinOpen(state),\n});\n\nconst mapDispatchToProps = {};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(withRouter(Dashboard));\n","import * as React from 'react';\n\nimport Dashboard from '../../components/Dashboard';\n\nexport default class Home extends React.Component {\n  render() {\n    return <Dashboard />;\n  }\n}\n","import { connect } from 'react-redux';\nimport Home from './Home';\n\nfunction mapStateToProps() {\n  return {};\n}\n\nfunction mapDispatchToProps() {\n  return {};\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Home);\n","// @flow\n// $FlowFixMe flow is not ready for Suspense or lazy today\nimport React, { Suspense } from 'react';\nimport { Route, Switch } from 'react-router';\n\nimport Home from './pages/Home';\n\nconst routes = () => (\n  <Suspense fallback={<div>Loading...</div>}>\n    <Switch>\n      <Route exact path=\"/\" component={Home} />\n    </Switch>\n  </Suspense>\n);\n\nexport default routes;\n","// @flow\nexport const flattenMessages = (nestedMessages, prefix = '') =>\n  Object.keys(nestedMessages).reduce((messages, key) => {\n    const value = nestedMessages[key];\n    const prefixedKey = prefix ? `${prefix}.${key}` : key;\n\n    if (typeof value === 'string') {\n      messages[prefixedKey] = value; // eslint-disable-line\n    } else {\n      Object.assign(messages, flattenMessages(value, prefixedKey));\n    }\n\n    return messages;\n  }, {});\n\nexport default flattenMessages;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"title\", null, \"Fichier 8\");\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"g\", null, React.createElement(\"g\", {\n  id: \"Calque_1-2\"\n}, React.createElement(\"path\", {\n  fill: \"currentColor\",\n  d: \"M57.3,19.3c0,2.1-0.2,4.2-0.7,6.3c-0.9,4.6-3,8.8-6.1,12.4c-1.7,2-3.7,3.6-5.8,5c-2.5,1.5-5.2,2.7-8,3.4 c-3.5,0.9-7.1,1.3-10.8,1.3h-7.3l-4.4,22.2c-0.1,0.4-0.3,0.7-0.5,1c-0.4,0.3-0.8,0.6-1.3,0.7c-0.8,0.2-1.5,0.3-2.3,0.4 c-0.9,0.1-2.1,0.1-3.4,0.1s-2.4,0-3.3-0.1c-0.7-0.1-1.4-0.2-2.1-0.4c-0.4-0.1-0.7-0.3-1-0.7c-0.2-0.3-0.2-0.7-0.1-1L12.6,7.3 c0.2-1.5,0.9-2.8,2.1-3.8c1.1-0.9,2.6-1.3,4-1.3h15.2c1.9,0,3.5,0.1,5,0.2c1.4,0.1,2.9,0.3,4.3,0.6c2,0.4,4,1.1,5.9,2 c1.7,0.8,3.2,2,4.4,3.4c1.2,1.4,2.2,3,2.8,4.7C57,15.1,57.3,17.2,57.3,19.3z M42.4,20.9c0-1.6-0.4-3.1-1.2-4.4 c-0.9-1.3-2.3-2.3-3.8-2.6c-0.8-0.3-1.7-0.4-2.5-0.5c-0.9-0.1-2-0.1-3.1-0.1h-6.2l-4.6,23.6h6.4c1.8,0,3.5-0.2,5.2-0.7 c1.4-0.4,2.6-1.1,3.8-1.9c1.1-0.8,2-1.7,2.8-2.8c1.5-2.1,2.5-4.4,2.9-7C42.3,23.2,42.4,22,42.4,20.9z\"\n}), React.createElement(\"path\", {\n  fill: \"currentColor\",\n  d: \"M98,62.2c0,0.3,0,0.7-0.1,1.2s-0.2,1.2-0.3,1.9s-0.3,1.4-0.5,2.2c-0.2,0.7-0.4,1.4-0.7,2.1 c-0.2,0.6-0.5,1.1-0.9,1.5c-0.3,0.4-0.8,0.6-1.2,0.6H62.4c-0.5,0-1.1-0.1-1.6-0.2c-0.5-0.2-0.9-0.4-1.2-0.8 c-0.3-0.4-0.5-0.9-0.6-1.4c-0.1-0.7-0.1-1.3,0-2L71.8,4.1c0-0.4,0.2-0.7,0.5-1c0.4-0.3,0.8-0.6,1.3-0.7c0.7-0.2,1.5-0.3,2.3-0.4 c0.9-0.1,2.1-0.1,3.5-0.1s2.5,0,3.4,0.1c0.7,0.1,1.4,0.2,2.1,0.4c0.4,0.1,0.8,0.4,1,0.7c0.2,0.3,0.2,0.7,0.1,1l-11.2,56h21.9 c0.4,0,0.9,0.2,1.1,0.6C97.9,61.2,98,61.7,98,62.2z\"\n}), React.createElement(\"path\", {\n  fill: \"currentColor\",\n  d: \"M162.6,66.5c0.2,1,0.2,2,0.3,3.1c0,0.7-0.3,1.3-0.8,1.7c-0.7,0.4-1.5,0.7-2.4,0.7 c-1.1,0.1-2.6,0.1-4.6,0.1c-1.4,0-2.5,0-3.3-0.1c-0.7,0-1.3-0.1-2-0.3c-0.4-0.1-0.8-0.3-1-0.6c-0.2-0.4-0.3-0.8-0.3-1.2l-1.9-14 h-26.1l-7.2,13.7c-0.2,0.5-0.5,0.9-0.9,1.3c-0.4,0.4-0.9,0.6-1.4,0.8c-0.8,0.2-1.6,0.3-2.4,0.4c-1,0.1-2.3,0.1-3.8,0.1 c-1.3,0-2.5,0-3.8-0.1c-0.7,0-1.3-0.3-1.8-0.8c-0.3-0.5-0.4-1.2-0.1-1.8c0.4-1,0.8-2,1.4-3l33.7-61.7c0.3-0.5,0.7-1,1.1-1.5 c0.4-0.4,1-0.7,1.5-0.9c0.9-0.2,1.8-0.3,2.7-0.4c1.1,0,2.6-0.1,4.4-0.1c2.1,0,3.8,0,5,0.1c1,0,1.9,0.1,2.9,0.4 c0.5,0.1,1,0.4,1.4,0.9c0.2,0.5,0.4,1.1,0.4,1.6L162.6,66.5z M141.5,15.5L141.5,15.5L126,45h19.6L141.5,15.5z\"\n}), React.createElement(\"path\", {\n  fill: \"currentColor\",\n  d: \"M229.4,66.8c-0.1,0.8-0.4,1.5-0.8,2.2c-0.4,0.6-0.9,1.2-1.4,1.6c-0.5,0.4-1.2,0.7-1.8,0.9 c-0.7,0.2-1.4,0.3-2.1,0.3h-6c-1.1,0-2.1-0.1-3.2-0.4c-0.8-0.2-1.5-0.7-2.1-1.3c-0.7-0.8-1.2-1.7-1.6-2.6 c-0.6-1.4-1.1-2.8-1.5-4.2l-10.3-31c-0.8-2.4-1.5-4.8-2.2-7.3c-0.7-2.4-1.3-4.9-1.9-7.3h-0.1c-0.4,2.8-0.8,5.6-1.2,8.4 c-0.5,2.7-1,5.5-1.6,8.2l-7.1,35.5c-0.1,0.4-0.2,0.7-0.5,1c-0.3,0.3-0.7,0.6-1.2,0.7c-0.7,0.2-1.4,0.4-2.1,0.4 c-1,0.1-2.1,0.2-3.1,0.2c-1,0-2.1,0-3.1-0.2c-0.6-0.1-1.3-0.2-1.9-0.4c-0.7-0.2-1.1-0.9-0.9-1.5c0,0,0-0.1,0-0.1l12.5-62.6 c0.2-1.5,1-2.9,2.2-3.8c1.1-0.8,2.5-1.3,3.9-1.3h7.4c1,0,2,0.1,3,0.4c0.8,0.3,1.5,0.7,2.1,1.3c0.6,0.7,1.2,1.4,1.6,2.3 c0.5,1.1,0.9,2.3,1.3,3.4L216.1,41c0.7,2,1.3,4,1.9,6s1.1,3.9,1.7,5.9h0.1c0.4-2.6,0.8-5.2,1.3-8c0.5-2.8,1-5.4,1.5-8l6.6-32.8 c0.1-0.4,0.2-0.7,0.5-0.9c0.3-0.3,0.7-0.5,1.2-0.7c0.7-0.2,1.3-0.3,2-0.4c0.8-0.1,1.9-0.1,3.1-0.1s2.3,0,3.1,0.1 c0.6,0.1,1.3,0.2,1.9,0.4c0.4,0.1,0.7,0.3,0.9,0.7c0.1,0.3,0.2,0.6,0.1,0.9L229.4,66.8z\"\n}), React.createElement(\"path\", {\n  fill: \"currentColor\",\n  d: \"M301.5,66.8c-0.1,0.8-0.4,1.5-0.8,2.2c-0.4,0.6-0.9,1.2-1.5,1.6c-0.5,0.4-1.2,0.7-1.8,0.9 c-0.7,0.2-1.4,0.3-2.1,0.3h-6c-1.1,0-2.1-0.1-3.2-0.4c-0.8-0.2-1.5-0.7-2.1-1.3c-0.7-0.8-1.2-1.7-1.6-2.6 c-0.6-1.4-1.1-2.8-1.5-4.2l-10.3-31c-0.8-2.4-1.5-4.8-2.2-7.3s-1.3-4.9-1.9-7.3h-0.1c-0.4,2.8-0.8,5.6-1.2,8.4s-1,5.5-1.6,8.2 l-7.1,35.5c-0.1,0.4-0.2,0.7-0.5,1c-0.3,0.3-0.8,0.6-1.2,0.7c-0.7,0.2-1.4,0.4-2.1,0.4c-1,0.1-2.1,0.2-3.1,0.2c-1,0-2.1,0-3.1-0.2 c-0.6-0.1-1.3-0.2-1.9-0.4c-0.4-0.1-0.7-0.4-0.8-0.7c-0.1-0.3-0.1-0.7,0-1l12.5-62.6c0.2-1.5,1-2.9,2.2-3.8 c1.1-0.8,2.5-1.3,3.9-1.3h7.4c1,0,2,0.1,3,0.4c0.8,0.3,1.5,0.7,2.1,1.3c0.6,0.7,1.2,1.4,1.6,2.3c0.5,1.1,0.9,2.3,1.3,3.4L288.3,41 c0.7,2,1.3,4,1.9,6s1.1,3.9,1.7,5.9h0.1c0.4-2.6,0.8-5.2,1.3-8s1-5.4,1.5-8l6.6-32.8c0.1-0.4,0.2-0.7,0.5-0.9 c0.3-0.3,0.7-0.6,1.1-0.7c0.7-0.2,1.3-0.3,2-0.4c0.8-0.1,1.9-0.1,3.1-0.1s2.3,0,3.1,0.1c0.6,0.1,1.3,0.2,1.9,0.4 c0.4,0.1,0.7,0.3,0.9,0.7c0.1,0.3,0.2,0.6,0.1,0.9L301.5,66.8z\"\n}), React.createElement(\"path\", {\n  fill: \"currentColor\",\n  d: \"M385.4,25.5c0,3.4-0.3,6.8-0.9,10.1c-0.6,3.6-1.5,7.2-2.8,10.7c-1.3,3.6-3,7-5,10.1 c-2.1,3.2-4.6,6.1-7.6,8.5c-3.1,2.5-6.7,4.5-10.5,5.9c-4.4,1.5-9,2.3-13.7,2.2c-3.9,0.1-7.7-0.4-11.5-1.4c-3.1-0.8-6-2.4-8.4-4.5 c-2.3-2.1-4.1-4.7-5.2-7.6c-1.2-3.4-1.8-7.1-1.7-10.7c0-3.5,0.3-7.1,0.9-10.6c0.6-3.7,1.6-7.3,2.9-10.8c1.3-3.5,3-6.9,5.1-10.1 c2.1-3.2,4.7-6,7.6-8.4c3.1-2.5,6.6-4.5,10.4-5.8c8.1-2.6,16.8-2.8,25-0.6c3.1,0.9,6,2.4,8.4,4.5c2.3,2.1,4.1,4.7,5.1,7.6 C384.9,18.1,385.5,21.8,385.4,25.5z M370.5,26.8c0-2-0.2-4-0.7-5.9c-0.4-1.7-1.2-3.2-2.3-4.5c-1.1-1.3-2.6-2.2-4.2-2.8 c-4.8-1.6-10-1.3-14.6,0.8c-2.3,1.2-4.4,2.8-6.2,4.7c-1.8,2-3.3,4.2-4.4,6.6c-1.2,2.4-2.1,5-2.8,7.6c-0.7,2.5-1.2,5-1.5,7.5 c-0.3,2.1-0.4,4.3-0.5,6.4c0,2,0.2,4,0.7,6c0.8,3.4,3.3,6.1,6.6,7.2c2.1,0.7,4.2,1,6.4,1c2.8,0.1,5.6-0.6,8.2-1.8 c2.3-1.1,4.4-2.7,6.1-4.6c1.8-2,3.2-4.2,4.4-6.6c1.2-2.4,2.1-4.9,2.9-7.5c0.7-2.4,1.2-4.9,1.5-7.5C370.3,31.2,370.5,29,370.5,26.8 z\"\n}), React.createElement(\"path\", {\n  fill: \"currentColor\",\n  d: \"M447.7,17.4c0,2.3-0.3,4.6-0.9,6.8c-0.6,2.3-1.7,4.4-3,6.4c-1.4,2.1-3.2,3.9-5.3,5.4 c-2.4,1.7-5.1,3-7.9,3.9c1.9,0.8,3.4,2.2,4.3,4c1.4,2.6,2.3,5.4,2.9,8.3l2.9,14.1c0.1,0.8,0.3,1.5,0.4,2.1 c0.1,0.5,0.1,1.1,0.1,1.6c0,0.3-0.1,0.7-0.4,0.9c-0.4,0.3-0.8,0.5-1.3,0.6c-0.8,0.2-1.6,0.4-2.5,0.5c-1,0.1-2.4,0.1-4,0.1 s-2.7,0-3.6-0.1c-0.7-0.1-1.4-0.2-2.1-0.4c-0.4-0.1-0.8-0.4-1-0.8c-0.2-0.4-0.3-0.7-0.4-1.1l-2.7-15.5c-0.3-1.6-0.7-3.2-1.2-4.7 c-0.4-1.2-1-2.4-1.8-3.5c-0.7-0.9-1.7-1.6-2.8-2c-1.2-0.5-2.6-0.7-3.9-0.7h-4.4l-5.3,26.5c-0.1,0.4-0.3,0.7-0.5,1 c-0.4,0.3-0.8,0.6-1.3,0.7c-0.7,0.2-1.5,0.3-2.3,0.4c-0.9,0.1-2.1,0.1-3.4,0.1s-2.5,0-3.4-0.1c-0.7-0.1-1.4-0.2-2.1-0.4 c-0.4-0.1-0.7-0.3-1-0.7c-0.2-0.3-0.2-0.7-0.1-1l12.7-63.2c0.2-1.3,0.8-2.6,1.9-3.4c1-0.7,2.2-1,3.4-1h18.6c3,0,5.9,0.3,8.8,0.9 c2.4,0.5,4.7,1.5,6.7,2.8c1.8,1.2,3.3,2.8,4.3,4.7C447.2,12.8,447.7,15.1,447.7,17.4z M432.5,20c0-1-0.2-1.9-0.5-2.8 c-0.3-0.9-0.9-1.6-1.6-2.2c-0.9-0.7-1.9-1.2-2.9-1.4c-1.4-0.4-2.9-0.5-4.3-0.5h-8l-3.9,19.7h6.7c2.3,0.1,4.6-0.3,6.8-1.1 c1.7-0.7,3.2-1.7,4.5-3c1.1-1.2,2-2.5,2.5-4.1C432.3,23.1,432.5,21.5,432.5,20z\"\n}), React.createElement(\"path\", {\n  fill: \"currentColor\",\n  d: \"M526.6,18.8c0.1-2.1-0.8-4.2-2.3-5.6c-1.5-1.4-4.1-2.1-7.7-2.1c-2.6,0-5.2,0.3-7.8,0.8 c-3.2,0.7-6.3,1.6-9.4,2.6l2.3-11.1c2.5-1.1,5.2-1.9,7.8-2.5c3.1-0.7,6.3-1,9.5-1c3.1-0.1,6.2,0.4,9.2,1.3c2.4,0.7,4.6,2,6.4,3.6 c1.7,1.5,2.9,3.4,3.8,5.4c0.8,2.2,1.3,4.5,1.2,6.8c0.1,4.3-1.1,8.6-3.3,12.3c-2.4,3.7-5.9,6.5-10,8v0.2c2.7,0.8,5,2.4,6.6,4.7 c1.6,2.4,2.4,5.2,2.3,8c0.1,7.5-3.1,14.7-8.8,19.5c-2.9,2.4-6.1,4.2-9.7,5.4c-3.9,1.3-7.9,1.9-12,1.9c-3.5,0-6.9-0.4-10.3-1.2 c-2.6-0.6-5.2-1.6-7.5-3l2.2-10.7c2.2,1.2,4.6,2.2,7.1,2.8c2.5,0.7,5.1,1,7.7,1c2.7,0.1,5.4-0.4,7.9-1.2c2.1-0.7,4-1.8,5.7-3.2 c1.5-1.3,2.7-2.9,3.5-4.7c0.8-1.8,1.2-3.7,1.2-5.6c0.1-2.3-0.8-4.5-2.5-6c-1.7-1.5-4.2-2.3-7.7-2.3h-10.5l2.3-11h6.7 c2.6,0,5.2-0.4,7.7-1.2c1.9-0.6,3.6-1.7,5-3c1.2-1.2,2.2-2.7,2.8-4.3C526.3,22.1,526.6,20.5,526.6,18.8z\"\n}), React.createElement(\"path\", {\n  fill: \"currentColor\",\n  d: \"M587,52.9c5.4-5.7,11.4-3.5,17.1-2.7c3.3,0.5,5.8-0.1,8.2-2.3c3-2.7,6.1-5.3,9.3-7.8 c2.8-2.2,2.7-4.3,0-6.3c-6.3-4.7-12.6-9.3-18.8-14c-0.9-0.8-1.8-1.7-2.6-2.7c0.9-0.8,1.9-1.6,2.9-2.3c4.1-2.3,8.3-2.4,12.8-1.1 c7.1,2.2,14.3,4,21.4,6.2c2.5,0.9,5.3,0.3,7.2-1.5c6.2-5,12.2-10.2,18.8-14.6c3.2-2.1,7.3-3,11.2-3.8c2.6-0.6,4.4,2.3,3.1,5.2 c-1.4,3.4-3.4,6.5-5.8,9.1c-11.3,11-23.2,21.4-34.5,32.4c-8.1,7.9-18.6,11.4-28.1,16.7c-1.2,0.5-2.5,0.5-3.7,0 C599.2,60.1,593.2,56.5,587,52.9z\"\n}), React.createElement(\"path\", {\n  fill: \"currentColor\",\n  d: \"M642.2,53.1l10-9.1c5.9,3.9,11.7,8,17.6,11.7c13.8,8.6,26.4,1.1,31.7-7.3c6.8-11.1,3.4-25.6-7.8-32.5 c-2.2-1.4-4.7-2.4-7.2-2.9c-0.7-0.2-1.5-0.3-2.1-0.5L687.7,0c18.2,3.5,30.9,18.9,30.2,36.9c-0.7,18.4-14.4,33.1-33,35.4 c-6,0.8-12.1-0.5-17.4-3.5C659.1,64,651,58.6,642.2,53.1z\"\n}), React.createElement(\"path\", {\n  fill: \"currentColor\",\n  d: \"M589.4,13.3c-11.9-1.9-23.2,5.7-26,17.4c-3.2,12.4,3.9,24.1,16.2,28.7c6.7,2.5,12.8,6.6,19.5,10.2 c-12.1,7-29.8,2.9-40.1-8.8c-11.7-13.2-12.3-32.9-1.4-46.8C566.7,2.2,585.7-5,601,4L589.4,13.3z\"\n}), React.createElement(\"path\", {\n  fill: \"currentColor\",\n  d: \"M803.3,19.5c-6.2-3.9-12-7.7-17.8-11.3c-5-4.2-11-7-17.4-8.2l-0.1,0.3c-2.5-0.3-5-0.4-7.4-0.1 c-18.6,2.3-32.3,17-33,35.4c-0.2,3.9,0.3,7.8,1.4,11.5l-6.5,5.9c6.2,3.9,12,7.7,17.8,11.3c5,4.2,11,7,17.4,8.2l0.1-0.3 c2.5,0.3,5,0.4,7.4,0.1c18.6-2.3,32.3-17,33-35.4c0.2-3.9-0.3-7.8-1.4-11.6L803.3,19.5z M781.8,48.3c-5.2,8.5-17.8,15.9-31.6,7.4 c-9.8-7.3-12.5-20.9-6.1-31.4c5.2-8.4,17.8-15.9,31.6-7.4C785.6,24.2,788.2,37.8,781.8,48.3z\"\n})));\n\nvar SvgComponent = function SvgComponent(props) {\n  return React.createElement(\"svg\", _extends({\n    version: 1.1,\n    id: \"Calque_1\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 803.3 77.2\",\n    enableBackground: \"new 0 0 803.3 77.2\",\n    xmlSpace: \"preserve\"\n  }, props), _ref, _ref2);\n};\n\nexport default __webpack_public_path__ + \"static/media/plannor3000-logo.45f80eb7.svg\";\nexport { SvgComponent as ReactComponent };","// @flow\nimport React from 'react';\nimport { IntlProvider, addLocaleData } from 'react-intl';\nimport fr from 'react-intl/locale-data/fr';\nimport en from 'react-intl/locale-data/en';\nimport { ReactComponent as Logo } from '../../assets/plannor3000-logo.svg';\nimport './Header.scss'\n\nimport frMessages from 'translations/fr.json';\nimport enMessages from 'translations/en.json';\nimport { flattenMessages } from 'services/i18n/intl';\nimport styles from './Header.style';\n\nconst locales = {\n  fr: flattenMessages(frMessages),\n  en: flattenMessages(enMessages),\n};\n\naddLocaleData([...fr, ...en]);\n\nexport default class Header extends React.Component {\n  render() {\n    return (\n      <IntlProvider locale=\"fr\" messages={locales.fr}>\n        <div className=\"header\">\n          <Logo className=\"header__logo\" />\n        </div>\n      </IntlProvider>\n    );\n  }\n}\n","const styles = {\n  rootContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100vh',\n  },\n};\n\nexport default styles;\n","// @flow\nimport React from 'react';\nimport { IntlProvider, addLocaleData } from 'react-intl';\nimport fr from 'react-intl/locale-data/fr';\nimport en from 'react-intl/locale-data/en';\n\nimport frMessages from 'translations/fr.json';\nimport enMessages from 'translations/en.json';\nimport { flattenMessages } from 'services/i18n/intl';\n\nimport Header from '../Header';\nimport styles from './Root.style';\n\nconst locales = {\n  fr: flattenMessages(frMessages),\n  en: flattenMessages(enMessages),\n};\n\naddLocaleData([...fr, ...en]);\n\n// type Props = {\n//   children: React$Element<*>,\n// };\n\nexport default class Root extends React.Component {\n  render() {\n    const { children } = this.props;\n    return (\n      <IntlProvider locale=\"fr\" messages={locales.fr}>\n        <div style={styles.rootContainer}>\n          <Header />\n          {children}\n        </div>\n      </IntlProvider>\n    );\n  }\n}\n","// @flow\nimport Root from './Root';\n\nexport default Root;\n","// @flow\n/**\n * Combine all reducers in this file and export the combined reducers.\n * If we were to do this in store.js, reducers wouldn't be hot reloadable.\n */\n\nimport { combineReducers } from 'redux';\n\n/**\n * Example of the Avatar module which should export a reducer.\n */\n\nimport trelloUserReducer, { initialState as trelloUserState } from './TrelloUser/reducer';\nimport appReducer, { initialState as appState } from './App/reducer';\n\n// Combine all reducers you may have here\nexport default combineReducers({\n  trelloUserState: trelloUserReducer,\n  appState: appReducer,\n});\n\nexport const initialStates = {\n  trelloUserState,\n  appState,\n};\n","import './App.scss';\nimport React from 'react';\n\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\n\nimport theme from './theme';\nimport Routes from './routes';\nimport Root from './components/Root';\nimport configureStore from './redux/plannorStore';\n\nconst RootComponentWithRoutes = () => (\n  <Root>\n    <Routes />\n  </Root>\n);\n\nconst appBasename = process.env.NODE_ENV === 'production' ? '/plannor3000' : '';\n\nconst store = configureStore();\n\nexport default class App extends React.Component {\n  render() {\n    Notification.requestPermission(function(status) {\n      console.log('Notification permission status:', status);\n    });\n\n    return (\n      <Provider store={store}>\n        <MuiThemeProvider theme={theme}>\n          <Router basename={appBasename}>\n            <Route path=\"/\" component={RootComponentWithRoutes} />\n          </Router>\n        </MuiThemeProvider>\n      </Provider>\n    );\n  }\n}\n","import { createStore, applyMiddleware, compose } from 'redux';\n// See\n// https://github.com/gaearon/redux-thunk and http://redux.js.org/docs/advanced/AsyncActions.html\nimport thunkMiddleware from 'redux-thunk';\nimport reducers, { initialStates } from './reducers';\n\nexport default function configureStore(props, context) {\n  // This is how we get initial props from Symfony into redux.\n  const { trelloUserState } = initialStates;\n\n  // Redux expects to initialize the store using an Object\n  const initialState = {\n    trelloUserState: { ...trelloUserState },\n  };\n\n  // use devtools if we are in a browser and the extension is enabled\n  let composeEnhancers =\n    (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\n  // middlewares\n  let middlewares = [thunkMiddleware];\n\n  const store = createStore(\n    reducers,\n    initialState,\n    composeEnhancers(applyMiddleware(...middlewares)),\n  );\n  return store;\n}\n","/* eslint-disable */\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ',\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'babel-polyfill';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport createBrowserHistory from 'history/createBrowserHistory';\n\nimport App from './App';\nimport { register } from './serviceWorker';\nimport configureStore from './redux/store';\n\nconst history = createBrowserHistory();\nconst { store, persistor } = configureStore(history);\n\nconst rootEl = document.getElementById('root');\n\nconst serviceWorkerConfig = {};\nif (rootEl) {\n  ReactDOM.render(<App history={history} store={store} persistor={persistor} />, rootEl);\n  register(serviceWorkerConfig);\n}\n\nif (module.hot) {\n  module.hot.accept('./App', () => {\n    const NextApp = require('./App').default; // eslint-disable-line\n    if (rootEl) {\n      ReactDOM.render(<NextApp history={history} store={store} />, rootEl);\n    }\n  });\n}\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport reducers, { initialStates } from './reducers';\nimport thunkMiddleware from 'redux-thunk';\n\nexport default function configureStore() {\n  // use devtools if we are in a browser and the extension is enabled\n  let composeEnhancers =\n    (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\n  // middlewares\n  let middlewares = [thunkMiddleware];\n\n  const store = createStore(\n    reducers,\n    initialStates,\n    composeEnhancers(applyMiddleware(...middlewares)),\n  );\n  return store;\n}\n"],"sourceRoot":""}